ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_CSHL.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	CapSense_rawFilterData1,10,4
  18              		.comm	CapSense_rawFilterData2,10,4
  19              		.global	CapSense_sensorBaseline
  20              		.bss
  21              		.align	2
  22              		.type	CapSense_sensorBaseline, %object
  23              		.size	CapSense_sensorBaseline, 10
  24              	CapSense_sensorBaseline:
  25 0000 00000000 		.space	10
  25      00000000 
  25      0000
  26              		.global	CapSense_sensorBaselineLow
  27 000a 0000     		.align	2
  28              		.type	CapSense_sensorBaselineLow, %object
  29              		.size	CapSense_sensorBaselineLow, 5
  30              	CapSense_sensorBaselineLow:
  31 000c 00000000 		.space	5
  31      00
  32              		.global	CapSense_sensorSignal
  33 0011 000000   		.align	2
  34              		.type	CapSense_sensorSignal, %object
  35              		.size	CapSense_sensorSignal, 5
  36              	CapSense_sensorSignal:
  37 0014 00000000 		.space	5
  37      00
  38              		.global	CapSense_sensorOnMask
  39 0019 000000   		.align	2
  40              		.type	CapSense_sensorOnMask, %object
  41              		.size	CapSense_sensorOnMask, 1
  42              	CapSense_sensorOnMask:
  43 001c 00       		.space	1
  44              		.comm	CapSense_lowBaselineResetCnt,5,4
  45              		.global	CapSense_lowBaselineReset
  46              		.data
  47              		.align	2
  48              		.type	CapSense_lowBaselineReset, %object
  49              		.size	CapSense_lowBaselineReset, 5
  50              	CapSense_lowBaselineReset:
  51 0000 1E       		.byte	30
  52 0001 1E       		.byte	30
  53 0002 1E       		.byte	30
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 2


  54 0003 1E       		.byte	30
  55 0004 1E       		.byte	30
  56              		.global	CapSense_enableRawFilters
  57              		.type	CapSense_enableRawFilters, %object
  58              		.size	CapSense_enableRawFilters, 1
  59              	CapSense_enableRawFilters:
  60 0005 01       		.byte	1
  61              		.comm	CapSense_fingerThreshold,5,4
  62              		.comm	CapSense_noiseThreshold,5,4
  63              		.comm	CapSense_negativeNoiseThreshold,5,4
  64              		.comm	CapSense_hysteresis,5,4
  65              		.global	CapSense_debounce
  66 0006 0000     		.align	2
  67              		.type	CapSense_debounce, %object
  68              		.size	CapSense_debounce, 5
  69              	CapSense_debounce:
  70 0008 05       		.byte	5
  71 0009 05       		.byte	5
  72 000a 05       		.byte	5
  73 000b 05       		.byte	5
  74 000c 05       		.byte	5
  75 000d 000000   		.bss
  76 001d 000000   		.align	2
  77              	CapSense_debounceCounter:
  78 0020 00000000 		.space	6
  78      0000
  79              		.global	CapSense_rawDataIndex
  80 0026 0000     		.section	.rodata
  81              		.align	2
  82              		.type	CapSense_rawDataIndex, %object
  83              		.size	CapSense_rawDataIndex, 5
  84              	CapSense_rawDataIndex:
  85 0000 00       		.byte	0
  86 0001 01       		.byte	1
  87 0002 02       		.byte	2
  88 0003 03       		.byte	3
  89 0004 04       		.byte	4
  90              		.global	CapSense_numberOfSensors
  91 0005 000000   		.align	2
  92              		.type	CapSense_numberOfSensors, %object
  93              		.size	CapSense_numberOfSensors, 5
  94              	CapSense_numberOfSensors:
  95 0008 01       		.byte	1
  96 0009 01       		.byte	1
  97 000a 01       		.byte	1
  98 000b 01       		.byte	1
  99 000c 01       		.byte	1
 100 000d 000000   		.section	.text.CapSense_BaseInit,"ax",%progbits
 101              		.align	2
 102              		.global	CapSense_BaseInit
 103              		.code	16
 104              		.thumb_func
 105              		.type	CapSense_BaseInit, %function
 106              	CapSense_BaseInit:
 107              	.LFB36:
 108              		.file 1 ".\\Generated_Source\\PSoC4\\CapSense_CSHL.c"
   1:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 3


   2:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Version 2.40
   4:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   5:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   9:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
  11:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  18:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_PVT.h"
  20:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  21:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* SmartSense functions */
  22:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  23:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern void CapSense_UpdateThresholds(uint32 sensor);
  24:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  25:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  26:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Storage of filters data */
  27:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
  28:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) )
  29:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  30:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  31:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  32:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  33:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #elif ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER))   || \
  34:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER))   || \
  35:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
  36:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))   || \
  37:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)) )
  38:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  39:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  40:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  41:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  42:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         */
  43:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  44:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  45:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint8 CapSense_sensorEnableMask[CapSense_TOTAL_SENSOR_MASK];
  46:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  48:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
  49:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE];
  50:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
  51:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  52:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  53:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  54:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  55:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[CapSense_TOTAL_SENSOR_MASK] = {0u};
  56:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  57:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  58:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineReset[CapSense_TOTAL_SENSOR_COUNT] = {
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 4


  59:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     30u, 30u, 30u, 30u, 30u, 
  60:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  61:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  62:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  63:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  64:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  65:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern CapSense_CONFIG_TYPE_P4_v2_40 CapSense_config;
  66:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  67:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  68:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
  69:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
  70:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
  71:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  72:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Generated by Customizer */
  73:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[CapSense_THRESHOLD_TBL_SIZE];
  74:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  75:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  76:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  77:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_negativeNoiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  78:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  79:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_hysteresis[CapSense_WIDGET_PARAM_TBL_SIZE];
  80:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  81:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  82:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, 5u, 5u, 5u, 5u, 
  83:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  84:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  85:.\Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_debounceCounter[] = {
  86:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 0u, 0u, 0u, 0u, 0u, 
  87:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  88:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  89:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_rawDataIndex[] = {
  90:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* Note1__BTN */
  91:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Note2__BTN */
  92:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     2u, /* Note3__BTN */
  93:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     3u, /* Note4__BTN */
  94:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     4u, /* Note5__BTN */
  95:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  96:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  97:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_numberOfSensors[] = {
  98:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Note1__BTN */
  99:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Note2__BTN */
 100:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Note3__BTN */
 101:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Note4__BTN */
 102:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Note5__BTN */
 103:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
 104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 107:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 108:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 109:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 110:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 112:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 113:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 114:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value.
 115:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 5


 116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and
 118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an
 119:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 120:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 121:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 122:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 123:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 124:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 126:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 127:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 128:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store the baseline value.
 129:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store the fraction byte of
 130:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the baseline value.
 131:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store a difference between
 132:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 133:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store a previous sample of
 134:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 135:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before a previous sample
 136:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 137:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 138:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 139:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 140:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 141:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 142:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_BaseInit(uint32 sensor)
 143:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 109              		.loc 1 143 0
 110              		.cfi_startproc
 111 0000 80B5     		push	{r7, lr}
 112              		.cfi_def_cfa_offset 8
 113              		.cfi_offset 7, -8
 114              		.cfi_offset 14, -4
 115 0002 84B0     		sub	sp, sp, #16
 116              		.cfi_def_cfa_offset 24
 117 0004 00AF     		add	r7, sp, #0
 118              		.cfi_def_cfa_register 7
 119 0006 7860     		str	r0, [r7, #4]
 144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
 120              		.loc 1 146 0
 121 0008 0F23     		mov	r3, #15
 122 000a FB18     		add	r3, r7, r3
 123 000c 1949     		ldr	r1, .L2
 124 000e 7A68     		ldr	r2, [r7, #4]
 125 0010 8A18     		add	r2, r1, r2
 126 0012 1278     		ldrb	r2, [r2]
 127 0014 1A70     		strb	r2, [r3]
 147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 148:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 debounceIndex;
 151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 152:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 6


 154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 157:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 158:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline */
 160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
 128              		.loc 1 160 0
 129 0016 184B     		ldr	r3, .L2+4
 130 0018 7A68     		ldr	r2, [r7, #4]
 131 001a 5200     		lsl	r2, r2, #1
 132 001c D15A     		ldrh	r1, [r2, r3]
 133 001e 174B     		ldr	r3, .L2+8
 134 0020 7A68     		ldr	r2, [r7, #4]
 135 0022 5200     		lsl	r2, r2, #1
 136 0024 D152     		strh	r1, [r2, r3]
 161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
 137              		.loc 1 161 0
 138 0026 164A     		ldr	r2, .L2+12
 139 0028 7B68     		ldr	r3, [r7, #4]
 140 002a D318     		add	r3, r2, r3
 141 002c 0022     		mov	r2, #0
 142 002e 1A70     		strb	r2, [r3]
 162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
 143              		.loc 1 162 0
 144 0030 144A     		ldr	r2, .L2+16
 145 0032 7B68     		ldr	r3, [r7, #4]
 146 0034 D318     		add	r3, r2, r3
 147 0036 0022     		mov	r2, #0
 148 0038 1A70     		strb	r2, [r3]
 163:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 164:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_debounceCounter[widget] =  CapSense_debounce[widget];
 149              		.loc 1 164 0
 150 003a 0F23     		mov	r3, #15
 151 003c FB18     		add	r3, r7, r3
 152 003e 1B78     		ldrb	r3, [r3]
 153 0040 0F22     		mov	r2, #15
 154 0042 BA18     		add	r2, r7, r2
 155 0044 1278     		ldrb	r2, [r2]
 156 0046 1049     		ldr	r1, .L2+20
 157 0048 895C     		ldrb	r1, [r1, r2]
 158 004a 104A     		ldr	r2, .L2+24
 159 004c D154     		strb	r1, [r2, r3]
 165:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 166:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) ||\
 168:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)))
 169:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 160              		.loc 1 170 0
 161 004e 0A4B     		ldr	r3, .L2+4
 162 0050 7A68     		ldr	r2, [r7, #4]
 163 0052 5200     		lsl	r2, r2, #1
 164 0054 D15A     		ldrh	r1, [r2, r3]
 165 0056 0E4B     		ldr	r3, .L2+28
 166 0058 7A68     		ldr	r2, [r7, #4]
 167 005a 5200     		lsl	r2, r2, #1
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 7


 168 005c D152     		strh	r1, [r2, r3]
 171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 169              		.loc 1 171 0
 170 005e 064B     		ldr	r3, .L2+4
 171 0060 7A68     		ldr	r2, [r7, #4]
 172 0062 5200     		lsl	r2, r2, #1
 173 0064 D15A     		ldrh	r1, [r2, r3]
 174 0066 0B4B     		ldr	r3, .L2+32
 175 0068 7A68     		ldr	r2, [r7, #4]
 176 006a 5200     		lsl	r2, r2, #1
 177 006c D152     		strh	r1, [r2, r3]
 172:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 178:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 179:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 180:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* No Raw filters */
 183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 185:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             */
 186:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 191:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 178              		.loc 1 191 0
 179 006e BD46     		mov	sp, r7
 180 0070 04B0     		add	sp, sp, #16
 181              		@ sp needed
 182 0072 80BD     		pop	{r7, pc}
 183              	.L3:
 184              		.align	2
 185              	.L2:
 186 0074 00000000 		.word	CapSense_widgetNumber
 187 0078 00000000 		.word	CapSense_sensorRaw
 188 007c 00000000 		.word	CapSense_sensorBaseline
 189 0080 00000000 		.word	CapSense_sensorBaselineLow
 190 0084 00000000 		.word	CapSense_sensorSignal
 191 0088 00000000 		.word	CapSense_debounce
 192 008c 20000000 		.word	CapSense_debounceCounter
 193 0090 00000000 		.word	CapSense_rawFilterData1
 194 0094 00000000 		.word	CapSense_rawFilterData2
 195              		.cfi_endproc
 196              	.LFE36:
 197              		.size	CapSense_BaseInit, .-CapSense_BaseInit
 198              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
 199              		.align	2
 200              		.global	CapSense_InitializeSensorBaseline
 201              		.code	16
 202              		.thumb_func
 203              		.type	CapSense_InitializeSensorBaseline, %function
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 8


 204              	CapSense_InitializeSensorBaseline:
 205              	.LFB37:
 192:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 193:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 194:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 195:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 196:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 197:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 198:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 199:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 200:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair
 201:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the
 202:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if
 203:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  enabled.
 204:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 205:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 206:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 207:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 212:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 215:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 216:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 217:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 218:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint32 sensor)
 219:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 206              		.loc 1 219 0
 207              		.cfi_startproc
 208 0000 80B5     		push	{r7, lr}
 209              		.cfi_def_cfa_offset 8
 210              		.cfi_offset 7, -8
 211              		.cfi_offset 14, -4
 212 0002 82B0     		sub	sp, sp, #8
 213              		.cfi_def_cfa_offset 16
 214 0004 00AF     		add	r7, sp, #0
 215              		.cfi_def_cfa_register 7
 216 0006 7860     		str	r0, [r7, #4]
 220:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Scan sensor */
 221:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
 217              		.loc 1 221 0
 218 0008 7B68     		ldr	r3, [r7, #4]
 219 000a 181C     		mov	r0, r3
 220 000c FFF7FEFF 		bl	CapSense_ScanSensor
 222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 221              		.loc 1 222 0
 222 0010 C046     		mov	r8, r8
 223              	.L5:
 224              		.loc 1 222 0 is_stmt 0 discriminator 1
 225 0012 FFF7FEFF 		bl	CapSense_IsBusy
 226 0016 031E     		sub	r3, r0, #0
 227 0018 FBD1     		bne	.L5
 223:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 224:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 9


 225:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 226:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 227:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */
 228:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_BaseInit(sensor);
 228              		.loc 1 228 0 is_stmt 1
 229 001a 7B68     		ldr	r3, [r7, #4]
 230 001c 181C     		mov	r0, r3
 231 001e FFF7FEFF 		bl	CapSense_BaseInit
 229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 232              		.loc 1 229 0
 233 0022 BD46     		mov	sp, r7
 234 0024 02B0     		add	sp, sp, #8
 235              		@ sp needed
 236 0026 80BD     		pop	{r7, pc}
 237              		.cfi_endproc
 238              	.LFE37:
 239              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 240              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 241              		.align	2
 242              		.global	CapSense_InitializeAllBaselines
 243              		.code	16
 244              		.thumb_func
 245              		.type	CapSense_InitializeAllBaselines, %function
 246              	CapSense_InitializeAllBaselines:
 247              	.LFB38:
 230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 231:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 232:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 233:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 234:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 235:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 236:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 237:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to load the
 238:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning
 239:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for
 240:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 241:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 242:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 243:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 244:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 245:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 246:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 247:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 249:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 250:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 254:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 255:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 256:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 248              		.loc 1 256 0
 249              		.cfi_startproc
 250 0000 80B5     		push	{r7, lr}
 251              		.cfi_def_cfa_offset 8
 252              		.cfi_offset 7, -8
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 10


 253              		.cfi_offset 14, -4
 254 0002 82B0     		sub	sp, sp, #8
 255              		.cfi_def_cfa_offset 16
 256 0004 00AF     		add	r7, sp, #0
 257              		.cfi_def_cfa_register 7
 257:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 259:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 258              		.loc 1 259 0
 259 0006 0023     		mov	r3, #0
 260 0008 7B60     		str	r3, [r7, #4]
 261 000a 06E0     		b	.L7
 262              	.L8:
 260:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 261:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_InitializeSensorBaseline(i);
 263              		.loc 1 261 0 discriminator 3
 264 000c 7B68     		ldr	r3, [r7, #4]
 265 000e 181C     		mov	r0, r3
 266 0010 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 259:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 267              		.loc 1 259 0 discriminator 3
 268 0014 7B68     		ldr	r3, [r7, #4]
 269 0016 0133     		add	r3, r3, #1
 270 0018 7B60     		str	r3, [r7, #4]
 271              	.L7:
 259:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 272              		.loc 1 259 0 is_stmt 0 discriminator 1
 273 001a 7B68     		ldr	r3, [r7, #4]
 274 001c 042B     		cmp	r3, #4
 275 001e F5D9     		bls	.L8
 262:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 276              		.loc 1 263 0 is_stmt 1
 277 0020 BD46     		mov	sp, r7
 278 0022 02B0     		add	sp, sp, #8
 279              		@ sp needed
 280 0024 80BD     		pop	{r7, pc}
 281              		.cfi_endproc
 282              	.LFE38:
 283              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 284 0026 C046     		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 285              		.align	2
 286              		.global	CapSense_InitializeEnabledBaselines
 287              		.code	16
 288              		.thumb_func
 289              		.type	CapSense_InitializeEnabledBaselines, %function
 290              	CapSense_InitializeEnabledBaselines:
 291              	.LFB39:
 264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the
 272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 11


 273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process.
 274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 278:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 281:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 283:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorRaw[] - used to store the sensors raw data.
 284:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 285:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 286:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 287:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 288:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 289:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 290:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 291:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 292              		.loc 1 291 0
 293              		.cfi_startproc
 294 0000 80B5     		push	{r7, lr}
 295              		.cfi_def_cfa_offset 8
 296              		.cfi_offset 7, -8
 297              		.cfi_offset 14, -4
 298 0002 82B0     		sub	sp, sp, #8
 299              		.cfi_def_cfa_offset 16
 300 0004 00AF     		add	r7, sp, #0
 301              		.cfi_def_cfa_register 7
 292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 294:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 302              		.loc 1 295 0
 303 0006 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 304              		.loc 1 296 0
 305 000a C046     		mov	r8, r8
 306              	.L10:
 307              		.loc 1 296 0 is_stmt 0 discriminator 1
 308 000c FFF7FEFF 		bl	CapSense_IsBusy
 309 0010 031E     		sub	r3, r0, #0
 310 0012 FBD1     		bne	.L10
 297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 298:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 299:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 300:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 311              		.loc 1 301 0 is_stmt 1
 312 0014 0023     		mov	r3, #0
 313 0016 7B60     		str	r3, [r7, #4]
 314 0018 11E0     		b	.L11
 315              	.L13:
 302:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 303:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 316              		.loc 1 303 0
 317 001a 0C4A     		ldr	r2, .L14
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 12


 318 001c 7B68     		ldr	r3, [r7, #4]
 319 001e 101C     		mov	r0, r2
 320 0020 191C     		mov	r1, r3
 321 0022 FFF7FEFF 		bl	CapSense_GetBitValue
 322 0026 031C     		mov	r3, r0
 323 0028 3B60     		str	r3, [r7]
 304:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 306:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(isSensorEnabled != 0u)
 324              		.loc 1 306 0
 325 002a 3B68     		ldr	r3, [r7]
 326 002c 002B     		cmp	r3, #0
 327 002e 03D0     		beq	.L12
 307:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 308:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Initialize baselines */
 309:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(i);
 328              		.loc 1 309 0
 329 0030 7B68     		ldr	r3, [r7, #4]
 330 0032 181C     		mov	r0, r3
 331 0034 FFF7FEFF 		bl	CapSense_BaseInit
 332              	.L12:
 301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 333              		.loc 1 301 0 discriminator 2
 334 0038 7B68     		ldr	r3, [r7, #4]
 335 003a 0133     		add	r3, r3, #1
 336 003c 7B60     		str	r3, [r7, #4]
 337              	.L11:
 301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 338              		.loc 1 301 0 is_stmt 0 discriminator 1
 339 003e 7B68     		ldr	r3, [r7, #4]
 340 0040 042B     		cmp	r3, #4
 341 0042 EAD9     		bls	.L13
 310:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 311:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 342              		.loc 1 312 0 is_stmt 1
 343 0044 BD46     		mov	sp, r7
 344 0046 02B0     		add	sp, sp, #8
 345              		@ sp needed
 346 0048 80BD     		pop	{r7, pc}
 347              	.L15:
 348 004a C046     		.align	2
 349              	.L14:
 350 004c 00000000 		.word	CapSense_sensorEnableMask
 351              		.cfi_endproc
 352              	.LFE39:
 353              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 354              		.section	.text.CapSense_UpdateBaselineNoThreshold,"ax",%progbits
 355              		.align	2
 356              		.global	CapSense_UpdateBaselineNoThreshold
 357              		.code	16
 358              		.thumb_func
 359              		.type	CapSense_UpdateBaselineNoThreshold, %function
 360              	CapSense_UpdateBaselineNoThreshold:
 361              	.LFB40:
 313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 13


 315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateBaselineNoThreshold
 317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 320:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 321:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 322:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 323:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 324:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded
 326:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less
 327:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  than noise threshold.
 328:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 329:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 330:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 331:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 332:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 333:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 334:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 335:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 336:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 337:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 338:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 339:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 341:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 342:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of
 343:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline value.
 344:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store difference between
 345:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 346:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of
 347:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 348:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 349:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 350:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 351:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 352:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 353:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 354:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 355:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateBaselineNoThreshold(uint32 sensor)
 356:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 362              		.loc 1 356 0
 363              		.cfi_startproc
 364 0000 90B5     		push	{r4, r7, lr}
 365              		.cfi_def_cfa_offset 12
 366              		.cfi_offset 4, -12
 367              		.cfi_offset 7, -8
 368              		.cfi_offset 14, -4
 369 0002 87B0     		sub	sp, sp, #28
 370              		.cfi_def_cfa_offset 40
 371 0004 00AF     		add	r7, sp, #0
 372              		.cfi_def_cfa_register 7
 373 0006 7860     		str	r0, [r7, #4]
 357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sign;
 359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 tempRaw;
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 14


 360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 filteredRawData;
 361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 374              		.loc 1 361 0
 375 0008 0F23     		mov	r3, #15
 376 000a FB18     		add	r3, r7, r3
 377 000c 7B49     		ldr	r1, .L28
 378 000e 7A68     		ldr	r2, [r7, #4]
 379 0010 8A18     		add	r2, r1, r2
 380 0012 1278     		ldrb	r2, [r2]
 381 0014 1A70     		strb	r2, [r3]
 362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold;
 363:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 367:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 369:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     noiseThreshold = CapSense_noiseThreshold[widget];
 382              		.loc 1 370 0
 383 0016 0F23     		mov	r3, #15
 384 0018 FB18     		add	r3, r7, r3
 385 001a 1A78     		ldrb	r2, [r3]
 386 001c 0E23     		mov	r3, #14
 387 001e FB18     		add	r3, r7, r3
 388 0020 7749     		ldr	r1, .L28+4
 389 0022 8A5C     		ldrb	r2, [r1, r2]
 390 0024 1A70     		strb	r2, [r3]
 371:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 391              		.loc 1 371 0
 392 0026 1023     		mov	r3, #16
 393 0028 FB18     		add	r3, r7, r3
 394 002a 764A     		ldr	r2, .L28+8
 395 002c 7968     		ldr	r1, [r7, #4]
 396 002e 4900     		lsl	r1, r1, #1
 397 0030 8A5A     		ldrh	r2, [r1, r2]
 398 0032 1A80     		strh	r2, [r3]
 372:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_RAW_FILTER_MASK != 0u)
 374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if(CapSense_enableRawFilters != 0u)
 399              		.loc 1 374 0
 400 0034 744B     		ldr	r3, .L28+12
 401 0036 1B78     		ldrb	r3, [r3]
 402 0038 002B     		cmp	r3, #0
 403 003a 26D0     		beq	.L17
 375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor
 379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                             CapSense_rawFilterData2[sensor]);
 380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 382:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 404              		.loc 1 384 0
 405 003c 1223     		mov	r3, #18
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 15


 406 003e FB18     		add	r3, r7, r3
 407 0040 1022     		mov	r2, #16
 408 0042 BA18     		add	r2, r7, r2
 409 0044 1288     		ldrh	r2, [r2]
 410 0046 1A80     		strh	r2, [r3]
 385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sen
 411              		.loc 1 385 0
 412 0048 704B     		ldr	r3, .L28+16
 413 004a 7A68     		ldr	r2, [r7, #4]
 414 004c 5200     		lsl	r2, r2, #1
 415 004e D15A     		ldrh	r1, [r2, r3]
 416 0050 6F4B     		ldr	r3, .L28+20
 417 0052 7A68     		ldr	r2, [r7, #4]
 418 0054 5200     		lsl	r2, r2, #1
 419 0056 D25A     		ldrh	r2, [r2, r3]
 420 0058 1023     		mov	r3, #16
 421 005a FC18     		add	r4, r7, r3
 422 005c 1023     		mov	r3, #16
 423 005e FB18     		add	r3, r7, r3
 424 0060 1B88     		ldrh	r3, [r3]
 425 0062 181C     		mov	r0, r3
 426 0064 FFF7FEFF 		bl	CapSense_AveragingFilter
 427 0068 031C     		mov	r3, r0
 428 006a 2380     		strh	r3, [r4]
 386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                CapSense_rawFilterData2[sensor]);
 387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 429              		.loc 1 387 0
 430 006c 674B     		ldr	r3, .L28+16
 431 006e 7A68     		ldr	r2, [r7, #4]
 432 0070 5200     		lsl	r2, r2, #1
 433 0072 D15A     		ldrh	r1, [r2, r3]
 434 0074 664B     		ldr	r3, .L28+20
 435 0076 7A68     		ldr	r2, [r7, #4]
 436 0078 5200     		lsl	r2, r2, #1
 437 007a D152     		strh	r1, [r2, r3]
 388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 438              		.loc 1 388 0
 439 007c 634B     		ldr	r3, .L28+16
 440 007e 7A68     		ldr	r2, [r7, #4]
 441 0080 5200     		lsl	r2, r2, #1
 442 0082 1221     		mov	r1, #18
 443 0084 7918     		add	r1, r7, r1
 444 0086 0988     		ldrh	r1, [r1]
 445 0088 D152     		strh	r1, [r2, r3]
 446              	.L17:
 389:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 391:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 393:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 397:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor
 400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 16


 401:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 405:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]
 408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 409:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No Raw filters */
 412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 415:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         MeasureNoiseEnvelope_P4_v2_40(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 447              		.loc 1 417 0
 448 008a 7B68     		ldr	r3, [r7, #4]
 449 008c DAB2     		uxtb	r2, r3
 450 008e 6149     		ldr	r1, .L28+24
 451 0090 5C4B     		ldr	r3, .L28+8
 452 0092 081C     		mov	r0, r1
 453 0094 111C     		mov	r1, r2
 454 0096 1A1C     		mov	r2, r3
 455 0098 FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_40
 418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 419:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Baseline calculation */
 421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 456              		.loc 1 422 0
 457 009c 5E4B     		ldr	r3, .L28+28
 458 009e 7A68     		ldr	r2, [r7, #4]
 459 00a0 5200     		lsl	r2, r2, #1
 460 00a2 D35A     		ldrh	r3, [r2, r3]
 461 00a4 1022     		mov	r2, #16
 462 00a6 BA18     		add	r2, r7, r2
 463 00a8 1288     		ldrh	r2, [r2]
 464 00aa 9A42     		cmp	r2, r3
 465 00ac 12D3     		bcc	.L18
 423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineResetCnt[sensor] = 0u;
 466              		.loc 1 424 0
 467 00ae 5B4A     		ldr	r2, .L28+32
 468 00b0 7B68     		ldr	r3, [r7, #4]
 469 00b2 D318     		add	r3, r2, r3
 470 00b4 0022     		mov	r2, #0
 471 00b6 1A70     		strb	r2, [r3]
 425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 472              		.loc 1 425 0
 473 00b8 574B     		ldr	r3, .L28+28
 474 00ba 7A68     		ldr	r2, [r7, #4]
 475 00bc 5200     		lsl	r2, r2, #1
 476 00be D25A     		ldrh	r2, [r2, r3]
 477 00c0 1223     		mov	r3, #18
 478 00c2 FB18     		add	r3, r7, r3
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 17


 479 00c4 1021     		mov	r1, #16
 480 00c6 7918     		add	r1, r7, r1
 481 00c8 0988     		ldrh	r1, [r1]
 482 00ca 8A1A     		sub	r2, r1, r2
 483 00cc 1A80     		strh	r2, [r3]
 426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 484              		.loc 1 426 0
 485 00ce 0123     		mov	r3, #1
 486 00d0 7B61     		str	r3, [r7, #20]
 487 00d2 0CE0     		b	.L19
 488              	.L18:
 427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 489              		.loc 1 430 0
 490 00d4 504B     		ldr	r3, .L28+28
 491 00d6 7A68     		ldr	r2, [r7, #4]
 492 00d8 5200     		lsl	r2, r2, #1
 493 00da D15A     		ldrh	r1, [r2, r3]
 494 00dc 1223     		mov	r3, #18
 495 00de FB18     		add	r3, r7, r3
 496 00e0 1022     		mov	r2, #16
 497 00e2 BA18     		add	r2, r7, r2
 498 00e4 1288     		ldrh	r2, [r2]
 499 00e6 8A1A     		sub	r2, r1, r2
 500 00e8 1A80     		strh	r2, [r3]
 431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 501              		.loc 1 431 0
 502 00ea 0023     		mov	r3, #0
 503 00ec 7B61     		str	r3, [r7, #20]
 504              	.L19:
 432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 433:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 505              		.loc 1 435 0
 506 00ee 7B69     		ldr	r3, [r7, #20]
 507 00f0 002B     		cmp	r3, #0
 508 00f2 2AD1     		bne	.L20
 509              		.loc 1 435 0 is_stmt 0 discriminator 1
 510 00f4 0F23     		mov	r3, #15
 511 00f6 FB18     		add	r3, r7, r3
 512 00f8 1B78     		ldrb	r3, [r3]
 513 00fa 494A     		ldr	r2, .L28+36
 514 00fc D35C     		ldrb	r3, [r2, r3]
 515 00fe 9BB2     		uxth	r3, r3
 516 0100 1222     		mov	r2, #18
 517 0102 BA18     		add	r2, r7, r2
 518 0104 1288     		ldrh	r2, [r2]
 519 0106 9A42     		cmp	r2, r3
 520 0108 1FD9     		bls	.L20
 436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 18


 521              		.loc 1 440 0 is_stmt 1
 522 010a 444A     		ldr	r2, .L28+32
 523 010c 7B68     		ldr	r3, [r7, #4]
 524 010e D318     		add	r3, r2, r3
 525 0110 1A78     		ldrb	r2, [r3]
 526 0112 4449     		ldr	r1, .L28+40
 527 0114 7B68     		ldr	r3, [r7, #4]
 528 0116 CB18     		add	r3, r1, r3
 529 0118 1B78     		ldrb	r3, [r3]
 530 011a 9A42     		cmp	r2, r3
 531 011c 09D3     		bcc	.L21
 441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 532              		.loc 1 442 0
 533 011e 7B68     		ldr	r3, [r7, #4]
 534 0120 181C     		mov	r0, r3
 535 0122 FFF7FEFF 		bl	CapSense_BaseInit
 443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 536              		.loc 1 443 0
 537 0126 3D4A     		ldr	r2, .L28+32
 538 0128 7B68     		ldr	r3, [r7, #4]
 539 012a D318     		add	r3, r2, r3
 540 012c 0022     		mov	r2, #0
 541 012e 1A70     		strb	r2, [r3]
 440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 542              		.loc 1 440 0
 543 0130 3AE0     		b	.L23
 544              	.L21:
 444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
 446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 545              		.loc 1 447 0
 546 0132 3A4A     		ldr	r2, .L28+32
 547 0134 7B68     		ldr	r3, [r7, #4]
 548 0136 D318     		add	r3, r2, r3
 549 0138 1B78     		ldrb	r3, [r3]
 550 013a 0133     		add	r3, r3, #1
 551 013c D9B2     		uxtb	r1, r3
 552 013e 374A     		ldr	r2, .L28+32
 553 0140 7B68     		ldr	r3, [r7, #4]
 554 0142 D318     		add	r3, r2, r3
 555 0144 0A1C     		add	r2, r1, #0
 556 0146 1A70     		strb	r2, [r3]
 440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 557              		.loc 1 440 0
 558 0148 2EE0     		b	.L23
 559              	.L20:
 448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 19


 457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                && (sign == 0u)))
 458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                    && (sign == 0u)))
 464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 560              		.loc 1 468 0
 561 014a 334B     		ldr	r3, .L28+28
 562 014c 7A68     		ldr	r2, [r7, #4]
 563 014e 5200     		lsl	r2, r2, #1
 564 0150 D35A     		ldrh	r3, [r2, r3]
 565 0152 1B02     		lsl	r3, r3, #8
 566 0154 BB60     		str	r3, [r7, #8]
 469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 567              		.loc 1 469 0
 568 0156 344A     		ldr	r2, .L28+44
 569 0158 7B68     		ldr	r3, [r7, #4]
 570 015a D318     		add	r3, r2, r3
 571 015c 1B78     		ldrb	r3, [r3]
 572 015e 1A1C     		mov	r2, r3
 573 0160 BB68     		ldr	r3, [r7, #8]
 574 0162 1343     		orr	r3, r2
 575 0164 BB60     		str	r3, [r7, #8]
 470:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 576              		.loc 1 472 0
 577 0166 1023     		mov	r3, #16
 578 0168 FB18     		add	r3, r7, r3
 579 016a 1B88     		ldrh	r3, [r3]
 580 016c BA68     		ldr	r2, [r7, #8]
 581 016e D318     		add	r3, r2, r3
 582 0170 BB60     		str	r3, [r7, #8]
 473:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 583              		.loc 1 475 0
 584 0172 294B     		ldr	r3, .L28+28
 585 0174 7A68     		ldr	r2, [r7, #4]
 586 0176 5200     		lsl	r2, r2, #1
 587 0178 D35A     		ldrh	r3, [r2, r3]
 588 017a 1A1C     		mov	r2, r3
 589 017c BB68     		ldr	r3, [r7, #8]
 590 017e 9B1A     		sub	r3, r3, r2
 591 0180 BB60     		str	r3, [r7, #8]
 476:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 592              		.loc 1 478 0
 593 0182 BB68     		ldr	r3, [r7, #8]
 594 0184 1B0A     		lsr	r3, r3, #8
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 20


 595 0186 99B2     		uxth	r1, r3
 596 0188 234B     		ldr	r3, .L28+28
 597 018a 7A68     		ldr	r2, [r7, #4]
 598 018c 5200     		lsl	r2, r2, #1
 599 018e D152     		strh	r1, [r2, r3]
 479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 600              		.loc 1 479 0
 601 0190 BB68     		ldr	r3, [r7, #8]
 602 0192 D9B2     		uxtb	r1, r3
 603 0194 244A     		ldr	r2, .L28+44
 604 0196 7B68     		ldr	r3, [r7, #4]
 605 0198 D318     		add	r3, r2, r3
 606 019a 0A1C     		add	r2, r1, #0
 607 019c 1A70     		strb	r2, [r3]
 480:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 608              		.loc 1 481 0
 609 019e 1F4A     		ldr	r2, .L28+32
 610 01a0 7B68     		ldr	r3, [r7, #4]
 611 01a2 D318     		add	r3, r2, r3
 612 01a4 0022     		mov	r2, #0
 613 01a6 1A70     		strb	r2, [r3]
 614              	.L23:
 482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 486:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 615              		.loc 1 488 0
 616 01a8 0E23     		mov	r3, #14
 617 01aa FB18     		add	r3, r7, r3
 618 01ac 1B78     		ldrb	r3, [r3]
 619 01ae 9BB2     		uxth	r3, r3
 620 01b0 1222     		mov	r2, #18
 621 01b2 BA18     		add	r2, r7, r2
 622 01b4 1288     		ldrh	r2, [r2]
 623 01b6 9A42     		cmp	r2, r3
 624 01b8 17D9     		bls	.L24
 625              		.loc 1 488 0 is_stmt 0 discriminator 1
 626 01ba 7B69     		ldr	r3, [r7, #20]
 627 01bc 002B     		cmp	r3, #0
 628 01be 14D0     		beq	.L24
 489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 629              		.loc 1 492 0 is_stmt 1
 630 01c0 1223     		mov	r3, #18
 631 01c2 FB18     		add	r3, r7, r3
 632 01c4 1B88     		ldrh	r3, [r3]
 633 01c6 FF2B     		cmp	r3, #255
 634 01c8 05D9     		bls	.L25
 493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 635              		.loc 1 494 0
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 21


 636 01ca 184A     		ldr	r2, .L28+48
 637 01cc 7B68     		ldr	r3, [r7, #4]
 638 01ce D318     		add	r3, r2, r3
 639 01d0 FF22     		mov	r2, #255
 640 01d2 1A70     		strb	r2, [r3]
 492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 641              		.loc 1 492 0
 642 01d4 0EE0     		b	.L16
 643              	.L25:
 495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
 497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 644              		.loc 1 498 0
 645 01d6 1223     		mov	r3, #18
 646 01d8 FB18     		add	r3, r7, r3
 647 01da 1B88     		ldrh	r3, [r3]
 648 01dc D9B2     		uxtb	r1, r3
 649 01de 134A     		ldr	r2, .L28+48
 650 01e0 7B68     		ldr	r3, [r7, #4]
 651 01e2 D318     		add	r3, r2, r3
 652 01e4 0A1C     		add	r2, r1, #0
 653 01e6 1A70     		strb	r2, [r3]
 492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 654              		.loc 1 492 0
 655 01e8 04E0     		b	.L16
 656              	.L24:
 499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Signal is zero */
 507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 657              		.loc 1 507 0
 658 01ea 104A     		ldr	r2, .L28+48
 659 01ec 7B68     		ldr	r3, [r7, #4]
 660 01ee D318     		add	r3, r2, r3
 661 01f0 0022     		mov	r2, #0
 662 01f2 1A70     		strb	r2, [r3]
 663              	.L16:
 508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 509:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 514:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 664              		.loc 1 514 0
 665 01f4 BD46     		mov	sp, r7
 666 01f6 07B0     		add	sp, sp, #28
 667              		@ sp needed
 668 01f8 90BD     		pop	{r4, r7, pc}
 669              	.L29:
 670 01fa C046     		.align	2
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 22


 671              	.L28:
 672 01fc 00000000 		.word	CapSense_widgetNumber
 673 0200 00000000 		.word	CapSense_noiseThreshold
 674 0204 00000000 		.word	CapSense_sensorRaw
 675 0208 00000000 		.word	CapSense_enableRawFilters
 676 020c 00000000 		.word	CapSense_rawFilterData1
 677 0210 00000000 		.word	CapSense_rawFilterData2
 678 0214 00000000 		.word	CapSense_config
 679 0218 00000000 		.word	CapSense_sensorBaseline
 680 021c 00000000 		.word	CapSense_lowBaselineResetCnt
 681 0220 00000000 		.word	CapSense_negativeNoiseThreshold
 682 0224 00000000 		.word	CapSense_lowBaselineReset
 683 0228 00000000 		.word	CapSense_sensorBaselineLow
 684 022c 00000000 		.word	CapSense_sensorSignal
 685              		.cfi_endproc
 686              	.LFE40:
 687              		.size	CapSense_UpdateBaselineNoThreshold, .-CapSense_UpdateBaselineNoThreshold
 688              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 689              		.align	2
 690              		.global	CapSense_UpdateSensorBaseline
 691              		.code	16
 692              		.thumb_func
 693              		.type	CapSense_UpdateSensorBaseline, %function
 694              	CapSense_UpdateSensorBaseline:
 695              	.LFB41:
 515:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 516:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 517:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 518:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 519:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 520:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 521:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 522:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 523:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 524:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 525:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 526:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 527:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating.
 528:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and
 529:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  if signal is less than noise threshold.
 530:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 531:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 532:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 533:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 534:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 535:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 536:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 537:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 538:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 539:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 540:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 541:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 542:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 543:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 544:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 545:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 546:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 23


 547:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint32 sensor)
 548:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 696              		.loc 1 548 0
 697              		.cfi_startproc
 698 0000 80B5     		push	{r7, lr}
 699              		.cfi_def_cfa_offset 8
 700              		.cfi_offset 7, -8
 701              		.cfi_offset 14, -4
 702 0002 82B0     		sub	sp, sp, #8
 703              		.cfi_def_cfa_offset 16
 704 0004 00AF     		add	r7, sp, #0
 705              		.cfi_def_cfa_register 7
 706 0006 7860     		str	r0, [r7, #4]
 549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 550:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 widget;
 551:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         widget = CapSense_widgetNumber[sensor];
 553:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 558:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_UpdateThresholds(sensor);
 707              		.loc 1 560 0
 708 0008 7B68     		ldr	r3, [r7, #4]
 709 000a 181C     		mov	r0, r3
 710 000c FFF7FEFF 		bl	CapSense_UpdateThresholds
 561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 562:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 711              		.loc 1 563 0
 712 0010 7B68     		ldr	r3, [r7, #4]
 713 0012 181C     		mov	r0, r3
 714 0014 FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 564:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 568:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 569:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 715              		.loc 1 569 0
 716 0018 BD46     		mov	sp, r7
 717 001a 02B0     		add	sp, sp, #8
 718              		@ sp needed
 719 001c 80BD     		pop	{r7, pc}
 720              		.cfi_endproc
 721              	.LFE41:
 722              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 723 001e C046     		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 724              		.align	2
 725              		.global	CapSense_UpdateEnabledBaselines
 726              		.code	16
 727              		.thumb_func
 728              		.type	CapSense_UpdateEnabledBaselines, %function
 729              	CapSense_UpdateEnabledBaselines:
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 24


 730              	.LFB42:
 570:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 571:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 572:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 573:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 574:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 575:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 576:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 577:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 578:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 579:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors.
 580:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 581:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 582:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 583:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 584:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 585:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 586:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 587:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 588:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 589:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 590:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 591:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 592:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 593:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 594:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 595:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 596:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 597:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 598:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 599:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 600:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 602:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 731              		.loc 1 602 0
 732              		.cfi_startproc
 733 0000 80B5     		push	{r7, lr}
 734              		.cfi_def_cfa_offset 8
 735              		.cfi_offset 7, -8
 736              		.cfi_offset 14, -4
 737 0002 82B0     		sub	sp, sp, #8
 738              		.cfi_def_cfa_offset 16
 739 0004 00AF     		add	r7, sp, #0
 740              		.cfi_def_cfa_register 7
 603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 605:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 741              		.loc 1 606 0
 742 0006 0023     		mov	r3, #0
 743 0008 7B60     		str	r3, [r7, #4]
 744 000a 11E0     		b	.L32
 745              	.L34:
 607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 746              		.loc 1 608 0
 747 000c 0B4A     		ldr	r2, .L35
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 25


 748 000e 7B68     		ldr	r3, [r7, #4]
 749 0010 101C     		mov	r0, r2
 750 0012 191C     		mov	r1, r3
 751 0014 FFF7FEFF 		bl	CapSense_GetBitValue
 752 0018 031C     		mov	r3, r0
 753 001a 3B60     		str	r3, [r7]
 609:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 754              		.loc 1 610 0
 755 001c 3B68     		ldr	r3, [r7]
 756 001e 002B     		cmp	r3, #0
 757 0020 03D0     		beq	.L33
 611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 758              		.loc 1 612 0
 759 0022 7B68     		ldr	r3, [r7, #4]
 760 0024 181C     		mov	r0, r3
 761 0026 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 762              	.L33:
 606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 763              		.loc 1 606 0 discriminator 2
 764 002a 7B68     		ldr	r3, [r7, #4]
 765 002c 0133     		add	r3, r3, #1
 766 002e 7B60     		str	r3, [r7, #4]
 767              	.L32:
 606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 768              		.loc 1 606 0 is_stmt 0 discriminator 1
 769 0030 7B68     		ldr	r3, [r7, #4]
 770 0032 042B     		cmp	r3, #4
 771 0034 EAD9     		bls	.L34
 613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 614:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 615:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 772              		.loc 1 615 0 is_stmt 1
 773 0036 BD46     		mov	sp, r7
 774 0038 02B0     		add	sp, sp, #8
 775              		@ sp needed
 776 003a 80BD     		pop	{r7, pc}
 777              	.L36:
 778              		.align	2
 779              	.L35:
 780 003c 00000000 		.word	CapSense_sensorEnableMask
 781              		.cfi_endproc
 782              	.LFE42:
 783              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 784              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 785              		.align	2
 786              		.global	CapSense_UpdateWidgetBaseline
 787              		.code	16
 788              		.thumb_func
 789              		.type	CapSense_UpdateWidgetBaseline, %function
 790              	CapSense_UpdateWidgetBaseline:
 791              	.LFB43:
 616:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 617:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 618:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateWidgetBaseline
 619:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 26


 620:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 621:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 622:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 623:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 624:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors that belong to widget.
 625:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 626:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 627:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  Widget number.
 628:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 629:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 630:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 631:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 632:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 633:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 634:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 635:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 636:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 637:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 638:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 639:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 640:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 641:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 642:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 643:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 644:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 645:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 646:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateWidgetBaseline(uint32 widget)
 647:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 792              		.loc 1 647 0
 793              		.cfi_startproc
 794 0000 80B5     		push	{r7, lr}
 795              		.cfi_def_cfa_offset 8
 796              		.cfi_offset 7, -8
 797              		.cfi_offset 14, -4
 798 0002 88B0     		sub	sp, sp, #32
 799              		.cfi_def_cfa_offset 40
 800 0004 00AF     		add	r7, sp, #0
 801              		.cfi_def_cfa_register 7
 802 0006 7860     		str	r0, [r7, #4]
 648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 firstSensor;
 650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 lastSensor;
 651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 652:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 653:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get number of sensors in widget */
 655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     sensorsPerWidget = CapSense_numberOfSensors[widget];
 803              		.loc 1 655 0
 804 0008 164A     		ldr	r2, .L41
 805 000a 7B68     		ldr	r3, [r7, #4]
 806 000c D318     		add	r3, r2, r3
 807 000e 1B78     		ldrb	r3, [r3]
 808 0010 BB61     		str	r3, [r7, #24]
 656:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get first sensor in widget */
 658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     firstSensor = CapSense_rawDataIndex[widget];
 809              		.loc 1 658 0
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 27


 810 0012 154A     		ldr	r2, .L41+4
 811 0014 7B68     		ldr	r3, [r7, #4]
 812 0016 D318     		add	r3, r2, r3
 813 0018 1B78     		ldrb	r3, [r3]
 814 001a 7B61     		str	r3, [r7, #20]
 659:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get last sensor in widget */
 661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 815              		.loc 1 661 0
 816 001c 124A     		ldr	r2, .L41+4
 817 001e 7B68     		ldr	r3, [r7, #4]
 818 0020 D318     		add	r3, r2, r3
 819 0022 1B78     		ldrb	r3, [r3]
 820 0024 1A1C     		mov	r2, r3
 821 0026 BB69     		ldr	r3, [r7, #24]
 822 0028 D318     		add	r3, r2, r3
 823 002a 3B61     		str	r3, [r7, #16]
 662:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 824              		.loc 1 663 0
 825 002c 7B69     		ldr	r3, [r7, #20]
 826 002e FB61     		str	r3, [r7, #28]
 827 0030 11E0     		b	.L38
 828              	.L40:
 664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 829              		.loc 1 665 0
 830 0032 0E4A     		ldr	r2, .L41+8
 831 0034 FB69     		ldr	r3, [r7, #28]
 832 0036 101C     		mov	r0, r2
 833 0038 191C     		mov	r1, r3
 834 003a FFF7FEFF 		bl	CapSense_GetBitValue
 835 003e 031C     		mov	r3, r0
 836 0040 FB60     		str	r3, [r7, #12]
 666:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 837              		.loc 1 667 0
 838 0042 FB68     		ldr	r3, [r7, #12]
 839 0044 002B     		cmp	r3, #0
 840 0046 03D0     		beq	.L39
 668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 841              		.loc 1 669 0
 842 0048 FB69     		ldr	r3, [r7, #28]
 843 004a 181C     		mov	r0, r3
 844 004c FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 845              	.L39:
 663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 846              		.loc 1 663 0 discriminator 2
 847 0050 FB69     		ldr	r3, [r7, #28]
 848 0052 0133     		add	r3, r3, #1
 849 0054 FB61     		str	r3, [r7, #28]
 850              	.L38:
 663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 851              		.loc 1 663 0 is_stmt 0 discriminator 1
 852 0056 FA69     		ldr	r2, [r7, #28]
 853 0058 3B69     		ldr	r3, [r7, #16]
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 28


 854 005a 9A42     		cmp	r2, r3
 855 005c E9D3     		bcc	.L40
 670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 672:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 856              		.loc 1 672 0 is_stmt 1
 857 005e BD46     		mov	sp, r7
 858 0060 08B0     		add	sp, sp, #32
 859              		@ sp needed
 860 0062 80BD     		pop	{r7, pc}
 861              	.L42:
 862              		.align	2
 863              	.L41:
 864 0064 00000000 		.word	CapSense_numberOfSensors
 865 0068 00000000 		.word	CapSense_rawDataIndex
 866 006c 00000000 		.word	CapSense_sensorEnableMask
 867              		.cfi_endproc
 868              	.LFE43:
 869              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 870              		.section	.text.CapSense_GetBaselineData,"ax",%progbits
 871              		.align	2
 872              		.global	CapSense_GetBaselineData
 873              		.code	16
 874              		.thumb_func
 875              		.type	CapSense_GetBaselineData, %function
 876              	CapSense_GetBaselineData:
 877              	.LFB44:
 673:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 674:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 675:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 676:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetBaselineData
 677:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 678:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 679:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 680:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the sensor baseline from the component.
 681:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 682:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 683:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 684:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 685:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 686:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 687:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 688:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 689:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with an initial values by scanning
 690:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 691:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 692:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 693:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 694:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 695:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetBaselineData(uint32 sensor)
 696:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 878              		.loc 1 696 0
 879              		.cfi_startproc
 880 0000 80B5     		push	{r7, lr}
 881              		.cfi_def_cfa_offset 8
 882              		.cfi_offset 7, -8
 883              		.cfi_offset 14, -4
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 29


 884 0002 82B0     		sub	sp, sp, #8
 885              		.cfi_def_cfa_offset 16
 886 0004 00AF     		add	r7, sp, #0
 887              		.cfi_def_cfa_register 7
 888 0006 7860     		str	r0, [r7, #4]
 697:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorBaseline[sensor]);
 889              		.loc 1 697 0
 890 0008 034B     		ldr	r3, .L45
 891 000a 7A68     		ldr	r2, [r7, #4]
 892 000c 5200     		lsl	r2, r2, #1
 893 000e D35A     		ldrh	r3, [r2, r3]
 698:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 894              		.loc 1 698 0
 895 0010 181C     		mov	r0, r3
 896 0012 BD46     		mov	sp, r7
 897 0014 02B0     		add	sp, sp, #8
 898              		@ sp needed
 899 0016 80BD     		pop	{r7, pc}
 900              	.L46:
 901              		.align	2
 902              	.L45:
 903 0018 00000000 		.word	CapSense_sensorBaseline
 904              		.cfi_endproc
 905              	.LFE44:
 906              		.size	CapSense_GetBaselineData, .-CapSense_GetBaselineData
 907              		.section	.text.CapSense_SetBaselineData,"ax",%progbits
 908              		.align	2
 909              		.global	CapSense_SetBaselineData
 910              		.code	16
 911              		.thumb_func
 912              		.type	CapSense_SetBaselineData, %function
 913              	CapSense_SetBaselineData:
 914              	.LFB45:
 699:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 700:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 701:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 702:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetBaselineData
 703:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 704:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 707:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  data:    Sensor baseline.
 711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with initial values by scanning
 717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetBaselineData(uint32 sensor, uint16 data)
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 30


 723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 915              		.loc 1 723 0
 916              		.cfi_startproc
 917 0000 80B5     		push	{r7, lr}
 918              		.cfi_def_cfa_offset 8
 919              		.cfi_offset 7, -8
 920              		.cfi_offset 14, -4
 921 0002 82B0     		sub	sp, sp, #8
 922              		.cfi_def_cfa_offset 16
 923 0004 00AF     		add	r7, sp, #0
 924              		.cfi_def_cfa_register 7
 925 0006 7860     		str	r0, [r7, #4]
 926 0008 0A1C     		mov	r2, r1
 927 000a BB1C     		add	r3, r7, #2
 928 000c 1A80     		strh	r2, [r3]
 724:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = data;
 929              		.loc 1 724 0
 930 000e 044B     		ldr	r3, .L48
 931 0010 7A68     		ldr	r2, [r7, #4]
 932 0012 5200     		lsl	r2, r2, #1
 933 0014 B91C     		add	r1, r7, #2
 934 0016 0988     		ldrh	r1, [r1]
 935 0018 D152     		strh	r1, [r2, r3]
 725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 936              		.loc 1 725 0
 937 001a BD46     		mov	sp, r7
 938 001c 02B0     		add	sp, sp, #8
 939              		@ sp needed
 940 001e 80BD     		pop	{r7, pc}
 941              	.L49:
 942              		.align	2
 943              	.L48:
 944 0020 00000000 		.word	CapSense_sensorBaseline
 945              		.cfi_endproc
 946              	.LFE45:
 947              		.size	CapSense_SetBaselineData, .-CapSense_SetBaselineData
 948              		.section	.text.CapSense_GetDiffCountData,"ax",%progbits
 949              		.align	2
 950              		.global	CapSense_GetDiffCountData
 951              		.code	16
 952              		.thumb_func
 953              		.type	CapSense_GetDiffCountData, %function
 954              	CapSense_GetDiffCountData:
 955              	.LFB46:
 726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDiffCountData
 730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 31


 739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the
 740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  argument.
 741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDiffCountData(uint32 sensor)
 750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 956              		.loc 1 750 0
 957              		.cfi_startproc
 958 0000 80B5     		push	{r7, lr}
 959              		.cfi_def_cfa_offset 8
 960              		.cfi_offset 7, -8
 961              		.cfi_offset 14, -4
 962 0002 82B0     		sub	sp, sp, #8
 963              		.cfi_def_cfa_offset 16
 964 0004 00AF     		add	r7, sp, #0
 965              		.cfi_def_cfa_register 7
 966 0006 7860     		str	r0, [r7, #4]
 751:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorSignal[sensor]);
 967              		.loc 1 751 0
 968 0008 034A     		ldr	r2, .L52
 969 000a 7B68     		ldr	r3, [r7, #4]
 970 000c D318     		add	r3, r2, r3
 971 000e 1B78     		ldrb	r3, [r3]
 752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 972              		.loc 1 752 0
 973 0010 181C     		mov	r0, r3
 974 0012 BD46     		mov	sp, r7
 975 0014 02B0     		add	sp, sp, #8
 976              		@ sp needed
 977 0016 80BD     		pop	{r7, pc}
 978              	.L53:
 979              		.align	2
 980              	.L52:
 981 0018 00000000 		.word	CapSense_sensorSignal
 982              		.cfi_endproc
 983              	.LFE46:
 984              		.size	CapSense_GetDiffCountData, .-CapSense_GetDiffCountData
 985              		.section	.text.CapSense_SetDiffCountData,"ax",%progbits
 986              		.align	2
 987              		.global	CapSense_SetDiffCountData
 988              		.code	16
 989              		.thumb_func
 990              		.type	CapSense_SetDiffCountData, %function
 991              	CapSense_SetDiffCountData:
 992              	.LFB47:
 753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetDiffCountData
 757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 32


 759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  value:   Sensor signal.
 765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetDiffCountData(uint32 sensor, uint8 value)
 777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 993              		.loc 1 777 0
 994              		.cfi_startproc
 995 0000 80B5     		push	{r7, lr}
 996              		.cfi_def_cfa_offset 8
 997              		.cfi_offset 7, -8
 998              		.cfi_offset 14, -4
 999 0002 82B0     		sub	sp, sp, #8
 1000              		.cfi_def_cfa_offset 16
 1001 0004 00AF     		add	r7, sp, #0
 1002              		.cfi_def_cfa_register 7
 1003 0006 7860     		str	r0, [r7, #4]
 1004 0008 0A1C     		mov	r2, r1
 1005 000a FB1C     		add	r3, r7, #3
 1006 000c 1A70     		strb	r2, [r3]
 778:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 1007              		.loc 1 778 0
 1008 000e 044A     		ldr	r2, .L55
 1009 0010 7B68     		ldr	r3, [r7, #4]
 1010 0012 D318     		add	r3, r2, r3
 1011 0014 FA1C     		add	r2, r7, #3
 1012 0016 1278     		ldrb	r2, [r2]
 1013 0018 1A70     		strb	r2, [r3]
 779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1014              		.loc 1 779 0
 1015 001a BD46     		mov	sp, r7
 1016 001c 02B0     		add	sp, sp, #8
 1017              		@ sp needed
 1018 001e 80BD     		pop	{r7, pc}
 1019              	.L56:
 1020              		.align	2
 1021              	.L55:
 1022 0020 00000000 		.word	CapSense_sensorSignal
 1023              		.cfi_endproc
 1024              	.LFE47:
 1025              		.size	CapSense_SetDiffCountData, .-CapSense_SetDiffCountData
 1026              		.section	.text.CapSense_GetFingerThreshold,"ax",%progbits
 1027              		.align	2
 1028              		.global	CapSense_GetFingerThreshold
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 33


 1029              		.code	16
 1030              		.thumb_func
 1031              		.type	CapSense_GetFingerThreshold, %function
 1032              	CapSense_GetFingerThreshold:
 1033              	.LFB48:
 780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerThreshold
 784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the finger threshold from the component.
 788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 791:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 792:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 793:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument.
 794:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_fingerThreshold[] - This array contains the level of signal
 797:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 798:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 802:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 803:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerThreshold(uint32 widget)
 804:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1034              		.loc 1 804 0
 1035              		.cfi_startproc
 1036 0000 80B5     		push	{r7, lr}
 1037              		.cfi_def_cfa_offset 8
 1038              		.cfi_offset 7, -8
 1039              		.cfi_offset 14, -4
 1040 0002 82B0     		sub	sp, sp, #8
 1041              		.cfi_def_cfa_offset 16
 1042 0004 00AF     		add	r7, sp, #0
 1043              		.cfi_def_cfa_register 7
 1044 0006 7860     		str	r0, [r7, #4]
 805:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_fingerThreshold[widget]);
 1045              		.loc 1 805 0
 1046 0008 034A     		ldr	r2, .L59
 1047 000a 7B68     		ldr	r3, [r7, #4]
 1048 000c D318     		add	r3, r2, r3
 1049 000e 1B78     		ldrb	r3, [r3]
 806:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1050              		.loc 1 806 0
 1051 0010 181C     		mov	r0, r3
 1052 0012 BD46     		mov	sp, r7
 1053 0014 02B0     		add	sp, sp, #8
 1054              		@ sp needed
 1055 0016 80BD     		pop	{r7, pc}
 1056              	.L60:
 1057              		.align	2
 1058              	.L59:
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 34


 1059 0018 00000000 		.word	CapSense_fingerThreshold
 1060              		.cfi_endproc
 1061              	.LFE48:
 1062              		.size	CapSense_GetFingerThreshold, .-CapSense_GetFingerThreshold
 1063              		.section	.text.CapSense_GetNoiseThreshold,"ax",%progbits
 1064              		.align	2
 1065              		.global	CapSense_GetNoiseThreshold
 1066              		.code	16
 1067              		.thumb_func
 1068              		.type	CapSense_GetNoiseThreshold, %function
 1069              	CapSense_GetNoiseThreshold:
 1070              	.LFB49:
 807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 808:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 809:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 810:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNoiseThreshold
 811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 812:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 813:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 814:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the noise threshold from the component.
 815:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 816:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 817:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 818:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 819:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 820:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument.
 821:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 822:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 823:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_noiseThreshold[] - This array contains the level of signal
 824:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 825:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 826:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 827:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 828:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 829:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 830:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNoiseThreshold(uint32 widget)
 831:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1071              		.loc 1 831 0
 1072              		.cfi_startproc
 1073 0000 80B5     		push	{r7, lr}
 1074              		.cfi_def_cfa_offset 8
 1075              		.cfi_offset 7, -8
 1076              		.cfi_offset 14, -4
 1077 0002 82B0     		sub	sp, sp, #8
 1078              		.cfi_def_cfa_offset 16
 1079 0004 00AF     		add	r7, sp, #0
 1080              		.cfi_def_cfa_register 7
 1081 0006 7860     		str	r0, [r7, #4]
 832:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_noiseThreshold[widget]);
 1082              		.loc 1 832 0
 1083 0008 034A     		ldr	r2, .L63
 1084 000a 7B68     		ldr	r3, [r7, #4]
 1085 000c D318     		add	r3, r2, r3
 1086 000e 1B78     		ldrb	r3, [r3]
 833:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1087              		.loc 1 833 0
 1088 0010 181C     		mov	r0, r3
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 35


 1089 0012 BD46     		mov	sp, r7
 1090 0014 02B0     		add	sp, sp, #8
 1091              		@ sp needed
 1092 0016 80BD     		pop	{r7, pc}
 1093              	.L64:
 1094              		.align	2
 1095              	.L63:
 1096 0018 00000000 		.word	CapSense_noiseThreshold
 1097              		.cfi_endproc
 1098              	.LFE49:
 1099              		.size	CapSense_GetNoiseThreshold, .-CapSense_GetNoiseThreshold
 1100              		.section	.text.CapSense_GetFingerHysteresis,"ax",%progbits
 1101              		.align	2
 1102              		.global	CapSense_GetFingerHysteresis
 1103              		.code	16
 1104              		.thumb_func
 1105              		.type	CapSense_GetFingerHysteresis, %function
 1106              	CapSense_GetFingerHysteresis:
 1107              	.LFB50:
 834:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 835:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 836:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 837:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerHysteresis
 838:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 839:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 840:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 841:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 842:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 843:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 844:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 845:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 846:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 847:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument.
 848:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 849:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 850:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_hysteresis[] - This array contains the hysteresis value
 851:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   for each widget.
 852:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 853:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 854:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 855:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 856:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 857:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 858:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerHysteresis(uint32 widget)
 859:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1108              		.loc 1 859 0
 1109              		.cfi_startproc
 1110 0000 80B5     		push	{r7, lr}
 1111              		.cfi_def_cfa_offset 8
 1112              		.cfi_offset 7, -8
 1113              		.cfi_offset 14, -4
 1114 0002 82B0     		sub	sp, sp, #8
 1115              		.cfi_def_cfa_offset 16
 1116 0004 00AF     		add	r7, sp, #0
 1117              		.cfi_def_cfa_register 7
 1118 0006 7860     		str	r0, [r7, #4]
 860:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_hysteresis[widget]);
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 36


 1119              		.loc 1 860 0
 1120 0008 034A     		ldr	r2, .L67
 1121 000a 7B68     		ldr	r3, [r7, #4]
 1122 000c D318     		add	r3, r2, r3
 1123 000e 1B78     		ldrb	r3, [r3]
 861:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1124              		.loc 1 861 0
 1125 0010 181C     		mov	r0, r3
 1126 0012 BD46     		mov	sp, r7
 1127 0014 02B0     		add	sp, sp, #8
 1128              		@ sp needed
 1129 0016 80BD     		pop	{r7, pc}
 1130              	.L68:
 1131              		.align	2
 1132              	.L67:
 1133 0018 00000000 		.word	CapSense_hysteresis
 1134              		.cfi_endproc
 1135              	.LFE50:
 1136              		.size	CapSense_GetFingerHysteresis, .-CapSense_GetFingerHysteresis
 1137              		.section	.text.CapSense_GetNegativeNoiseThreshold,"ax",%progbits
 1138              		.align	2
 1139              		.global	CapSense_GetNegativeNoiseThreshold
 1140              		.code	16
 1141              		.thumb_func
 1142              		.type	CapSense_GetNegativeNoiseThreshold, %function
 1143              	CapSense_GetNegativeNoiseThreshold:
 1144              	.LFB51:
 862:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 863:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 864:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 865:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNegativeNoiseThreshold
 866:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 867:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 868:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 869:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the negative noise threshold from the component.
 870:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 871:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 872:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 873:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 874:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return Value:
 875:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the negative noise threshold
 876:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 877:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 878:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_negativeNoiseThreshold - This variable specifies the negative
 879:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 880:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   to the raw count level.
 881:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 882:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 883:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 884:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 885:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 886:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNegativeNoiseThreshold(uint32 widget)
 887:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1145              		.loc 1 887 0
 1146              		.cfi_startproc
 1147 0000 80B5     		push	{r7, lr}
 1148              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 37


 1149              		.cfi_offset 7, -8
 1150              		.cfi_offset 14, -4
 1151 0002 82B0     		sub	sp, sp, #8
 1152              		.cfi_def_cfa_offset 16
 1153 0004 00AF     		add	r7, sp, #0
 1154              		.cfi_def_cfa_register 7
 1155 0006 7860     		str	r0, [r7, #4]
 888:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 889:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_negativeNoiseThreshold[widget]);
 1156              		.loc 1 889 0
 1157 0008 034A     		ldr	r2, .L71
 1158 000a 7B68     		ldr	r3, [r7, #4]
 1159 000c D318     		add	r3, r2, r3
 1160 000e 1B78     		ldrb	r3, [r3]
 890:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else
 891:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_NEGATIVE_NOISE_THRESHOLD);
 892:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 893:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1161              		.loc 1 893 0
 1162 0010 181C     		mov	r0, r3
 1163 0012 BD46     		mov	sp, r7
 1164 0014 02B0     		add	sp, sp, #8
 1165              		@ sp needed
 1166 0016 80BD     		pop	{r7, pc}
 1167              	.L72:
 1168              		.align	2
 1169              	.L71:
 1170 0018 00000000 		.word	CapSense_negativeNoiseThreshold
 1171              		.cfi_endproc
 1172              	.LFE51:
 1173              		.size	CapSense_GetNegativeNoiseThreshold, .-CapSense_GetNegativeNoiseThreshold
 1174              		.section	.text.CapSense_SetFingerThreshold,"ax",%progbits
 1175              		.align	2
 1176              		.global	CapSense_SetFingerThreshold
 1177              		.code	16
 1178              		.thumb_func
 1179              		.type	CapSense_SetFingerThreshold, %function
 1180              	CapSense_SetFingerThreshold:
 1181              	.LFB52:
 894:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 895:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 896:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 897:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 898:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerThreshold
 899:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 900:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 901:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 902:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the finger threshold value for a widget.
 903:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 904:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 905:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensorNumber:  widget index.
 906:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Finger threshold value for the widget.
 907:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 908:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 909:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 910:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 911:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 38


 912:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[] - This array contains the level of signal
 913:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines if a finger is present on the widget.
 914:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 915:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 916:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 917:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 918:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 919:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerThreshold(uint32 widget, uint8 value)
 920:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1182              		.loc 1 920 0
 1183              		.cfi_startproc
 1184 0000 80B5     		push	{r7, lr}
 1185              		.cfi_def_cfa_offset 8
 1186              		.cfi_offset 7, -8
 1187              		.cfi_offset 14, -4
 1188 0002 82B0     		sub	sp, sp, #8
 1189              		.cfi_def_cfa_offset 16
 1190 0004 00AF     		add	r7, sp, #0
 1191              		.cfi_def_cfa_register 7
 1192 0006 7860     		str	r0, [r7, #4]
 1193 0008 0A1C     		mov	r2, r1
 1194 000a FB1C     		add	r3, r7, #3
 1195 000c 1A70     		strb	r2, [r3]
 921:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_fingerThreshold[widget] = value;
 1196              		.loc 1 921 0
 1197 000e 044A     		ldr	r2, .L74
 1198 0010 7B68     		ldr	r3, [r7, #4]
 1199 0012 D318     		add	r3, r2, r3
 1200 0014 FA1C     		add	r2, r7, #3
 1201 0016 1278     		ldrb	r2, [r2]
 1202 0018 1A70     		strb	r2, [r3]
 922:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1203              		.loc 1 922 0
 1204 001a BD46     		mov	sp, r7
 1205 001c 02B0     		add	sp, sp, #8
 1206              		@ sp needed
 1207 001e 80BD     		pop	{r7, pc}
 1208              	.L75:
 1209              		.align	2
 1210              	.L74:
 1211 0020 00000000 		.word	CapSense_fingerThreshold
 1212              		.cfi_endproc
 1213              	.LFE52:
 1214              		.size	CapSense_SetFingerThreshold, .-CapSense_SetFingerThreshold
 1215              		.section	.text.CapSense_SetNoiseThreshold,"ax",%progbits
 1216              		.align	2
 1217              		.global	CapSense_SetNoiseThreshold
 1218              		.code	16
 1219              		.thumb_func
 1220              		.type	CapSense_SetNoiseThreshold, %function
 1221              	CapSense_SetNoiseThreshold:
 1222              	.LFB53:
 923:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 924:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 925:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 926:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNoiseThreshold
 927:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 39


 928:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 929:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 930:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Noise Threshold value for each widget.
 931:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 932:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 933:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Sensor index number.
 934:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:   Noise Threshold value for widget.
 935:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 936:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 937:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 938:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 939:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 940:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_noiseThreshold[] - This array contains the level of signal
 941:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines the level of noise in the capacitive scan.
 942:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 943:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 944:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 945:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 946:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 947:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNoiseThreshold(uint32 widget, uint8 value)
 948:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1223              		.loc 1 948 0
 1224              		.cfi_startproc
 1225 0000 80B5     		push	{r7, lr}
 1226              		.cfi_def_cfa_offset 8
 1227              		.cfi_offset 7, -8
 1228              		.cfi_offset 14, -4
 1229 0002 82B0     		sub	sp, sp, #8
 1230              		.cfi_def_cfa_offset 16
 1231 0004 00AF     		add	r7, sp, #0
 1232              		.cfi_def_cfa_register 7
 1233 0006 7860     		str	r0, [r7, #4]
 1234 0008 0A1C     		mov	r2, r1
 1235 000a FB1C     		add	r3, r7, #3
 1236 000c 1A70     		strb	r2, [r3]
 949:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_noiseThreshold[widget] = value;
 1237              		.loc 1 949 0
 1238 000e 044A     		ldr	r2, .L77
 1239 0010 7B68     		ldr	r3, [r7, #4]
 1240 0012 D318     		add	r3, r2, r3
 1241 0014 FA1C     		add	r2, r7, #3
 1242 0016 1278     		ldrb	r2, [r2]
 1243 0018 1A70     		strb	r2, [r3]
 950:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1244              		.loc 1 950 0
 1245 001a BD46     		mov	sp, r7
 1246 001c 02B0     		add	sp, sp, #8
 1247              		@ sp needed
 1248 001e 80BD     		pop	{r7, pc}
 1249              	.L78:
 1250              		.align	2
 1251              	.L77:
 1252 0020 00000000 		.word	CapSense_noiseThreshold
 1253              		.cfi_endproc
 1254              	.LFE53:
 1255              		.size	CapSense_SetNoiseThreshold, .-CapSense_SetNoiseThreshold
 1256              		.section	.text.CapSense_SetFingerHysteresis,"ax",%progbits
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 40


 1257              		.align	2
 1258              		.global	CapSense_SetFingerHysteresis
 1259              		.code	16
 1260              		.thumb_func
 1261              		.type	CapSense_SetFingerHysteresis, %function
 1262              	CapSense_SetFingerHysteresis:
 1263              	.LFB54:
 951:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 952:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 953:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 954:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerHysteresis
 955:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 956:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 957:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 958:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Hysteresis value of a widget
 959:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 960:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 961:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Hysteresis value for widgets.
 962:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number
 963:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 964:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 965:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 966:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 967:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 968:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_hysteresis[] - This array contains the hysteresis value for each widget.
 969:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 970:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 971:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 972:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 973:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 974:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 975:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerHysteresis(uint32 widget, uint8 value)
 976:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1264              		.loc 1 976 0
 1265              		.cfi_startproc
 1266 0000 80B5     		push	{r7, lr}
 1267              		.cfi_def_cfa_offset 8
 1268              		.cfi_offset 7, -8
 1269              		.cfi_offset 14, -4
 1270 0002 82B0     		sub	sp, sp, #8
 1271              		.cfi_def_cfa_offset 16
 1272 0004 00AF     		add	r7, sp, #0
 1273              		.cfi_def_cfa_register 7
 1274 0006 7860     		str	r0, [r7, #4]
 1275 0008 0A1C     		mov	r2, r1
 1276 000a FB1C     		add	r3, r7, #3
 1277 000c 1A70     		strb	r2, [r3]
 977:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_hysteresis[widget] = value;
 1278              		.loc 1 977 0
 1279 000e 044A     		ldr	r2, .L80
 1280 0010 7B68     		ldr	r3, [r7, #4]
 1281 0012 D318     		add	r3, r2, r3
 1282 0014 FA1C     		add	r2, r7, #3
 1283 0016 1278     		ldrb	r2, [r2]
 1284 0018 1A70     		strb	r2, [r3]
 978:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1285              		.loc 1 978 0
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 41


 1286 001a BD46     		mov	sp, r7
 1287 001c 02B0     		add	sp, sp, #8
 1288              		@ sp needed
 1289 001e 80BD     		pop	{r7, pc}
 1290              	.L81:
 1291              		.align	2
 1292              	.L80:
 1293 0020 00000000 		.word	CapSense_hysteresis
 1294              		.cfi_endproc
 1295              	.LFE54:
 1296              		.size	CapSense_SetFingerHysteresis, .-CapSense_SetFingerHysteresis
 1297              		.section	.text.CapSense_SetNegativeNoiseThreshold,"ax",%progbits
 1298              		.align	2
 1299              		.global	CapSense_SetNegativeNoiseThreshold
 1300              		.code	16
 1301              		.thumb_func
 1302              		.type	CapSense_SetNegativeNoiseThreshold, %function
 1303              	CapSense_SetNegativeNoiseThreshold:
 1304              	.LFB55:
 979:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 980:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 981:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 982:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNegativeNoiseThreshold
 983:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 984:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 985:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 986:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Negative Noise Threshold value of a widget
 987:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 988:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 989:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Negative Noise Threshold value for widgets.
 990:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget number
 991:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 992:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 993:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 994:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 995:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 996:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_negativeNoiseThreshold  - This parameter specifies the negative
 997:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   difference between the raw count and baseline levels for Baseline resetting to
 998:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   the raw count level.
 999:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1000:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1001:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1002:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1003:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1004:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
1005:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1305              		.loc 1 1005 0
 1306              		.cfi_startproc
 1307 0000 80B5     		push	{r7, lr}
 1308              		.cfi_def_cfa_offset 8
 1309              		.cfi_offset 7, -8
 1310              		.cfi_offset 14, -4
 1311 0002 82B0     		sub	sp, sp, #8
 1312              		.cfi_def_cfa_offset 16
 1313 0004 00AF     		add	r7, sp, #0
 1314              		.cfi_def_cfa_register 7
 1315 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 42


 1316 0008 0A1C     		mov	r2, r1
 1317 000a FB1C     		add	r3, r7, #3
 1318 000c 1A70     		strb	r2, [r3]
1006:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_negativeNoiseThreshold[widget] = value;
 1319              		.loc 1 1006 0
 1320 000e 044A     		ldr	r2, .L83
 1321 0010 7B68     		ldr	r3, [r7, #4]
 1322 0012 D318     		add	r3, r2, r3
 1323 0014 FA1C     		add	r2, r7, #3
 1324 0016 1278     		ldrb	r2, [r2]
 1325 0018 1A70     		strb	r2, [r3]
1007:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1326              		.loc 1 1007 0
 1327 001a BD46     		mov	sp, r7
 1328 001c 02B0     		add	sp, sp, #8
 1329              		@ sp needed
 1330 001e 80BD     		pop	{r7, pc}
 1331              	.L84:
 1332              		.align	2
 1333              	.L83:
 1334 0020 00000000 		.word	CapSense_negativeNoiseThreshold
 1335              		.cfi_endproc
 1336              	.LFE55:
 1337              		.size	CapSense_SetNegativeNoiseThreshold, .-CapSense_SetNegativeNoiseThreshold
 1338              		.section	.text.CapSense_SetDebounce,"ax",%progbits
 1339              		.align	2
 1340              		.global	CapSense_SetDebounce
 1341              		.code	16
 1342              		.thumb_func
 1343              		.type	CapSense_SetDebounce, %function
 1344              	CapSense_SetDebounce:
 1345              	.LFB56:
1008:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1009:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1010:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1011:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetDebounce
1012:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1013:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1014:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1015:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the debounce value for a widget.
1016:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1017:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1018:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Debounce value for widget.
1019:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget index.
1020:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1021:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1022:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1023:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1024:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1025:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_debounce[] - This array contains the debounce value for each widget.
1026:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
1027:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1028:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1029:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1030:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1031:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1032:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetDebounce(uint32 widget, uint8 value)
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 43


1033:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1346              		.loc 1 1033 0
 1347              		.cfi_startproc
 1348 0000 80B5     		push	{r7, lr}
 1349              		.cfi_def_cfa_offset 8
 1350              		.cfi_offset 7, -8
 1351              		.cfi_offset 14, -4
 1352 0002 82B0     		sub	sp, sp, #8
 1353              		.cfi_def_cfa_offset 16
 1354 0004 00AF     		add	r7, sp, #0
 1355              		.cfi_def_cfa_register 7
 1356 0006 7860     		str	r0, [r7, #4]
 1357 0008 0A1C     		mov	r2, r1
 1358 000a FB1C     		add	r3, r7, #3
 1359 000c 1A70     		strb	r2, [r3]
1034:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_debounce[widget] = value;
 1360              		.loc 1 1034 0
 1361 000e 044A     		ldr	r2, .L86
 1362 0010 7B68     		ldr	r3, [r7, #4]
 1363 0012 D318     		add	r3, r2, r3
 1364 0014 FA1C     		add	r2, r7, #3
 1365 0016 1278     		ldrb	r2, [r2]
 1366 0018 1A70     		strb	r2, [r3]
1035:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1367              		.loc 1 1035 0
 1368 001a BD46     		mov	sp, r7
 1369 001c 02B0     		add	sp, sp, #8
 1370              		@ sp needed
 1371 001e 80BD     		pop	{r7, pc}
 1372              	.L87:
 1373              		.align	2
 1374              	.L86:
 1375 0020 00000000 		.word	CapSense_debounce
 1376              		.cfi_endproc
 1377              	.LFE56:
 1378              		.size	CapSense_SetDebounce, .-CapSense_SetDebounce
 1379              		.section	.text.CapSense_SetLowBaselineReset,"ax",%progbits
 1380              		.align	2
 1381              		.global	CapSense_SetLowBaselineReset
 1382              		.code	16
 1383              		.thumb_func
 1384              		.type	CapSense_SetLowBaselineReset, %function
 1385              	CapSense_SetLowBaselineReset:
 1386              	.LFB57:
1036:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1037:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1038:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1039:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetLowBaselineReset
1040:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1041:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1042:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1043:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the low baseline reset threshold value for the sensor.
1044:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1045:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1046:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value: low baseline reset threshold value.
1047:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensor: Sensor index.
1048:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 44


1049:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1050:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1051:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1052:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1053:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_lowBaselineReset[] - This array contains the Baseline update
1054:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold value for each sensor.
1055:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1056:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1057:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1058:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1059:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1060:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetLowBaselineReset(uint32 sensor, uint8 value)
1061:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1387              		.loc 1 1061 0
 1388              		.cfi_startproc
 1389 0000 80B5     		push	{r7, lr}
 1390              		.cfi_def_cfa_offset 8
 1391              		.cfi_offset 7, -8
 1392              		.cfi_offset 14, -4
 1393 0002 82B0     		sub	sp, sp, #8
 1394              		.cfi_def_cfa_offset 16
 1395 0004 00AF     		add	r7, sp, #0
 1396              		.cfi_def_cfa_register 7
 1397 0006 7860     		str	r0, [r7, #4]
 1398 0008 0A1C     		mov	r2, r1
 1399 000a FB1C     		add	r3, r7, #3
 1400 000c 1A70     		strb	r2, [r3]
1062:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineReset[sensor] = value;
 1401              		.loc 1 1062 0
 1402 000e 044A     		ldr	r2, .L89
 1403 0010 7B68     		ldr	r3, [r7, #4]
 1404 0012 D318     		add	r3, r2, r3
 1405 0014 FA1C     		add	r2, r7, #3
 1406 0016 1278     		ldrb	r2, [r2]
 1407 0018 1A70     		strb	r2, [r3]
1063:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1408              		.loc 1 1063 0
 1409 001a BD46     		mov	sp, r7
 1410 001c 02B0     		add	sp, sp, #8
 1411              		@ sp needed
 1412 001e 80BD     		pop	{r7, pc}
 1413              	.L90:
 1414              		.align	2
 1415              	.L89:
 1416 0020 00000000 		.word	CapSense_lowBaselineReset
 1417              		.cfi_endproc
 1418              	.LFE57:
 1419              		.size	CapSense_SetLowBaselineReset, .-CapSense_SetLowBaselineReset
 1420              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 1421              		.align	2
 1422              		.global	CapSense_CheckIsSensorActive
 1423              		.code	16
 1424              		.thumb_func
 1425              		.type	CapSense_CheckIsSensorActive, %function
 1426              	CapSense_CheckIsSensorActive:
 1427              	.LFB58:
1064:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 45


1065:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1066:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1067:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1068:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
1069:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1070:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1071:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1072:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[sensor] array element to the finger
1073:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into
1074:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold
1075:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  based on whether the sensor is currently active.
1076:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1077:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1078:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1079:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function updates the CapSense_sensorOnMask[] array element.
1080:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1081:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1082:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
1083:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1084:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1085:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1086:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1087:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1088:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - used to store the difference between
1089:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1090:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store the current debounce
1091:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix
1092:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1093:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1094:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store the sensors on/off state.
1095:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors
1096:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1097:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1098:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1099:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor is inactive.
1100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is active.
1101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1102:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1103:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsSensorActive(uint32 sensor)
1107:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1428              		.loc 1 1107 0
 1429              		.cfi_startproc
 1430 0000 80B5     		push	{r7, lr}
 1431              		.cfi_def_cfa_offset 8
 1432              		.cfi_offset 7, -8
 1433              		.cfi_offset 14, -4
 1434 0002 84B0     		sub	sp, sp, #16
 1435              		.cfi_def_cfa_offset 24
 1436 0004 00AF     		add	r7, sp, #0
 1437              		.cfi_def_cfa_register 7
 1438 0006 7860     		str	r0, [r7, #4]
1108:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget;
1109:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounce;
1110:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounceIndex;
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 46


1111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1112:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 fingerThreshold;
1113:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 hysteresis;
1114:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1115:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1116:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
1117:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
 1439              		.loc 1 1117 0
 1440 0008 0F23     		mov	r3, #15
 1441 000a FB18     		add	r3, r7, r3
 1442 000c 4249     		ldr	r1, .L100
 1443 000e 7A68     		ldr	r2, [r7, #4]
 1444 0010 8A18     		add	r2, r1, r2
 1445 0012 1278     		ldrb	r2, [r2]
 1446 0014 1A70     		strb	r2, [r3]
1118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1119:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
 1447              		.loc 1 1119 0
 1448 0016 0F23     		mov	r3, #15
 1449 0018 FB18     		add	r3, r7, r3
 1450 001a 1A78     		ldrb	r2, [r3]
 1451 001c 0E23     		mov	r3, #14
 1452 001e FB18     		add	r3, r7, r3
 1453 0020 3E49     		ldr	r1, .L100+4
 1454 0022 8A5C     		ldrb	r2, [r1, r2]
 1455 0024 1A70     		strb	r2, [r3]
1120:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     hysteresis = CapSense_hysteresis[widget];
 1456              		.loc 1 1120 0
 1457 0026 0F23     		mov	r3, #15
 1458 0028 FB18     		add	r3, r7, r3
 1459 002a 1A78     		ldrb	r2, [r3]
 1460 002c 0D23     		mov	r3, #13
 1461 002e FB18     		add	r3, r7, r3
 1462 0030 3B49     		ldr	r1, .L100+8
 1463 0032 8A5C     		ldrb	r2, [r1, r2]
 1464 0034 1A70     		strb	r2, [r3]
1121:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     debounce = CapSense_debounce[widget];
 1465              		.loc 1 1121 0
 1466 0036 0F23     		mov	r3, #15
 1467 0038 FB18     		add	r3, r7, r3
 1468 003a 1A78     		ldrb	r2, [r3]
 1469 003c 0C23     		mov	r3, #12
 1470 003e FB18     		add	r3, r7, r3
 1471 0040 3849     		ldr	r1, .L100+12
 1472 0042 8A5C     		ldrb	r2, [r1, r2]
 1473 0044 1A70     		strb	r2, [r3]
1122:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1123:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         debounceIndex = widget;
 1474              		.loc 1 1123 0
 1475 0046 0B23     		mov	r3, #11
 1476 0048 FB18     		add	r3, r7, r3
 1477 004a 0F22     		mov	r2, #15
 1478 004c BA18     		add	r2, r7, r2
 1479 004e 1278     		ldrb	r2, [r2]
 1480 0050 1A70     		strb	r2, [r3]
1124:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 47


1126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Was on */
1127:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 1481              		.loc 1 1127 0
 1482 0052 354A     		ldr	r2, .L100+16
 1483 0054 7B68     		ldr	r3, [r7, #4]
 1484 0056 101C     		mov	r0, r2
 1485 0058 191C     		mov	r1, r3
 1486 005a FFF7FEFF 		bl	CapSense_GetBitValue
 1487 005e 031E     		sub	r3, r0, #0
 1488 0060 1DD0     		beq	.L92
1128:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1129:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis minus */
1130:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 1489              		.loc 1 1130 0
 1490 0062 324A     		ldr	r2, .L100+20
 1491 0064 7B68     		ldr	r3, [r7, #4]
 1492 0066 D318     		add	r3, r2, r3
 1493 0068 1B78     		ldrb	r3, [r3]
 1494 006a 191C     		mov	r1, r3
 1495 006c 0E23     		mov	r3, #14
 1496 006e FB18     		add	r3, r7, r3
 1497 0070 1A78     		ldrb	r2, [r3]
 1498 0072 0D23     		mov	r3, #13
 1499 0074 FB18     		add	r3, r7, r3
 1500 0076 1B78     		ldrb	r3, [r3]
 1501 0078 D31A     		sub	r3, r2, r3
 1502 007a 9942     		cmp	r1, r3
 1503 007c 3DDA     		bge	.L94
1131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
 1504              		.loc 1 1132 0
 1505 007e 2A4A     		ldr	r2, .L100+16
 1506 0080 7B68     		ldr	r3, [r7, #4]
 1507 0082 101C     		mov	r0, r2
 1508 0084 191C     		mov	r1, r3
 1509 0086 0022     		mov	r2, #0
 1510 0088 FFF7FEFF 		bl	CapSense_SetBitValue
1133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 1511              		.loc 1 1134 0
 1512 008c 0B23     		mov	r3, #11
 1513 008e FB18     		add	r3, r7, r3
 1514 0090 1B78     		ldrb	r3, [r3]
 1515 0092 274A     		ldr	r2, .L100+24
 1516 0094 0C21     		mov	r1, #12
 1517 0096 7918     		add	r1, r7, r1
 1518 0098 0978     		ldrb	r1, [r1]
 1519 009a D154     		strb	r1, [r2, r3]
 1520 009c 2DE0     		b	.L94
 1521              	.L92:
1135:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1136:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else    /* Was off */
1138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis plus */
1140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 1522              		.loc 1 1140 0
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 48


 1523 009e 234A     		ldr	r2, .L100+20
 1524 00a0 7B68     		ldr	r3, [r7, #4]
 1525 00a2 D318     		add	r3, r2, r3
 1526 00a4 1B78     		ldrb	r3, [r3]
 1527 00a6 191C     		mov	r1, r3
 1528 00a8 0E23     		mov	r3, #14
 1529 00aa FB18     		add	r3, r7, r3
 1530 00ac 1A78     		ldrb	r2, [r3]
 1531 00ae 0D23     		mov	r3, #13
 1532 00b0 FB18     		add	r3, r7, r3
 1533 00b2 1B78     		ldrb	r3, [r3]
 1534 00b4 D318     		add	r3, r2, r3
 1535 00b6 9942     		cmp	r1, r3
 1536 00b8 17DB     		blt	.L95
1141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex]--;
 1537              		.loc 1 1142 0
 1538 00ba 0B23     		mov	r3, #11
 1539 00bc FB18     		add	r3, r7, r3
 1540 00be 1B78     		ldrb	r3, [r3]
 1541 00c0 1B4A     		ldr	r2, .L100+24
 1542 00c2 D25C     		ldrb	r2, [r2, r3]
 1543 00c4 013A     		sub	r2, r2, #1
 1544 00c6 D1B2     		uxtb	r1, r2
 1545 00c8 194A     		ldr	r2, .L100+24
 1546 00ca D154     		strb	r1, [r2, r3]
1143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
 1547              		.loc 1 1144 0
 1548 00cc 0B23     		mov	r3, #11
 1549 00ce FB18     		add	r3, r7, r3
 1550 00d0 1B78     		ldrb	r3, [r3]
 1551 00d2 174A     		ldr	r2, .L100+24
 1552 00d4 D35C     		ldrb	r3, [r2, r3]
 1553 00d6 002B     		cmp	r3, #0
 1554 00d8 0FD1     		bne	.L94
1145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u);
 1555              		.loc 1 1146 0
 1556 00da 134A     		ldr	r2, .L100+16
 1557 00dc 7B68     		ldr	r3, [r7, #4]
 1558 00de 101C     		mov	r0, r2
 1559 00e0 191C     		mov	r1, r3
 1560 00e2 0122     		mov	r2, #1
 1561 00e4 FFF7FEFF 		bl	CapSense_SetBitValue
 1562 00e8 07E0     		b	.L94
 1563              	.L95:
1147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 1564              		.loc 1 1152 0
 1565 00ea 0B23     		mov	r3, #11
 1566 00ec FB18     		add	r3, r7, r3
 1567 00ee 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 49


 1568 00f0 0F4A     		ldr	r2, .L100+24
 1569 00f2 0C21     		mov	r1, #12
 1570 00f4 7918     		add	r1, r7, r1
 1571 00f6 0978     		ldrb	r1, [r1]
 1572 00f8 D154     		strb	r1, [r2, r3]
 1573              	.L94:
1153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1155:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
 1574              		.loc 1 1156 0
 1575 00fa 0B4A     		ldr	r2, .L100+16
 1576 00fc 7B68     		ldr	r3, [r7, #4]
 1577 00fe 101C     		mov	r0, r2
 1578 0100 191C     		mov	r1, r3
 1579 0102 FFF7FEFF 		bl	CapSense_GetBitValue
 1580 0106 031E     		sub	r3, r0, #0
 1581 0108 01D0     		beq	.L97
 1582              		.loc 1 1156 0 is_stmt 0 discriminator 1
 1583 010a 0123     		mov	r3, #1
 1584 010c 00E0     		b	.L98
 1585              	.L97:
 1586              		.loc 1 1156 0 discriminator 2
 1587 010e 0023     		mov	r3, #0
 1588              	.L98:
1157:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1589              		.loc 1 1157 0 is_stmt 1 discriminator 4
 1590 0110 181C     		mov	r0, r3
 1591 0112 BD46     		mov	sp, r7
 1592 0114 04B0     		add	sp, sp, #16
 1593              		@ sp needed
 1594 0116 80BD     		pop	{r7, pc}
 1595              	.L101:
 1596              		.align	2
 1597              	.L100:
 1598 0118 00000000 		.word	CapSense_widgetNumber
 1599 011c 00000000 		.word	CapSense_fingerThreshold
 1600 0120 00000000 		.word	CapSense_hysteresis
 1601 0124 00000000 		.word	CapSense_debounce
 1602 0128 00000000 		.word	CapSense_sensorOnMask
 1603 012c 00000000 		.word	CapSense_sensorSignal
 1604 0130 20000000 		.word	CapSense_debounceCounter
 1605              		.cfi_endproc
 1606              	.LFE58:
 1607              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 1608              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 1609              		.align	2
 1610              		.global	CapSense_CheckIsWidgetActive
 1611              		.code	16
 1612              		.thumb_func
 1613              		.type	CapSense_CheckIsWidgetActive, %function
 1614              	CapSense_CheckIsWidgetActive:
 1615              	.LFB59:
1158:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1159:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1160:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1161:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 50


1162:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1163:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1164:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1165:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of
1166:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account.
1167:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1168:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is
1169:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold
1170:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  is raised by the hysteresis amount.
1171:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The debounce counter added to the sensor active transition.
1172:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1173:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1174:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1175:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1176:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1177:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1178:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are
1179:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1180:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1181:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1182:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1183:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1184:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1185:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1186:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1187:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1188:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsWidgetActive(uint32 widget)
1189:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1616              		.loc 1 1189 0
 1617              		.cfi_startproc
 1618 0000 80B5     		push	{r7, lr}
 1619              		.cfi_def_cfa_offset 8
 1620              		.cfi_offset 7, -8
 1621              		.cfi_offset 14, -4
 1622 0002 86B0     		sub	sp, sp, #24
 1623              		.cfi_def_cfa_offset 32
 1624 0004 00AF     		add	r7, sp, #0
 1625              		.cfi_def_cfa_register 7
 1626 0006 7860     		str	r0, [r7, #4]
1190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
 1627              		.loc 1 1190 0
 1628 0008 114A     		ldr	r2, .L106
 1629 000a 7B68     		ldr	r3, [r7, #4]
 1630 000c D318     		add	r3, r2, r3
 1631 000e 1B78     		ldrb	r3, [r3]
 1632 0010 7B61     		str	r3, [r7, #20]
1191:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
 1633              		.loc 1 1191 0
 1634 0012 104A     		ldr	r2, .L106+4
 1635 0014 7B68     		ldr	r3, [r7, #4]
 1636 0016 D318     		add	r3, r2, r3
 1637 0018 1B78     		ldrb	r3, [r3]
 1638 001a 1A1C     		mov	r2, r3
 1639 001c 7B69     		ldr	r3, [r7, #20]
 1640 001e D318     		add	r3, r2, r3
 1641 0020 FB60     		str	r3, [r7, #12]
1192:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 51


 1642              		.loc 1 1192 0
 1643 0022 0023     		mov	r3, #0
 1644 0024 3B61     		str	r3, [r7, #16]
 1645              	.L104:
1193:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Check all sensors of widget */
1195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1196:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
 1646              		.loc 1 1197 0
 1647 0026 7B69     		ldr	r3, [r7, #20]
 1648 0028 181C     		mov	r0, r3
 1649 002a FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 1650 002e 031E     		sub	r3, r0, #0
 1651 0030 01D0     		beq	.L103
1198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1199:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
 1652              		.loc 1 1199 0
 1653 0032 0123     		mov	r3, #1
 1654 0034 3B61     		str	r3, [r7, #16]
 1655              	.L103:
1200:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1656              		.loc 1 1201 0
 1657 0036 7B69     		ldr	r3, [r7, #20]
 1658 0038 0133     		add	r3, r3, #1
 1659 003a 7B61     		str	r3, [r7, #20]
1202:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1203:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1660              		.loc 1 1203 0
 1661 003c 7A69     		ldr	r2, [r7, #20]
 1662 003e FB68     		ldr	r3, [r7, #12]
 1663 0040 9A42     		cmp	r2, r3
 1664 0042 F0D3     		bcc	.L104
1204:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1205:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1206:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1207:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1665              		.loc 1 1207 0
 1666 0044 3B69     		ldr	r3, [r7, #16]
1208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1667              		.loc 1 1208 0
 1668 0046 181C     		mov	r0, r3
 1669 0048 BD46     		mov	sp, r7
 1670 004a 06B0     		add	sp, sp, #24
 1671              		@ sp needed
 1672 004c 80BD     		pop	{r7, pc}
 1673              	.L107:
 1674 004e C046     		.align	2
 1675              	.L106:
 1676 0050 00000000 		.word	CapSense_rawDataIndex
 1677 0054 00000000 		.word	CapSense_numberOfSensors
 1678              		.cfi_endproc
 1679              	.LFE59:
 1680              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 1681              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 1682              		.align	2
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 52


 1683              		.global	CapSense_CheckIsAnyWidgetActive
 1684              		.code	16
 1685              		.thumb_func
 1686              		.type	CapSense_CheckIsAnyWidgetActive, %function
 1687              	CapSense_CheckIsAnyWidgetActive:
 1688              	.LFB60:
1209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1212:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
1213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1215:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1216:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares all the sensors of the CapSense_Signal[] array to their finger
1217:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so
1218:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the CapSense_sensorOnMask[] array is up to date after calling this
1219:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  function.
1220:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1221:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1222:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1223:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1224:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1225:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1226:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1227:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1231:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1232:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1233:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1234:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsAnyWidgetActive(void)
1235:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1689              		.loc 1 1235 0
 1690              		.cfi_startproc
 1691 0000 80B5     		push	{r7, lr}
 1692              		.cfi_def_cfa_offset 8
 1693              		.cfi_offset 7, -8
 1694              		.cfi_offset 14, -4
 1695 0002 82B0     		sub	sp, sp, #8
 1696              		.cfi_def_cfa_offset 16
 1697 0004 00AF     		add	r7, sp, #0
 1698              		.cfi_def_cfa_register 7
1236:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1237:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 i;
1238:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 1699              		.loc 1 1238 0
 1700 0006 0023     		mov	r3, #0
 1701 0008 3B60     		str	r3, [r7]
1239:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 1702              		.loc 1 1240 0
 1703 000a 0023     		mov	r3, #0
 1704 000c 7B60     		str	r3, [r7, #4]
 1705 000e 0AE0     		b	.L109
 1706              	.L111:
1241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 53


1242:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 1707              		.loc 1 1242 0
 1708 0010 7B68     		ldr	r3, [r7, #4]
 1709 0012 181C     		mov	r0, r3
 1710 0014 FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 1711 0018 031E     		sub	r3, r0, #0
 1712 001a 01D0     		beq	.L110
1243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 1713              		.loc 1 1244 0
 1714 001c 0123     		mov	r3, #1
 1715 001e 3B60     		str	r3, [r7]
 1716              	.L110:
1240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1717              		.loc 1 1240 0 discriminator 2
 1718 0020 7B68     		ldr	r3, [r7, #4]
 1719 0022 0133     		add	r3, r3, #1
 1720 0024 7B60     		str	r3, [r7, #4]
 1721              	.L109:
1240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1722              		.loc 1 1240 0 is_stmt 0 discriminator 1
 1723 0026 7B68     		ldr	r3, [r7, #4]
 1724 0028 042B     		cmp	r3, #4
 1725 002a F1D9     		bls	.L111
1245:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1246:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1247:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1249:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1250:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1726              		.loc 1 1250 0 is_stmt 1
 1727 002c 3B68     		ldr	r3, [r7]
1251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1728              		.loc 1 1251 0
 1729 002e 181C     		mov	r0, r3
 1730 0030 BD46     		mov	sp, r7
 1731 0032 02B0     		add	sp, sp, #8
 1732              		@ sp needed
 1733 0034 80BD     		pop	{r7, pc}
 1734              		.cfi_endproc
 1735              	.LFE60:
 1736              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 1737 0036 C046     		.section	.text.CapSense_EnableWidget,"ax",%progbits
 1738              		.align	2
 1739              		.global	CapSense_EnableWidget
 1740              		.code	16
 1741              		.thumb_func
 1742              		.type	CapSense_EnableWidget, %function
 1743              	CapSense_EnableWidget:
 1744              	.LFB61:
1252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1254:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1255:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
1256:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1257:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 54


1259:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1260:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1261:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
1275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
1276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1278:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1281:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_EnableWidget(uint32 widget)
1282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1745              		.loc 1 1282 0
 1746              		.cfi_startproc
 1747 0000 80B5     		push	{r7, lr}
 1748              		.cfi_def_cfa_offset 8
 1749              		.cfi_offset 7, -8
 1750              		.cfi_offset 14, -4
 1751 0002 84B0     		sub	sp, sp, #16
 1752              		.cfi_def_cfa_offset 24
 1753 0004 00AF     		add	r7, sp, #0
 1754              		.cfi_def_cfa_register 7
 1755 0006 7860     		str	r0, [r7, #4]
1283:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1284:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1756              		.loc 1 1284 0
 1757 0008 0F23     		mov	r3, #15
 1758 000a FB18     		add	r3, r7, r3
 1759 000c 1549     		ldr	r1, .L115
 1760 000e 7A68     		ldr	r2, [r7, #4]
 1761 0010 8A18     		add	r2, r1, r2
 1762 0012 1278     		ldrb	r2, [r2]
 1763 0014 1A70     		strb	r2, [r3]
1285:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1764              		.loc 1 1285 0
 1765 0016 144A     		ldr	r2, .L115+4
 1766 0018 7B68     		ldr	r3, [r7, #4]
 1767 001a D318     		add	r3, r2, r3
 1768 001c 1978     		ldrb	r1, [r3]
 1769 001e 0E23     		mov	r3, #14
 1770 0020 FB18     		add	r3, r7, r3
 1771 0022 0F22     		mov	r2, #15
 1772 0024 BA18     		add	r2, r7, r2
 1773 0026 1278     		ldrb	r2, [r2]
 1774 0028 8A18     		add	r2, r1, r2
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 55


 1775 002a 1A70     		strb	r2, [r3]
 1776              	.L114:
1286:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1287:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Enable all sensors of widget */
1288:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 1777              		.loc 1 1290 0 discriminator 1
 1778 002c 0F23     		mov	r3, #15
 1779 002e FB18     		add	r3, r7, r3
 1780 0030 1B78     		ldrb	r3, [r3]
 1781 0032 0E4A     		ldr	r2, .L115+8
 1782 0034 101C     		mov	r0, r2
 1783 0036 191C     		mov	r1, r3
 1784 0038 0122     		mov	r2, #1
 1785 003a FFF7FEFF 		bl	CapSense_SetBitValue
1291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1786              		.loc 1 1291 0 discriminator 1
 1787 003e 0F23     		mov	r3, #15
 1788 0040 FB18     		add	r3, r7, r3
 1789 0042 1A78     		ldrb	r2, [r3]
 1790 0044 0F23     		mov	r3, #15
 1791 0046 FB18     		add	r3, r7, r3
 1792 0048 0132     		add	r2, r2, #1
 1793 004a 1A70     		strb	r2, [r3]
1292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1794              		.loc 1 1293 0 discriminator 1
 1795 004c 0F23     		mov	r3, #15
 1796 004e FA18     		add	r2, r7, r3
 1797 0050 0E23     		mov	r3, #14
 1798 0052 FB18     		add	r3, r7, r3
 1799 0054 1278     		ldrb	r2, [r2]
 1800 0056 1B78     		ldrb	r3, [r3]
 1801 0058 9A42     		cmp	r2, r3
 1802 005a E7D3     		bcc	.L114
1294:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1803              		.loc 1 1294 0
 1804 005c BD46     		mov	sp, r7
 1805 005e 04B0     		add	sp, sp, #16
 1806              		@ sp needed
 1807 0060 80BD     		pop	{r7, pc}
 1808              	.L116:
 1809 0062 C046     		.align	2
 1810              	.L115:
 1811 0064 00000000 		.word	CapSense_rawDataIndex
 1812 0068 00000000 		.word	CapSense_numberOfSensors
 1813 006c 00000000 		.word	CapSense_sensorEnableMask
 1814              		.cfi_endproc
 1815              	.LFE61:
 1816              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 1817              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 1818              		.align	2
 1819              		.global	CapSense_DisableWidget
 1820              		.code	16
 1821              		.thumb_func
 1822              		.type	CapSense_DisableWidget, %function
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 56


 1823              	CapSense_DisableWidget:
 1824              	.LFB62:
1295:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1296:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1297:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1298:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
1299:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1300:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1301:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1302:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1303:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1304:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1305:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1306:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1307:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1308:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1309:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1310:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor isn't scanned by CapSense_ScanEnabledWidgets().
1318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is scanned by CapSense_ScanEnabledWidgets().
1319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1320:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1321:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1322:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1323:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1324:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_DisableWidget(uint32 widget)
1325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1825              		.loc 1 1325 0
 1826              		.cfi_startproc
 1827 0000 80B5     		push	{r7, lr}
 1828              		.cfi_def_cfa_offset 8
 1829              		.cfi_offset 7, -8
 1830              		.cfi_offset 14, -4
 1831 0002 84B0     		sub	sp, sp, #16
 1832              		.cfi_def_cfa_offset 24
 1833 0004 00AF     		add	r7, sp, #0
 1834              		.cfi_def_cfa_register 7
 1835 0006 7860     		str	r0, [r7, #4]
1326:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1836              		.loc 1 1326 0
 1837 0008 0F23     		mov	r3, #15
 1838 000a FB18     		add	r3, r7, r3
 1839 000c 1549     		ldr	r1, .L119
 1840 000e 7A68     		ldr	r2, [r7, #4]
 1841 0010 8A18     		add	r2, r1, r2
 1842 0012 1278     		ldrb	r2, [r2]
 1843 0014 1A70     		strb	r2, [r3]
1327:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1844              		.loc 1 1327 0
 1845 0016 144A     		ldr	r2, .L119+4
 1846 0018 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 57


 1847 001a D318     		add	r3, r2, r3
 1848 001c 1978     		ldrb	r1, [r3]
 1849 001e 0E23     		mov	r3, #14
 1850 0020 FB18     		add	r3, r7, r3
 1851 0022 0F22     		mov	r2, #15
 1852 0024 BA18     		add	r2, r7, r2
 1853 0026 1278     		ldrb	r2, [r2]
 1854 0028 8A18     		add	r2, r1, r2
 1855 002a 1A70     		strb	r2, [r3]
 1856              	.L118:
1328:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1329:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Disable all sensors of widget */
1330:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1331:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1332:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1333:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 1857              		.loc 1 1333 0 discriminator 1
 1858 002c 0F23     		mov	r3, #15
 1859 002e FB18     		add	r3, r7, r3
 1860 0030 1B78     		ldrb	r3, [r3]
 1861 0032 0E4A     		ldr	r2, .L119+8
 1862 0034 101C     		mov	r0, r2
 1863 0036 191C     		mov	r1, r3
 1864 0038 0022     		mov	r2, #0
 1865 003a FFF7FEFF 		bl	CapSense_SetBitValue
1334:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1866              		.loc 1 1334 0 discriminator 1
 1867 003e 0F23     		mov	r3, #15
 1868 0040 FB18     		add	r3, r7, r3
 1869 0042 1A78     		ldrb	r2, [r3]
 1870 0044 0F23     		mov	r3, #15
 1871 0046 FB18     		add	r3, r7, r3
 1872 0048 0132     		add	r2, r2, #1
 1873 004a 1A70     		strb	r2, [r3]
1335:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1336:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1874              		.loc 1 1336 0 discriminator 1
 1875 004c 0F23     		mov	r3, #15
 1876 004e FA18     		add	r2, r7, r3
 1877 0050 0E23     		mov	r3, #14
 1878 0052 FB18     		add	r3, r7, r3
 1879 0054 1278     		ldrb	r2, [r2]
 1880 0056 1B78     		ldrb	r3, [r3]
 1881 0058 9A42     		cmp	r2, r3
 1882 005a E7D3     		bcc	.L118
1337:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1883              		.loc 1 1337 0
 1884 005c BD46     		mov	sp, r7
 1885 005e 04B0     		add	sp, sp, #16
 1886              		@ sp needed
 1887 0060 80BD     		pop	{r7, pc}
 1888              	.L120:
 1889 0062 C046     		.align	2
 1890              	.L119:
 1891 0064 00000000 		.word	CapSense_rawDataIndex
 1892 0068 00000000 		.word	CapSense_numberOfSensors
 1893 006c 00000000 		.word	CapSense_sensorEnableMask
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 58


 1894              		.cfi_endproc
 1895              	.LFE62:
 1896              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 1897              		.section	.text.CapSense_MedianFilter,"ax",%progbits
 1898              		.align	2
 1899              		.global	CapSense_MedianFilter
 1900              		.code	16
 1901              		.thumb_func
 1902              		.type	CapSense_MedianFilter, %function
 1903              	CapSense_MedianFilter:
 1904              	.LFB63:
1338:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1339:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1341:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1342:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
1343:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1346:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks
1347:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[] within a defined centroid and
1348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are
1349:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  ignored.
1350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:  Start index of centroid in CapSense_sensorSignal[] array.
1356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
1357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
1359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_startOfSlider[] - contains the index of the first slider element
1366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1367:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1371:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_IS_DIPLEX_SLIDER)
1372:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 *d
1373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
1374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
1378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curPos = 0u;
1380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No centroid at Start */
1381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
1382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Biggest centroid is zero */
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 59


1384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
1388:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 temp = 0u;
1390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
1391:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(diplex != 0u)
1394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Initialize */
1396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 i = 0u;
1397:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
1399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count <<= 1u;
1400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 while(1u)
1401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (curCtrdStartPos == CapSense_MAXIMUM_CENTROID)
1405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Start of centroid */
1407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = i;
1408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
1411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
1418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* We are at the end of current */
1420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1425:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize = 0u;
1427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1430:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     i++;
1432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     curPos = diplex[i];
1433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(i == count)
1434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         break;
1436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1438:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                        We are at the end of current */
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 60


1441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize)
1442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Without diplexing */
1450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 biggestCtrdSize = count;
1451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1452:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1453:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Check centroid size */
1455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
1456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
1458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (diplex == 0u)
1465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = i;
1467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             else
1469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = diplex[i];
1471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)
1473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curPos = diplex[i];
1474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Looking for greater element within centroid */
1476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 maximum = i;
1481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
1488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Looking for greater element within centroid */
1490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
1491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
1493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
1495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
1496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 61


1498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (maximum);
1501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1502:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1503:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution.
1511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  type:  widget type.
1514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:   Start index of centroid in CapSense_sensorSignal[] array.
1517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  API resolution.
1520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1523:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the slider.
1524:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1525:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1526:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1527:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1528:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1529:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1530:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1531:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1532:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else
1533:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1534:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1535:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1536:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1537:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posPrev;
1539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posNext;
1540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1541:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Helps during centroid calculation */
1543:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             static uint8 CapSense_centroid[3u];
1545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1546:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1547:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 pos;
1549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1550:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 position;
1552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 numerator;
1553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         int32 denominator;
1554:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 62


1555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8  *startOfSlider = &CapSense_sensorSignal[offset];
1556:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
1559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1560:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1565:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1568:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1569:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1570:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1571:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1572:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1573:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1577:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1578:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1580:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1586:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1587:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1588:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1589:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1590:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1591:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1592:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1593:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(diplex == 0u)
1598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = maximum;
1600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = maximum + 1u;
1602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         count <<= 1u;
1609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 63


1612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1614:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1615:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     count <<= 1u;
1616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (maximum >= 1u)
1619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = maximum + 1u;
1623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1624:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1625:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1630:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1631:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1632:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1633:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1634:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1635:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
1636:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
1642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_BASIC_C
1649:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1652:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1653:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
1656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
1658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
1662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1663:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
1666:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 64


1669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
1671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1673:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1674:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
1675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1676:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1677:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
1680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
1681:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] +
1684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
1685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
1686:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
1689:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(denominator < 0)
1693:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1697:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1698:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator *= (int16)resolution;
1699:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1700:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Round result and put it to uint8 */
1701:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
1702:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1703:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1704:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1707:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1709:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1710:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1711:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1712:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1713:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1714:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1715:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1716:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1717:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1718:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1719:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1720:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1721:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1722:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__LS           5
1723:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1724:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1725:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the linear slider.
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 65


1726:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1727:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1728:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1729:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1730:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1731:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1732:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1733:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1734:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1735:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1736:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1737:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1738:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1739:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1740:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1741:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1742:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1743:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1744:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint32 widget)
1745:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1746:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1747:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             const uint8 *diplex;
1748:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1750:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1751:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1752:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1753:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1754:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1756:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1757:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1758:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1759:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1760:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1761:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1763:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1764:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1765:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1766:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1768:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1769:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1770:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1771:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1772:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1773:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1774:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1775:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1776:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = 0u;
1777:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1778:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1780:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1781:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1782:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 66


1783:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1784:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
1785:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1787:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != 0xFFu)
1788:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1789:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1790:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
1791:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1792:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1793:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1794:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1795:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1796:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1797:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1798:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1800:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1801:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1802:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1803:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1804:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1805:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1806:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1807:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1808:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1809:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
1810:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1811:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1812:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1813:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1814:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1815:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1816:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1817:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1818:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1819:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1820:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1821:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1822:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1823:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1824:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
1825:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1826:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1827:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1828:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1829:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1830:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1831:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1832:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1833:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1834:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1835:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1836:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1837:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1838:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1839:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 67


1840:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1841:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1842:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1843:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1844:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1845:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1846:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1847:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1848:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1849:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1850:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1851:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1852:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1853:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1854:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1855:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1856:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1857:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1858:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1859:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1860:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1861:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1862:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1863:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1864:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1865:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1866:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1867:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1868:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1869:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1870:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1871:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1872:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1873:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1874:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1875:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1876:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1877:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1878:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1879:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1880:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1881:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1882:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1883:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1884:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1885:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1886:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1887:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1888:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1889:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1890:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1891:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1892:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1893:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found */
1894:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
1895:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1896:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 68


1897:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
1898:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1899:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1900:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1901:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1902:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1903:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1904:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1905:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1906:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1907:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1908:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1909:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1910:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1911:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1912:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1913:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1914:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1915:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1916:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1917:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1918:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1919:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1920:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1921:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1922:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1923:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1924:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1925:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__RS           5
1926:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1927:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1928:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the radial slider.
1929:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1930:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1931:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
1932:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1933:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1934:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1935:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1936:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1937:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1938:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1939:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1940:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1941:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1942:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1943:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1944:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1945:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1946:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1947:.\Generated_Source\PSoC4/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint32 widget)
1948:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1949:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1950:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1951:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1952:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1953:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 69


1954:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1955:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1956:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1957:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1958:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1959:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1960:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1961:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1962:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1963:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1964:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1965:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1966:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1967:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1968:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1969:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1970:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1971:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
1972:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1973:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1974:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != CapSense_MAXIMUM_CENTROID)
1975:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1976:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1977:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
1978:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1979:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1980:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1981:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1982:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1983:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1984:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1985:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1986:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1987:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1988:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1989:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1990:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1991:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1992:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1993:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1994:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1995:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1996:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  ||
1997:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1998:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1999:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
2000:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2001:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2002:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2003:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
2004:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2005:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2006:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2007:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
2008:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2009:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
2010:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 70


2011:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
2012:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2013:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2014:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2015:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2016:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
2017:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2018:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2019:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
2020:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
2021:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2022:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2023:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER &
2024:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2025:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2026:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2027:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
2028:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2029:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2030:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2031:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2032:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
2033:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2034:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2035:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
2036:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2037:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2038:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2039:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2040:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2041:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2042:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2043:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2044:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2045:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
2046:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2047:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2048:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2049:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER &
2050:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2051:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2052:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2053:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2054:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2055:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2056:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
2057:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2058:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2059:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2060:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER &
2061:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2062:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2063:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2064:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2065:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2066:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2067:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 71


2068:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
2069:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2070:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2071:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
2072:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2073:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2074:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2075:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2076:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2077:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2078:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2079:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2080:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2081:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum was not found */
2082:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
2083:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2084:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2085:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2086:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2087:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2088:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2089:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2090:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2091:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2092:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2093:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
2094:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2095:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2096:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2097:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2098:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2099:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2100:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
2101:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2102:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2103:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2104:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2105:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2106:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2107:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2108:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
2109:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2110:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  customizer.
2111:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2112:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2113:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
2114:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2115:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__TP            5
2116:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2117:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2118:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
2119:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[0u]  - position of X
2120:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
2121:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2122:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2123:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2124:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 72


2125:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2127:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2128:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2129:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2130:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   calculations.
2132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetTouchCentroidPos(uint32 widget, uint16* pos)
2135:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2136:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posXIndex;
2138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posYIndex;
2139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
2140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
2141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2142:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint16 tempPos;
2146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
2149:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxX;
2151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxY;
2152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posX;
2153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posY;
2154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 touch = 0u;
2155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
2156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
2157:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
2159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
2160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
2161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
2163:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2164:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (MaxX != CapSense_MAXIMUM_CENTROID)
2166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
2168:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
2169:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
2171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
2172:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
2173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
2174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
2175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2176:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (MaxY != CapSense_MAXIMUM_CENTROID)
2178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2179:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2180:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 touch = 1u;
2181:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 73


2182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate Y centroid */
2183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count,
2184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
2185:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2186:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate X centroid */
2187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
2188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
2189:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count,
2191:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
2192:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2193:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
2195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2196:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Calculate position to store filters data */
2198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2199:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
2200:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
2202:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2203:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Init filters */
2204:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
2205:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
2206:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2207:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
2208:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
2209:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
2210:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2212:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
2213:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2214:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2215:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
2216:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
2217:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2218:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2220:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
2221:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2223:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2224:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
2225:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2226:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
2227:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2228:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Do filtering */
2229:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2230:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2231:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2232:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2233:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
2234:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2235:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2236:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2237:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2238:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 74


2239:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
2242:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2245:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2246:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2247:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2249:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
2250:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2251:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2253:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
2254:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2255:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2256:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2257:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
2258:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2259:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2260:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2261:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2262:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2264:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2265:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY,
2266:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2267:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2268:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2269:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2270:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2271:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2273:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2274:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2275:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2277:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2278:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2279:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2280:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX,
2281:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
2282:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2283:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2284:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY,
2285:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2286:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2287:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2288:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
2290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2292:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 75


2296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
2297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2298:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2299:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
2301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2302:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2303:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2304:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
2306:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2307:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2308:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2309:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2310:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2311:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     {
2312:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX,
2313:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2314:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
2315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2316:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY,
2317:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2318:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
2319:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     }
2320:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
2321:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2322:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2323:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2324:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2325:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2326:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2327:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Save positions */
2328:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = posX;
2329:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = posY;
2330:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2331:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2332:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2333:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2334:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(touch == 0u)
2335:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2336:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2337:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2338:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2339:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2340:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2341:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2342:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2343:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (touch);
2345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2346:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2347:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2348:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2349:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) )
2352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 76


2353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
2354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Median filter function.
2358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the
2359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  median value.
2360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2367:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2371:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2372:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1905              		.loc 1 2377 0
 1906              		.cfi_startproc
 1907 0000 90B5     		push	{r4, r7, lr}
 1908              		.cfi_def_cfa_offset 12
 1909              		.cfi_offset 4, -12
 1910              		.cfi_offset 7, -8
 1911              		.cfi_offset 14, -4
 1912 0002 85B0     		sub	sp, sp, #20
 1913              		.cfi_def_cfa_offset 32
 1914 0004 00AF     		add	r7, sp, #0
 1915              		.cfi_def_cfa_register 7
 1916 0006 041C     		mov	r4, r0
 1917 0008 081C     		mov	r0, r1
 1918 000a 111C     		mov	r1, r2
 1919 000c BB1D     		add	r3, r7, #6
 1920 000e 221C     		add	r2, r4, #0
 1921 0010 1A80     		strh	r2, [r3]
 1922 0012 3B1D     		add	r3, r7, #4
 1923 0014 021C     		add	r2, r0, #0
 1924 0016 1A80     		strh	r2, [r3]
 1925 0018 BB1C     		add	r3, r7, #2
 1926 001a 0A1C     		add	r2, r1, #0
 1927 001c 1A80     		strh	r2, [r3]
2378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 tmp;
2379:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
 1928              		.loc 1 2380 0
 1929 001e BA1D     		add	r2, r7, #6
 1930 0020 3B1D     		add	r3, r7, #4
 1931 0022 1288     		ldrh	r2, [r2]
 1932 0024 1B88     		ldrh	r3, [r3]
 1933 0026 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 77


 1934 0028 0DD9     		bls	.L122
2381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tmp = x2;
 1935              		.loc 1 2382 0
 1936 002a 0E23     		mov	r3, #14
 1937 002c FB18     		add	r3, r7, r3
 1938 002e 3A1D     		add	r2, r7, #4
 1939 0030 1288     		ldrh	r2, [r2]
 1940 0032 1A80     		strh	r2, [r3]
2383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
 1941              		.loc 1 2383 0
 1942 0034 3B1D     		add	r3, r7, #4
 1943 0036 BA1D     		add	r2, r7, #6
 1944 0038 1288     		ldrh	r2, [r2]
 1945 003a 1A80     		strh	r2, [r3]
2384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 1946              		.loc 1 2384 0
 1947 003c BB1D     		add	r3, r7, #6
 1948 003e 0E22     		mov	r2, #14
 1949 0040 BA18     		add	r2, r7, r2
 1950 0042 1288     		ldrh	r2, [r2]
 1951 0044 1A80     		strh	r2, [r3]
 1952              	.L122:
2385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2386:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x2 > x3)
 1953              		.loc 1 2387 0
 1954 0046 3A1D     		add	r2, r7, #4
 1955 0048 BB1C     		add	r3, r7, #2
 1956 004a 1288     		ldrh	r2, [r2]
 1957 004c 1B88     		ldrh	r3, [r3]
 1958 004e 9A42     		cmp	r2, r3
 1959 0050 03D9     		bls	.L123
2388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x3;
 1960              		.loc 1 2389 0
 1961 0052 3B1D     		add	r3, r7, #4
 1962 0054 BA1C     		add	r2, r7, #2
 1963 0056 1288     		ldrh	r2, [r2]
 1964 0058 1A80     		strh	r2, [r3]
 1965              	.L123:
2390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2391:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 1966              		.loc 1 2392 0
 1967 005a 3B1D     		add	r3, r7, #4
 1968 005c BA1D     		add	r2, r7, #6
 1969 005e 1088     		ldrh	r0, [r2]
 1970 0060 1B88     		ldrh	r3, [r3]
 1971 0062 99B2     		uxth	r1, r3
 1972 0064 82B2     		uxth	r2, r0
 1973 0066 9142     		cmp	r1, r2
 1974 0068 00D2     		bcs	.L124
 1975 006a 031C     		add	r3, r0, #0
 1976              	.L124:
 1977 006c 9BB2     		uxth	r3, r3
2393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 78


 1978              		.loc 1 2393 0
 1979 006e 181C     		mov	r0, r3
 1980 0070 BD46     		mov	sp, r7
 1981 0072 05B0     		add	sp, sp, #20
 1982              		@ sp needed
 1983 0074 90BD     		pop	{r4, r7, pc}
 1984              		.cfi_endproc
 1985              	.LFE63:
 1986              		.size	CapSense_MedianFilter, .-CapSense_MedianFilter
 1987              		.global	__aeabi_uidiv
 1988 0076 C046     		.section	.text.CapSense_AveragingFilter,"ax",%progbits
 1989              		.align	2
 1990              		.global	CapSense_AveragingFilter
 1991              		.code	16
 1992              		.thumb_func
 1993              		.type	CapSense_AveragingFilter, %function
 1994              	CapSense_AveragingFilter:
 1995              	.LFB64:
2394:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) ) */
2397:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2398:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2399:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) || \
2400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER)) )
2401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
2403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Averaging filter function.
2407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  reports the averaging value.
2409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1996              		.loc 1 2426 0
 1997              		.cfi_startproc
 1998 0000 90B5     		push	{r4, r7, lr}
 1999              		.cfi_def_cfa_offset 12
 2000              		.cfi_offset 4, -12
 2001              		.cfi_offset 7, -8
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 79


 2002              		.cfi_offset 14, -4
 2003 0002 85B0     		sub	sp, sp, #20
 2004              		.cfi_def_cfa_offset 32
 2005 0004 00AF     		add	r7, sp, #0
 2006              		.cfi_def_cfa_register 7
 2007 0006 041C     		mov	r4, r0
 2008 0008 081C     		mov	r0, r1
 2009 000a 111C     		mov	r1, r2
 2010 000c BB1D     		add	r3, r7, #6
 2011 000e 221C     		add	r2, r4, #0
 2012 0010 1A80     		strh	r2, [r3]
 2013 0012 3B1D     		add	r3, r7, #4
 2014 0014 021C     		add	r2, r0, #0
 2015 0016 1A80     		strh	r2, [r3]
 2016 0018 BB1C     		add	r3, r7, #2
 2017 001a 0A1C     		add	r2, r1, #0
 2018 001c 1A80     		strh	r2, [r3]
2427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
 2019              		.loc 1 2427 0
 2020 001e BB1D     		add	r3, r7, #6
 2021 0020 1A88     		ldrh	r2, [r3]
 2022 0022 3B1D     		add	r3, r7, #4
 2023 0024 1B88     		ldrh	r3, [r3]
 2024 0026 D218     		add	r2, r2, r3
 2025 0028 BB1C     		add	r3, r7, #2
 2026 002a 1B88     		ldrh	r3, [r3]
 2027 002c D318     		add	r3, r2, r3
 2028 002e 181C     		mov	r0, r3
 2029 0030 0321     		mov	r1, #3
 2030 0032 FFF7FEFF 		bl	__aeabi_uidiv
 2031 0036 031C     		mov	r3, r0
 2032 0038 FB60     		str	r3, [r7, #12]
2428:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
 2033              		.loc 1 2429 0
 2034 003a FB68     		ldr	r3, [r7, #12]
 2035 003c 9BB2     		uxth	r3, r3
2430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2036              		.loc 1 2430 0
 2037 003e 181C     		mov	r0, r3
 2038 0040 BD46     		mov	sp, r7
 2039 0042 05B0     		add	sp, sp, #20
 2040              		@ sp needed
 2041 0044 90BD     		pop	{r4, r7, pc}
 2042              		.cfi_endproc
 2043              	.LFE64:
 2044              		.size	CapSense_AveragingFilter, .-CapSense_AveragingFilter
 2045 0046 C046     		.section	.text.CapSense_GetWidgetNumber,"ax",%progbits
 2046              		.align	2
 2047              		.global	CapSense_GetWidgetNumber
 2048              		.code	16
 2049              		.thumb_func
 2050              		.type	CapSense_GetWidgetNumber, %function
 2051              	CapSense_GetWidgetNumber:
 2052              	.LFB65:
2431:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
2432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) ) */
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 80


2433:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2434:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2435:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
2439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
2459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2461:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 1u;
2465:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2468:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2471:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2472:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2473:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
2477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a filtered value.
2488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 81


2490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2499:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
2503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
2504:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2507:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2510:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2511:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2512:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) || \
2514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)))
2515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: uint16 CapSense_JitterFilter
2517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Jitter filter function.
2521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2523:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2524:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2525:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2526:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2527:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2528:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2529:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2530:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2531:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2532:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2533:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2534:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2535:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2536:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2)
2537:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1--;
2541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2543:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (x1 < x2)
2545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 x1++;
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 82


2547:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2549:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2550:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return x1;
2551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2552:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2556:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2557:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2558:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))
2559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR8Filter
2561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2568:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2569:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2570:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2571:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2572:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2573:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2577:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2578:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2580:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2)
2582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2584:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2586:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2587:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2588:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 3u;
2589:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2590:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2591:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2592:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)) */
2593:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2594:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2595:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
2596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR16Filter
2598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 83


2604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2614:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2615:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2)
2619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2621:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2625:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 4u;
2626:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2629:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) */
2630:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2631:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2632:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT))
2633:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2634:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2635:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetMatrixButtonPos
2636:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  button widget.
2641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number;
2644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be
2645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           stored:
2646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[0] - column position;
2647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[1] - raw position.
2648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  cases.
2652:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2653:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[ ] - used to store a difference between the current value of
2656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  raw data and a previous value of the baseline.
2657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 84


2661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
2665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 retVal = 0u;
2666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 row_sig_max = 0u;
2667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 col_sig_max = 0u;
2668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 row_ind = 0u;
2669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 col_ind = 0u;
2670:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(widget) == 1u)
2672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2673:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2674:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget]; i < (CapSense_rawDataIndex[widget] + \
2675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget]); i++)
2676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > col_sig_max)
2678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_ind = i;
2680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_sig_max = CapSense_sensorSignal[i];
2681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2683:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget+1u]; i < (CapSense_rawDataIndex[widget+1u] + \
2686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget+1u]); i++)
2687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > row_sig_max)
2689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_ind = i;
2691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_sig_max = CapSense_sensorSignal[i];
2692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2693:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2694:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if((col_sig_max >= CapSense_fingerThreshold[widget]) && \
2696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                (row_sig_max >= CapSense_fingerThreshold[widget+1u]))
2697:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2698:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = col_ind - CapSense_rawDataIndex[widget];
2699:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = row_ind - CapSense_rawDataIndex[widget+1u];
2700:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 retVal = 1u;
2701:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2702:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2703:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (retVal);
2704:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
2707:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetWidgetNumber
2710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 85


2718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
2724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_GetWidgetNumber(uint32 sensor)
2730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2053              		.loc 1 2730 0
 2054              		.cfi_startproc
 2055 0000 80B5     		push	{r7, lr}
 2056              		.cfi_def_cfa_offset 8
 2057              		.cfi_offset 7, -8
 2058              		.cfi_offset 14, -4
 2059 0002 82B0     		sub	sp, sp, #8
 2060              		.cfi_def_cfa_offset 16
 2061 0004 00AF     		add	r7, sp, #0
 2062              		.cfi_def_cfa_register 7
 2063 0006 7860     		str	r0, [r7, #4]
2731:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return((uint32)CapSense_widgetNumber[sensor]);
 2064              		.loc 1 2731 0
 2065 0008 034A     		ldr	r2, .L130
 2066 000a 7B68     		ldr	r3, [r7, #4]
 2067 000c D318     		add	r3, r2, r3
 2068 000e 1B78     		ldrb	r3, [r3]
2732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2069              		.loc 1 2732 0
 2070 0010 181C     		mov	r0, r3
 2071 0012 BD46     		mov	sp, r7
 2072 0014 02B0     		add	sp, sp, #8
 2073              		@ sp needed
 2074 0016 80BD     		pop	{r7, pc}
 2075              	.L131:
 2076              		.align	2
 2077              	.L130:
 2078 0018 00000000 		.word	CapSense_widgetNumber
 2079              		.cfi_endproc
 2080              	.LFE65:
 2081              		.size	CapSense_GetWidgetNumber, .-CapSense_GetWidgetNumber
 2082              		.section	.text.CapSense_GetLowBaselineReset,"ax",%progbits
 2083              		.align	2
 2084              		.global	CapSense_GetLowBaselineReset
 2085              		.code	16
 2086              		.thumb_func
 2087              		.type	CapSense_GetLowBaselineReset, %function
 2088              	CapSense_GetLowBaselineReset:
 2089              	.LFB66:
2733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetLowBaselineReset
2736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 86


2738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  low baseline reset threshold value a sensor.
2747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_lowBaselineReset[]  - stores low baseline reset values.
2750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetLowBaselineReset(uint32 sensor)
2756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2090              		.loc 1 2756 0
 2091              		.cfi_startproc
 2092 0000 80B5     		push	{r7, lr}
 2093              		.cfi_def_cfa_offset 8
 2094              		.cfi_offset 7, -8
 2095              		.cfi_offset 14, -4
 2096 0002 82B0     		sub	sp, sp, #8
 2097              		.cfi_def_cfa_offset 16
 2098 0004 00AF     		add	r7, sp, #0
 2099              		.cfi_def_cfa_register 7
 2100 0006 7860     		str	r0, [r7, #4]
2757:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_lowBaselineReset[sensor]);
 2101              		.loc 1 2757 0
 2102 0008 034A     		ldr	r2, .L134
 2103 000a 7B68     		ldr	r3, [r7, #4]
 2104 000c D318     		add	r3, r2, r3
 2105 000e 1B78     		ldrb	r3, [r3]
2758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2106              		.loc 1 2758 0
 2107 0010 181C     		mov	r0, r3
 2108 0012 BD46     		mov	sp, r7
 2109 0014 02B0     		add	sp, sp, #8
 2110              		@ sp needed
 2111 0016 80BD     		pop	{r7, pc}
 2112              	.L135:
 2113              		.align	2
 2114              	.L134:
 2115 0018 00000000 		.word	CapSense_lowBaselineReset
 2116              		.cfi_endproc
 2117              	.LFE66:
 2118              		.size	CapSense_GetLowBaselineReset, .-CapSense_GetLowBaselineReset
 2119              		.section	.text.CapSense_GetDebounce,"ax",%progbits
 2120              		.align	2
 2121              		.global	CapSense_GetDebounce
 2122              		.code	16
 2123              		.thumb_func
 2124              		.type	CapSense_GetDebounce, %function
 2125              	CapSense_GetDebounce:
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 87


 2126              	.LFB67:
2759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDebounce
2762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns a debounce value.
2766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Debounce value
2773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounce[]  - stores the debounce value.
2776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDebounce(uint32 widget)
2782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2127              		.loc 1 2782 0
 2128              		.cfi_startproc
 2129 0000 80B5     		push	{r7, lr}
 2130              		.cfi_def_cfa_offset 8
 2131              		.cfi_offset 7, -8
 2132              		.cfi_offset 14, -4
 2133 0002 82B0     		sub	sp, sp, #8
 2134              		.cfi_def_cfa_offset 16
 2135 0004 00AF     		add	r7, sp, #0
 2136              		.cfi_def_cfa_register 7
 2137 0006 7860     		str	r0, [r7, #4]
2783:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_debounce[widget]);
 2138              		.loc 1 2783 0
 2139 0008 034A     		ldr	r2, .L138
 2140 000a 7B68     		ldr	r3, [r7, #4]
 2141 000c D318     		add	r3, r2, r3
 2142 000e 1B78     		ldrb	r3, [r3]
2784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2143              		.loc 1 2784 0
 2144 0010 181C     		mov	r0, r3
 2145 0012 BD46     		mov	sp, r7
 2146 0014 02B0     		add	sp, sp, #8
 2147              		@ sp needed
 2148 0016 80BD     		pop	{r7, pc}
 2149              	.L139:
 2150              		.align	2
 2151              	.L138:
 2152 0018 00000000 		.word	CapSense_debounce
 2153              		.cfi_endproc
 2154              	.LFE67:
 2155              		.size	CapSense_GetDebounce, .-CapSense_GetDebounce
 2156              		.section	.text.CapSense_EnableRawDataFilters,"ax",%progbits
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 88


 2157              		.align	2
 2158              		.global	CapSense_EnableRawDataFilters
 2159              		.code	16
 2160              		.thumb_func
 2161              		.type	CapSense_EnableRawDataFilters, %function
 2162              	CapSense_EnableRawDataFilters:
 2163              	.LFB68:
2785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
2787:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2788:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_EnableRawDataFilters
2789:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2790:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2791:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2792:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Enables the rawdata filters for the sensor signals.
2793:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2794:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2795:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2796:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2797:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2798:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2799:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2800:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2801:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2802:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2803:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2804:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2805:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2806:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2807:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_EnableRawDataFilters(void)
2808:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2164              		.loc 1 2808 0
 2165              		.cfi_startproc
 2166 0000 80B5     		push	{r7, lr}
 2167              		.cfi_def_cfa_offset 8
 2168              		.cfi_offset 7, -8
 2169              		.cfi_offset 14, -4
 2170 0002 00AF     		add	r7, sp, #0
 2171              		.cfi_def_cfa_register 7
2809:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
 2172              		.loc 1 2809 0
 2173 0004 024B     		ldr	r3, .L141
 2174 0006 0122     		mov	r2, #1
 2175 0008 1A70     		strb	r2, [r3]
2810:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2176              		.loc 1 2810 0
 2177 000a BD46     		mov	sp, r7
 2178              		@ sp needed
 2179 000c 80BD     		pop	{r7, pc}
 2180              	.L142:
 2181 000e C046     		.align	2
 2182              	.L141:
 2183 0010 00000000 		.word	CapSense_enableRawFilters
 2184              		.cfi_endproc
 2185              	.LFE68:
 2186              		.size	CapSense_EnableRawDataFilters, .-CapSense_EnableRawDataFilters
 2187              		.section	.text.CapSense_DisableRawDataFilters,"ax",%progbits
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 89


 2188              		.align	2
 2189              		.global	CapSense_DisableRawDataFilters
 2190              		.code	16
 2191              		.thumb_func
 2192              		.type	CapSense_DisableRawDataFilters, %function
 2193              	CapSense_DisableRawDataFilters:
 2194              	.LFB69:
2811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2812:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2813:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_DisableRawDataFilters
2814:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2815:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2816:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2817:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Disables the rawdata filters for the sensor signals.
2818:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2819:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2820:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2821:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2822:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2823:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2824:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2825:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2826:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2827:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2828:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2829:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2830:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2831:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2832:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_DisableRawDataFilters(void)
2833:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2195              		.loc 1 2833 0
 2196              		.cfi_startproc
 2197 0000 80B5     		push	{r7, lr}
 2198              		.cfi_def_cfa_offset 8
 2199              		.cfi_offset 7, -8
 2200              		.cfi_offset 14, -4
 2201 0002 00AF     		add	r7, sp, #0
 2202              		.cfi_def_cfa_register 7
2834:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_DISABLED;
 2203              		.loc 1 2834 0
 2204 0004 024B     		ldr	r3, .L144
 2205 0006 0022     		mov	r2, #0
 2206 0008 1A70     		strb	r2, [r3]
2835:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2207              		.loc 1 2835 0
 2208 000a BD46     		mov	sp, r7
 2209              		@ sp needed
 2210 000c 80BD     		pop	{r7, pc}
 2211              	.L145:
 2212 000e C046     		.align	2
 2213              	.L144:
 2214 0010 00000000 		.word	CapSense_enableRawFilters
 2215              		.cfi_endproc
 2216              	.LFE69:
 2217              		.size	CapSense_DisableRawDataFilters, .-CapSense_DisableRawDataFilters
 2218              		.text
 2219              	.Letext0:
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 90


 2220              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 2221              		.file 3 ".\\Generated_Source\\PSoC4\\CapSense_PVT.h"
 2222              		.section	.debug_info,"",%progbits
 2223              	.Ldebug_info0:
 2224 0000 B80B0000 		.4byte	0xbb8
 2225 0004 0400     		.2byte	0x4
 2226 0006 00000000 		.4byte	.Ldebug_abbrev0
 2227 000a 04       		.byte	0x4
 2228 000b 01       		.uleb128 0x1
 2229 000c 98080000 		.4byte	.LASF122
 2230 0010 01       		.byte	0x1
 2231 0011 BC040000 		.4byte	.LASF123
 2232 0015 F6020000 		.4byte	.LASF124
 2233 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2234 001d 00000000 		.4byte	0
 2235 0021 00000000 		.4byte	.Ldebug_line0
 2236 0025 02       		.uleb128 0x2
 2237 0026 01       		.byte	0x1
 2238 0027 06       		.byte	0x6
 2239 0028 9A010000 		.4byte	.LASF0
 2240 002c 02       		.uleb128 0x2
 2241 002d 01       		.byte	0x1
 2242 002e 08       		.byte	0x8
 2243 002f B3060000 		.4byte	.LASF1
 2244 0033 02       		.uleb128 0x2
 2245 0034 02       		.byte	0x2
 2246 0035 05       		.byte	0x5
 2247 0036 1A070000 		.4byte	.LASF2
 2248 003a 02       		.uleb128 0x2
 2249 003b 02       		.byte	0x2
 2250 003c 07       		.byte	0x7
 2251 003d F3030000 		.4byte	.LASF3
 2252 0041 02       		.uleb128 0x2
 2253 0042 04       		.byte	0x4
 2254 0043 05       		.byte	0x5
 2255 0044 1E020000 		.4byte	.LASF4
 2256 0048 02       		.uleb128 0x2
 2257 0049 04       		.byte	0x4
 2258 004a 07       		.byte	0x7
 2259 004b 91030000 		.4byte	.LASF5
 2260 004f 02       		.uleb128 0x2
 2261 0050 08       		.byte	0x8
 2262 0051 05       		.byte	0x5
 2263 0052 8C010000 		.4byte	.LASF6
 2264 0056 02       		.uleb128 0x2
 2265 0057 08       		.byte	0x8
 2266 0058 07       		.byte	0x7
 2267 0059 00010000 		.4byte	.LASF7
 2268 005d 03       		.uleb128 0x3
 2269 005e 04       		.byte	0x4
 2270 005f 05       		.byte	0x5
 2271 0060 696E7400 		.ascii	"int\000"
 2272 0064 02       		.uleb128 0x2
 2273 0065 04       		.byte	0x4
 2274 0066 07       		.byte	0x7
 2275 0067 77030000 		.4byte	.LASF8
 2276 006b 04       		.uleb128 0x4
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 91


 2277 006c 47020000 		.4byte	.LASF9
 2278 0070 02       		.byte	0x2
 2279 0071 9801     		.2byte	0x198
 2280 0073 2C000000 		.4byte	0x2c
 2281 0077 04       		.uleb128 0x4
 2282 0078 00000000 		.4byte	.LASF10
 2283 007c 02       		.byte	0x2
 2284 007d 9901     		.2byte	0x199
 2285 007f 3A000000 		.4byte	0x3a
 2286 0083 04       		.uleb128 0x4
 2287 0084 A3020000 		.4byte	.LASF11
 2288 0088 02       		.byte	0x2
 2289 0089 9A01     		.2byte	0x19a
 2290 008b 48000000 		.4byte	0x48
 2291 008f 02       		.uleb128 0x2
 2292 0090 04       		.byte	0x4
 2293 0091 04       		.byte	0x4
 2294 0092 54060000 		.4byte	.LASF12
 2295 0096 02       		.uleb128 0x2
 2296 0097 08       		.byte	0x8
 2297 0098 04       		.byte	0x4
 2298 0099 86020000 		.4byte	.LASF13
 2299 009d 02       		.uleb128 0x2
 2300 009e 01       		.byte	0x1
 2301 009f 08       		.byte	0x8
 2302 00a0 D5070000 		.4byte	.LASF14
 2303 00a4 02       		.uleb128 0x2
 2304 00a5 04       		.byte	0x4
 2305 00a6 07       		.byte	0x7
 2306 00a7 27050000 		.4byte	.LASF15
 2307 00ab 05       		.uleb128 0x5
 2308 00ac 5C       		.byte	0x5c
 2309 00ad 03       		.byte	0x3
 2310 00ae 2F       		.byte	0x2f
 2311 00af C8010000 		.4byte	0x1c8
 2312 00b3 06       		.uleb128 0x6
 2313 00b4 C5050000 		.4byte	.LASF16
 2314 00b8 03       		.byte	0x3
 2315 00b9 31       		.byte	0x31
 2316 00ba C8010000 		.4byte	0x1c8
 2317 00be 00       		.byte	0
 2318 00bf 06       		.uleb128 0x6
 2319 00c0 D4050000 		.4byte	.LASF17
 2320 00c4 03       		.byte	0x3
 2321 00c5 32       		.byte	0x32
 2322 00c6 C8010000 		.4byte	0x1c8
 2323 00ca 04       		.byte	0x4
 2324 00cb 06       		.uleb128 0x6
 2325 00cc 06040000 		.4byte	.LASF18
 2326 00d0 03       		.byte	0x3
 2327 00d1 33       		.byte	0x33
 2328 00d2 C8010000 		.4byte	0x1c8
 2329 00d6 08       		.byte	0x8
 2330 00d7 06       		.uleb128 0x6
 2331 00d8 7B040000 		.4byte	.LASF19
 2332 00dc 03       		.byte	0x3
 2333 00dd 34       		.byte	0x34
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 92


 2334 00de C8010000 		.4byte	0x1c8
 2335 00e2 0C       		.byte	0xc
 2336 00e3 06       		.uleb128 0x6
 2337 00e4 2B070000 		.4byte	.LASF20
 2338 00e8 03       		.byte	0x3
 2339 00e9 35       		.byte	0x35
 2340 00ea C8010000 		.4byte	0x1c8
 2341 00ee 10       		.byte	0x10
 2342 00ef 06       		.uleb128 0x6
 2343 00f0 EE010000 		.4byte	.LASF21
 2344 00f4 03       		.byte	0x3
 2345 00f5 36       		.byte	0x36
 2346 00f6 CE010000 		.4byte	0x1ce
 2347 00fa 14       		.byte	0x14
 2348 00fb 06       		.uleb128 0x6
 2349 00fc BE030000 		.4byte	.LASF22
 2350 0100 03       		.byte	0x3
 2351 0101 37       		.byte	0x37
 2352 0102 D9010000 		.4byte	0x1d9
 2353 0106 18       		.byte	0x18
 2354 0107 06       		.uleb128 0x6
 2355 0108 FF040000 		.4byte	.LASF23
 2356 010c 03       		.byte	0x3
 2357 010d 38       		.byte	0x38
 2358 010e C8010000 		.4byte	0x1c8
 2359 0112 1C       		.byte	0x1c
 2360 0113 06       		.uleb128 0x6
 2361 0114 DA070000 		.4byte	.LASF24
 2362 0118 03       		.byte	0x3
 2363 0119 39       		.byte	0x39
 2364 011a C8010000 		.4byte	0x1c8
 2365 011e 20       		.byte	0x20
 2366 011f 06       		.uleb128 0x6
 2367 0120 94060000 		.4byte	.LASF25
 2368 0124 03       		.byte	0x3
 2369 0125 3A       		.byte	0x3a
 2370 0126 C8010000 		.4byte	0x1c8
 2371 012a 24       		.byte	0x24
 2372 012b 06       		.uleb128 0x6
 2373 012c AF040000 		.4byte	.LASF26
 2374 0130 03       		.byte	0x3
 2375 0131 3B       		.byte	0x3b
 2376 0132 DF010000 		.4byte	0x1df
 2377 0136 28       		.byte	0x28
 2378 0137 06       		.uleb128 0x6
 2379 0138 84030000 		.4byte	.LASF27
 2380 013c 03       		.byte	0x3
 2381 013d 3C       		.byte	0x3c
 2382 013e DF010000 		.4byte	0x1df
 2383 0142 2C       		.byte	0x2c
 2384 0143 06       		.uleb128 0x6
 2385 0144 C3070000 		.4byte	.LASF28
 2386 0148 03       		.byte	0x3
 2387 0149 3D       		.byte	0x3d
 2388 014a DF010000 		.4byte	0x1df
 2389 014e 30       		.byte	0x30
 2390 014f 06       		.uleb128 0x6
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 93


 2391 0150 70070000 		.4byte	.LASF29
 2392 0154 03       		.byte	0x3
 2393 0155 3E       		.byte	0x3e
 2394 0156 C8010000 		.4byte	0x1c8
 2395 015a 34       		.byte	0x34
 2396 015b 06       		.uleb128 0x6
 2397 015c 67080000 		.4byte	.LASF30
 2398 0160 03       		.byte	0x3
 2399 0161 3F       		.byte	0x3f
 2400 0162 C8010000 		.4byte	0x1c8
 2401 0166 38       		.byte	0x38
 2402 0167 06       		.uleb128 0x6
 2403 0168 A4060000 		.4byte	.LASF31
 2404 016c 03       		.byte	0x3
 2405 016d 40       		.byte	0x40
 2406 016e CE010000 		.4byte	0x1ce
 2407 0172 3C       		.byte	0x3c
 2408 0173 06       		.uleb128 0x6
 2409 0174 D0090000 		.4byte	.LASF32
 2410 0178 03       		.byte	0x3
 2411 0179 41       		.byte	0x41
 2412 017a CE010000 		.4byte	0x1ce
 2413 017e 40       		.byte	0x40
 2414 017f 06       		.uleb128 0x6
 2415 0180 C6010000 		.4byte	.LASF33
 2416 0184 03       		.byte	0x3
 2417 0185 42       		.byte	0x42
 2418 0186 CE010000 		.4byte	0x1ce
 2419 018a 44       		.byte	0x44
 2420 018b 06       		.uleb128 0x6
 2421 018c CB000000 		.4byte	.LASF34
 2422 0190 03       		.byte	0x3
 2423 0191 43       		.byte	0x43
 2424 0192 F4010000 		.4byte	0x1f4
 2425 0196 48       		.byte	0x48
 2426 0197 06       		.uleb128 0x6
 2427 0198 5C080000 		.4byte	.LASF35
 2428 019c 03       		.byte	0x3
 2429 019d 44       		.byte	0x44
 2430 019e 05020000 		.4byte	0x205
 2431 01a2 4C       		.byte	0x4c
 2432 01a3 06       		.uleb128 0x6
 2433 01a4 E1060000 		.4byte	.LASF36
 2434 01a8 03       		.byte	0x3
 2435 01a9 45       		.byte	0x45
 2436 01aa F4010000 		.4byte	0x1f4
 2437 01ae 50       		.byte	0x50
 2438 01af 06       		.uleb128 0x6
 2439 01b0 CD030000 		.4byte	.LASF37
 2440 01b4 03       		.byte	0x3
 2441 01b5 46       		.byte	0x46
 2442 01b6 1F020000 		.4byte	0x21f
 2443 01ba 54       		.byte	0x54
 2444 01bb 06       		.uleb128 0x6
 2445 01bc 53090000 		.4byte	.LASF38
 2446 01c0 03       		.byte	0x3
 2447 01c1 47       		.byte	0x47
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 94


 2448 01c2 3A020000 		.4byte	0x23a
 2449 01c6 58       		.byte	0x58
 2450 01c7 00       		.byte	0
 2451 01c8 07       		.uleb128 0x7
 2452 01c9 04       		.byte	0x4
 2453 01ca 6B000000 		.4byte	0x6b
 2454 01ce 07       		.uleb128 0x7
 2455 01cf 04       		.byte	0x4
 2456 01d0 D4010000 		.4byte	0x1d4
 2457 01d4 08       		.uleb128 0x8
 2458 01d5 6B000000 		.4byte	0x6b
 2459 01d9 07       		.uleb128 0x7
 2460 01da 04       		.byte	0x4
 2461 01db 83000000 		.4byte	0x83
 2462 01df 07       		.uleb128 0x7
 2463 01e0 04       		.byte	0x4
 2464 01e1 77000000 		.4byte	0x77
 2465 01e5 09       		.uleb128 0x9
 2466 01e6 77000000 		.4byte	0x77
 2467 01ea F4010000 		.4byte	0x1f4
 2468 01ee 0A       		.uleb128 0xa
 2469 01ef 83000000 		.4byte	0x83
 2470 01f3 00       		.byte	0
 2471 01f4 07       		.uleb128 0x7
 2472 01f5 04       		.byte	0x4
 2473 01f6 E5010000 		.4byte	0x1e5
 2474 01fa 0B       		.uleb128 0xb
 2475 01fb 05020000 		.4byte	0x205
 2476 01ff 0A       		.uleb128 0xa
 2477 0200 83000000 		.4byte	0x83
 2478 0204 00       		.byte	0
 2479 0205 07       		.uleb128 0x7
 2480 0206 04       		.byte	0x4
 2481 0207 FA010000 		.4byte	0x1fa
 2482 020b 09       		.uleb128 0x9
 2483 020c 83000000 		.4byte	0x83
 2484 0210 1F020000 		.4byte	0x21f
 2485 0214 0A       		.uleb128 0xa
 2486 0215 CE010000 		.4byte	0x1ce
 2487 0219 0A       		.uleb128 0xa
 2488 021a 83000000 		.4byte	0x83
 2489 021e 00       		.byte	0
 2490 021f 07       		.uleb128 0x7
 2491 0220 04       		.byte	0x4
 2492 0221 0B020000 		.4byte	0x20b
 2493 0225 0B       		.uleb128 0xb
 2494 0226 3A020000 		.4byte	0x23a
 2495 022a 0A       		.uleb128 0xa
 2496 022b C8010000 		.4byte	0x1c8
 2497 022f 0A       		.uleb128 0xa
 2498 0230 83000000 		.4byte	0x83
 2499 0234 0A       		.uleb128 0xa
 2500 0235 83000000 		.4byte	0x83
 2501 0239 00       		.byte	0
 2502 023a 07       		.uleb128 0x7
 2503 023b 04       		.byte	0x4
 2504 023c 25020000 		.4byte	0x225
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 95


 2505 0240 0C       		.uleb128 0xc
 2506 0241 88040000 		.4byte	.LASF39
 2507 0245 03       		.byte	0x3
 2508 0246 48       		.byte	0x48
 2509 0247 AB000000 		.4byte	0xab
 2510 024b 05       		.uleb128 0x5
 2511 024c 0C       		.byte	0xc
 2512 024d 03       		.byte	0x3
 2513 024e 4A       		.byte	0x4a
 2514 024f 9C020000 		.4byte	0x29c
 2515 0253 06       		.uleb128 0x6
 2516 0254 86080000 		.4byte	.LASF40
 2517 0258 03       		.byte	0x3
 2518 0259 4C       		.byte	0x4c
 2519 025a 6B000000 		.4byte	0x6b
 2520 025e 00       		.byte	0
 2521 025f 06       		.uleb128 0x6
 2522 0260 E5090000 		.4byte	.LASF41
 2523 0264 03       		.byte	0x3
 2524 0265 4D       		.byte	0x4d
 2525 0266 6B000000 		.4byte	0x6b
 2526 026a 01       		.byte	0x1
 2527 026b 06       		.uleb128 0x6
 2528 026c 39030000 		.4byte	.LASF42
 2529 0270 03       		.byte	0x3
 2530 0271 4E       		.byte	0x4e
 2531 0272 6B000000 		.4byte	0x6b
 2532 0276 02       		.byte	0x2
 2533 0277 06       		.uleb128 0x6
 2534 0278 E6020000 		.4byte	.LASF43
 2535 027c 03       		.byte	0x3
 2536 027d 4F       		.byte	0x4f
 2537 027e 77000000 		.4byte	0x77
 2538 0282 04       		.byte	0x4
 2539 0283 06       		.uleb128 0x6
 2540 0284 19050000 		.4byte	.LASF44
 2541 0288 03       		.byte	0x3
 2542 0289 50       		.byte	0x50
 2543 028a 77000000 		.4byte	0x77
 2544 028e 06       		.byte	0x6
 2545 028f 06       		.uleb128 0x6
 2546 0290 1C040000 		.4byte	.LASF45
 2547 0294 03       		.byte	0x3
 2548 0295 51       		.byte	0x51
 2549 0296 9C020000 		.4byte	0x29c
 2550 029a 08       		.byte	0x8
 2551 029b 00       		.byte	0
 2552 029c 07       		.uleb128 0x7
 2553 029d 04       		.byte	0x4
 2554 029e A2020000 		.4byte	0x2a2
 2555 02a2 08       		.uleb128 0x8
 2556 02a3 40020000 		.4byte	0x240
 2557 02a7 0C       		.uleb128 0xc
 2558 02a8 B2090000 		.4byte	.LASF46
 2559 02ac 03       		.byte	0x3
 2560 02ad 52       		.byte	0x52
 2561 02ae 4B020000 		.4byte	0x24b
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 96


 2562 02b2 0D       		.uleb128 0xd
 2563 02b3 5E070000 		.4byte	.LASF47
 2564 02b7 01       		.byte	0x1
 2565 02b8 8E       		.byte	0x8e
 2566 02b9 00000000 		.4byte	.LFB36
 2567 02bd 98000000 		.4byte	.LFE36-.LFB36
 2568 02c1 01       		.uleb128 0x1
 2569 02c2 9C       		.byte	0x9c
 2570 02c3 E4020000 		.4byte	0x2e4
 2571 02c7 0E       		.uleb128 0xe
 2572 02c8 15040000 		.4byte	.LASF49
 2573 02cc 01       		.byte	0x1
 2574 02cd 8E       		.byte	0x8e
 2575 02ce 83000000 		.4byte	0x83
 2576 02d2 02       		.uleb128 0x2
 2577 02d3 91       		.byte	0x91
 2578 02d4 6C       		.sleb128 -20
 2579 02d5 0F       		.uleb128 0xf
 2580 02d6 24070000 		.4byte	.LASF51
 2581 02da 01       		.byte	0x1
 2582 02db 92       		.byte	0x92
 2583 02dc 6B000000 		.4byte	0x6b
 2584 02e0 02       		.uleb128 0x2
 2585 02e1 91       		.byte	0x91
 2586 02e2 77       		.sleb128 -9
 2587 02e3 00       		.byte	0
 2588 02e4 10       		.uleb128 0x10
 2589 02e5 69050000 		.4byte	.LASF48
 2590 02e9 01       		.byte	0x1
 2591 02ea DA       		.byte	0xda
 2592 02eb 00000000 		.4byte	.LFB37
 2593 02ef 28000000 		.4byte	.LFE37-.LFB37
 2594 02f3 01       		.uleb128 0x1
 2595 02f4 9C       		.byte	0x9c
 2596 02f5 08030000 		.4byte	0x308
 2597 02f9 0E       		.uleb128 0xe
 2598 02fa 15040000 		.4byte	.LASF49
 2599 02fe 01       		.byte	0x1
 2600 02ff DA       		.byte	0xda
 2601 0300 83000000 		.4byte	0x83
 2602 0304 02       		.uleb128 0x2
 2603 0305 91       		.byte	0x91
 2604 0306 74       		.sleb128 -12
 2605 0307 00       		.byte	0
 2606 0308 10       		.uleb128 0x10
 2607 0309 C1060000 		.4byte	.LASF50
 2608 030d 01       		.byte	0x1
 2609 030e FF       		.byte	0xff
 2610 030f 00000000 		.4byte	.LFB38
 2611 0313 26000000 		.4byte	.LFE38-.LFB38
 2612 0317 01       		.uleb128 0x1
 2613 0318 9C       		.byte	0x9c
 2614 0319 2B030000 		.4byte	0x32b
 2615 031d 11       		.uleb128 0x11
 2616 031e 6900     		.ascii	"i\000"
 2617 0320 01       		.byte	0x1
 2618 0321 0101     		.2byte	0x101
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 97


 2619 0323 83000000 		.4byte	0x83
 2620 0327 02       		.uleb128 0x2
 2621 0328 91       		.byte	0x91
 2622 0329 74       		.sleb128 -12
 2623 032a 00       		.byte	0
 2624 032b 12       		.uleb128 0x12
 2625 032c 48010000 		.4byte	.LASF52
 2626 0330 01       		.byte	0x1
 2627 0331 2201     		.2byte	0x122
 2628 0333 00000000 		.4byte	.LFB39
 2629 0337 50000000 		.4byte	.LFE39-.LFB39
 2630 033b 01       		.uleb128 0x1
 2631 033c 9C       		.byte	0x9c
 2632 033d 5E030000 		.4byte	0x35e
 2633 0341 11       		.uleb128 0x11
 2634 0342 6900     		.ascii	"i\000"
 2635 0344 01       		.byte	0x1
 2636 0345 2401     		.2byte	0x124
 2637 0347 83000000 		.4byte	0x83
 2638 034b 02       		.uleb128 0x2
 2639 034c 91       		.byte	0x91
 2640 034d 74       		.sleb128 -12
 2641 034e 13       		.uleb128 0x13
 2642 034f 4E070000 		.4byte	.LASF53
 2643 0353 01       		.byte	0x1
 2644 0354 2501     		.2byte	0x125
 2645 0356 83000000 		.4byte	0x83
 2646 035a 02       		.uleb128 0x2
 2647 035b 91       		.byte	0x91
 2648 035c 70       		.sleb128 -16
 2649 035d 00       		.byte	0
 2650 035e 12       		.uleb128 0x12
 2651 035f 46050000 		.4byte	.LASF54
 2652 0363 01       		.byte	0x1
 2653 0364 6301     		.2byte	0x163
 2654 0366 00000000 		.4byte	.LFB40
 2655 036a 30020000 		.4byte	.LFE40-.LFB40
 2656 036e 01       		.uleb128 0x1
 2657 036f 9C       		.byte	0x9c
 2658 0370 DE030000 		.4byte	0x3de
 2659 0374 14       		.uleb128 0x14
 2660 0375 15040000 		.4byte	.LASF49
 2661 0379 01       		.byte	0x1
 2662 037a 6301     		.2byte	0x163
 2663 037c 83000000 		.4byte	0x83
 2664 0380 02       		.uleb128 0x2
 2665 0381 91       		.byte	0x91
 2666 0382 5C       		.sleb128 -36
 2667 0383 13       		.uleb128 0x13
 2668 0384 76040000 		.4byte	.LASF55
 2669 0388 01       		.byte	0x1
 2670 0389 6501     		.2byte	0x165
 2671 038b 83000000 		.4byte	0x83
 2672 038f 02       		.uleb128 0x2
 2673 0390 91       		.byte	0x91
 2674 0391 60       		.sleb128 -32
 2675 0392 13       		.uleb128 0x13
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 98


 2676 0393 74080000 		.4byte	.LASF56
 2677 0397 01       		.byte	0x1
 2678 0398 6601     		.2byte	0x166
 2679 039a 83000000 		.4byte	0x83
 2680 039e 02       		.uleb128 0x2
 2681 039f 91       		.byte	0x91
 2682 03a0 6C       		.sleb128 -20
 2683 03a1 13       		.uleb128 0x13
 2684 03a2 DD090000 		.4byte	.LASF57
 2685 03a6 01       		.byte	0x1
 2686 03a7 6701     		.2byte	0x167
 2687 03a9 77000000 		.4byte	0x77
 2688 03ad 02       		.uleb128 0x2
 2689 03ae 91       		.byte	0x91
 2690 03af 6A       		.sleb128 -22
 2691 03b0 13       		.uleb128 0x13
 2692 03b1 07000000 		.4byte	.LASF58
 2693 03b5 01       		.byte	0x1
 2694 03b6 6801     		.2byte	0x168
 2695 03b8 77000000 		.4byte	0x77
 2696 03bc 02       		.uleb128 0x2
 2697 03bd 91       		.byte	0x91
 2698 03be 68       		.sleb128 -24
 2699 03bf 13       		.uleb128 0x13
 2700 03c0 24070000 		.4byte	.LASF51
 2701 03c4 01       		.byte	0x1
 2702 03c5 6901     		.2byte	0x169
 2703 03c7 6B000000 		.4byte	0x6b
 2704 03cb 02       		.uleb128 0x2
 2705 03cc 91       		.byte	0x91
 2706 03cd 67       		.sleb128 -25
 2707 03ce 13       		.uleb128 0x13
 2708 03cf 0B070000 		.4byte	.LASF59
 2709 03d3 01       		.byte	0x1
 2710 03d4 6A01     		.2byte	0x16a
 2711 03d6 6B000000 		.4byte	0x6b
 2712 03da 02       		.uleb128 0x2
 2713 03db 91       		.byte	0x91
 2714 03dc 66       		.sleb128 -26
 2715 03dd 00       		.byte	0
 2716 03de 12       		.uleb128 0x12
 2717 03df 58040000 		.4byte	.LASF60
 2718 03e3 01       		.byte	0x1
 2719 03e4 2302     		.2byte	0x223
 2720 03e6 00000000 		.4byte	.LFB41
 2721 03ea 1E000000 		.4byte	.LFE41-.LFB41
 2722 03ee 01       		.uleb128 0x1
 2723 03ef 9C       		.byte	0x9c
 2724 03f0 04040000 		.4byte	0x404
 2725 03f4 14       		.uleb128 0x14
 2726 03f5 15040000 		.4byte	.LASF49
 2727 03f9 01       		.byte	0x1
 2728 03fa 2302     		.2byte	0x223
 2729 03fc 83000000 		.4byte	0x83
 2730 0400 02       		.uleb128 0x2
 2731 0401 91       		.byte	0x91
 2732 0402 74       		.sleb128 -12
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 99


 2733 0403 00       		.byte	0
 2734 0404 12       		.uleb128 0x12
 2735 0405 6C010000 		.4byte	.LASF61
 2736 0409 01       		.byte	0x1
 2737 040a 5902     		.2byte	0x259
 2738 040c 00000000 		.4byte	.LFB42
 2739 0410 40000000 		.4byte	.LFE42-.LFB42
 2740 0414 01       		.uleb128 0x1
 2741 0415 9C       		.byte	0x9c
 2742 0416 37040000 		.4byte	0x437
 2743 041a 11       		.uleb128 0x11
 2744 041b 6900     		.ascii	"i\000"
 2745 041d 01       		.byte	0x1
 2746 041e 5B02     		.2byte	0x25b
 2747 0420 83000000 		.4byte	0x83
 2748 0424 02       		.uleb128 0x2
 2749 0425 91       		.byte	0x91
 2750 0426 74       		.sleb128 -12
 2751 0427 13       		.uleb128 0x13
 2752 0428 4E070000 		.4byte	.LASF53
 2753 042c 01       		.byte	0x1
 2754 042d 5C02     		.2byte	0x25c
 2755 042f 83000000 		.4byte	0x83
 2756 0433 02       		.uleb128 0x2
 2757 0434 91       		.byte	0x91
 2758 0435 70       		.sleb128 -16
 2759 0436 00       		.byte	0
 2760 0437 12       		.uleb128 0x12
 2761 0438 AD000000 		.4byte	.LASF62
 2762 043c 01       		.byte	0x1
 2763 043d 8602     		.2byte	0x286
 2764 043f 00000000 		.4byte	.LFB43
 2765 0443 70000000 		.4byte	.LFE43-.LFB43
 2766 0447 01       		.uleb128 0x1
 2767 0448 9C       		.byte	0x9c
 2768 0449 A6040000 		.4byte	0x4a6
 2769 044d 14       		.uleb128 0x14
 2770 044e 24070000 		.4byte	.LASF51
 2771 0452 01       		.byte	0x1
 2772 0453 8602     		.2byte	0x286
 2773 0455 83000000 		.4byte	0x83
 2774 0459 02       		.uleb128 0x2
 2775 045a 91       		.byte	0x91
 2776 045b 5C       		.sleb128 -36
 2777 045c 13       		.uleb128 0x13
 2778 045d 7A070000 		.4byte	.LASF63
 2779 0461 01       		.byte	0x1
 2780 0462 8802     		.2byte	0x288
 2781 0464 83000000 		.4byte	0x83
 2782 0468 02       		.uleb128 0x2
 2783 0469 91       		.byte	0x91
 2784 046a 70       		.sleb128 -16
 2785 046b 13       		.uleb128 0x13
 2786 046c 26080000 		.4byte	.LASF64
 2787 0470 01       		.byte	0x1
 2788 0471 8902     		.2byte	0x289
 2789 0473 83000000 		.4byte	0x83
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 100


 2790 0477 02       		.uleb128 0x2
 2791 0478 91       		.byte	0x91
 2792 0479 6C       		.sleb128 -20
 2793 047a 13       		.uleb128 0x13
 2794 047b 6C030000 		.4byte	.LASF65
 2795 047f 01       		.byte	0x1
 2796 0480 8A02     		.2byte	0x28a
 2797 0482 83000000 		.4byte	0x83
 2798 0486 02       		.uleb128 0x2
 2799 0487 91       		.byte	0x91
 2800 0488 68       		.sleb128 -24
 2801 0489 11       		.uleb128 0x11
 2802 048a 6900     		.ascii	"i\000"
 2803 048c 01       		.byte	0x1
 2804 048d 8B02     		.2byte	0x28b
 2805 048f 83000000 		.4byte	0x83
 2806 0493 02       		.uleb128 0x2
 2807 0494 91       		.byte	0x91
 2808 0495 74       		.sleb128 -12
 2809 0496 13       		.uleb128 0x13
 2810 0497 4E070000 		.4byte	.LASF53
 2811 049b 01       		.byte	0x1
 2812 049c 8C02     		.2byte	0x28c
 2813 049e 83000000 		.4byte	0x83
 2814 04a2 02       		.uleb128 0x2
 2815 04a3 91       		.byte	0x91
 2816 04a4 64       		.sleb128 -28
 2817 04a5 00       		.byte	0
 2818 04a6 15       		.uleb128 0x15
 2819 04a7 FF010000 		.4byte	.LASF68
 2820 04ab 01       		.byte	0x1
 2821 04ac B702     		.2byte	0x2b7
 2822 04ae 77000000 		.4byte	0x77
 2823 04b2 00000000 		.4byte	.LFB44
 2824 04b6 1C000000 		.4byte	.LFE44-.LFB44
 2825 04ba 01       		.uleb128 0x1
 2826 04bb 9C       		.byte	0x9c
 2827 04bc D0040000 		.4byte	0x4d0
 2828 04c0 14       		.uleb128 0x14
 2829 04c1 15040000 		.4byte	.LASF49
 2830 04c5 01       		.byte	0x1
 2831 04c6 B702     		.2byte	0x2b7
 2832 04c8 83000000 		.4byte	0x83
 2833 04cc 02       		.uleb128 0x2
 2834 04cd 91       		.byte	0x91
 2835 04ce 74       		.sleb128 -12
 2836 04cf 00       		.byte	0
 2837 04d0 16       		.uleb128 0x16
 2838 04d1 F2060000 		.4byte	.LASF66
 2839 04d5 01       		.byte	0x1
 2840 04d6 D202     		.2byte	0x2d2
 2841 04d8 00000000 		.4byte	.LFB45
 2842 04dc 24000000 		.4byte	.LFE45-.LFB45
 2843 04e0 01       		.uleb128 0x1
 2844 04e1 9C       		.byte	0x9c
 2845 04e2 05050000 		.4byte	0x505
 2846 04e6 14       		.uleb128 0x14
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 101


 2847 04e7 15040000 		.4byte	.LASF49
 2848 04eb 01       		.byte	0x1
 2849 04ec D202     		.2byte	0x2d2
 2850 04ee 83000000 		.4byte	0x83
 2851 04f2 02       		.uleb128 0x2
 2852 04f3 91       		.byte	0x91
 2853 04f4 74       		.sleb128 -12
 2854 04f5 14       		.uleb128 0x14
 2855 04f6 EE030000 		.4byte	.LASF67
 2856 04fa 01       		.byte	0x1
 2857 04fb D202     		.2byte	0x2d2
 2858 04fd 77000000 		.4byte	0x77
 2859 0501 02       		.uleb128 0x2
 2860 0502 91       		.byte	0x91
 2861 0503 72       		.sleb128 -14
 2862 0504 00       		.byte	0
 2863 0505 15       		.uleb128 0x15
 2864 0506 E5040000 		.4byte	.LASF69
 2865 050a 01       		.byte	0x1
 2866 050b ED02     		.2byte	0x2ed
 2867 050d 6B000000 		.4byte	0x6b
 2868 0511 00000000 		.4byte	.LFB46
 2869 0515 1C000000 		.4byte	.LFE46-.LFB46
 2870 0519 01       		.uleb128 0x1
 2871 051a 9C       		.byte	0x9c
 2872 051b 2F050000 		.4byte	0x52f
 2873 051f 14       		.uleb128 0x14
 2874 0520 15040000 		.4byte	.LASF49
 2875 0524 01       		.byte	0x1
 2876 0525 ED02     		.2byte	0x2ed
 2877 0527 83000000 		.4byte	0x83
 2878 052b 02       		.uleb128 0x2
 2879 052c 91       		.byte	0x91
 2880 052d 74       		.sleb128 -12
 2881 052e 00       		.byte	0
 2882 052f 16       		.uleb128 0x16
 2883 0530 39090000 		.4byte	.LASF70
 2884 0534 01       		.byte	0x1
 2885 0535 0803     		.2byte	0x308
 2886 0537 00000000 		.4byte	.LFB47
 2887 053b 24000000 		.4byte	.LFE47-.LFB47
 2888 053f 01       		.uleb128 0x1
 2889 0540 9C       		.byte	0x9c
 2890 0541 64050000 		.4byte	0x564
 2891 0545 14       		.uleb128 0x14
 2892 0546 15040000 		.4byte	.LASF49
 2893 054a 01       		.byte	0x1
 2894 054b 0803     		.2byte	0x308
 2895 054d 83000000 		.4byte	0x83
 2896 0551 02       		.uleb128 0x2
 2897 0552 91       		.byte	0x91
 2898 0553 74       		.sleb128 -12
 2899 0554 14       		.uleb128 0x14
 2900 0555 49030000 		.4byte	.LASF71
 2901 0559 01       		.byte	0x1
 2902 055a 0803     		.2byte	0x308
 2903 055c 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 102


 2904 0560 02       		.uleb128 0x2
 2905 0561 91       		.byte	0x91
 2906 0562 73       		.sleb128 -13
 2907 0563 00       		.byte	0
 2908 0564 15       		.uleb128 0x15
 2909 0565 40080000 		.4byte	.LASF72
 2910 0569 01       		.byte	0x1
 2911 056a 2303     		.2byte	0x323
 2912 056c 6B000000 		.4byte	0x6b
 2913 0570 00000000 		.4byte	.LFB48
 2914 0574 1C000000 		.4byte	.LFE48-.LFB48
 2915 0578 01       		.uleb128 0x1
 2916 0579 9C       		.byte	0x9c
 2917 057a 8E050000 		.4byte	0x58e
 2918 057e 14       		.uleb128 0x14
 2919 057f 24070000 		.4byte	.LASF51
 2920 0583 01       		.byte	0x1
 2921 0584 2303     		.2byte	0x323
 2922 0586 83000000 		.4byte	0x83
 2923 058a 02       		.uleb128 0x2
 2924 058b 91       		.byte	0x91
 2925 058c 74       		.sleb128 -12
 2926 058d 00       		.byte	0
 2927 058e 15       		.uleb128 0x15
 2928 058f 2D010000 		.4byte	.LASF73
 2929 0593 01       		.byte	0x1
 2930 0594 3E03     		.2byte	0x33e
 2931 0596 6B000000 		.4byte	0x6b
 2932 059a 00000000 		.4byte	.LFB49
 2933 059e 1C000000 		.4byte	.LFE49-.LFB49
 2934 05a2 01       		.uleb128 0x1
 2935 05a3 9C       		.byte	0x9c
 2936 05a4 B8050000 		.4byte	0x5b8
 2937 05a8 14       		.uleb128 0x14
 2938 05a9 24070000 		.4byte	.LASF51
 2939 05ad 01       		.byte	0x1
 2940 05ae 3E03     		.2byte	0x33e
 2941 05b0 83000000 		.4byte	0x83
 2942 05b4 02       		.uleb128 0x2
 2943 05b5 91       		.byte	0x91
 2944 05b6 74       		.sleb128 -12
 2945 05b7 00       		.byte	0
 2946 05b8 15       		.uleb128 0x15
 2947 05b9 09080000 		.4byte	.LASF74
 2948 05bd 01       		.byte	0x1
 2949 05be 5A03     		.2byte	0x35a
 2950 05c0 6B000000 		.4byte	0x6b
 2951 05c4 00000000 		.4byte	.LFB50
 2952 05c8 1C000000 		.4byte	.LFE50-.LFB50
 2953 05cc 01       		.uleb128 0x1
 2954 05cd 9C       		.byte	0x9c
 2955 05ce E2050000 		.4byte	0x5e2
 2956 05d2 14       		.uleb128 0x14
 2957 05d3 24070000 		.4byte	.LASF51
 2958 05d7 01       		.byte	0x1
 2959 05d8 5A03     		.2byte	0x35a
 2960 05da 83000000 		.4byte	0x83
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 103


 2961 05de 02       		.uleb128 0x2
 2962 05df 91       		.byte	0x91
 2963 05e0 74       		.sleb128 -12
 2964 05e1 00       		.byte	0
 2965 05e2 15       		.uleb128 0x15
 2966 05e3 57000000 		.4byte	.LASF75
 2967 05e7 01       		.byte	0x1
 2968 05e8 7603     		.2byte	0x376
 2969 05ea 6B000000 		.4byte	0x6b
 2970 05ee 00000000 		.4byte	.LFB51
 2971 05f2 1C000000 		.4byte	.LFE51-.LFB51
 2972 05f6 01       		.uleb128 0x1
 2973 05f7 9C       		.byte	0x9c
 2974 05f8 0C060000 		.4byte	0x60c
 2975 05fc 14       		.uleb128 0x14
 2976 05fd 24070000 		.4byte	.LASF51
 2977 0601 01       		.byte	0x1
 2978 0602 7603     		.2byte	0x376
 2979 0604 83000000 		.4byte	0x83
 2980 0608 02       		.uleb128 0x2
 2981 0609 91       		.byte	0x91
 2982 060a 74       		.sleb128 -12
 2983 060b 00       		.byte	0
 2984 060c 16       		.uleb128 0x16
 2985 060d B5020000 		.4byte	.LASF76
 2986 0611 01       		.byte	0x1
 2987 0612 9703     		.2byte	0x397
 2988 0614 00000000 		.4byte	.LFB52
 2989 0618 24000000 		.4byte	.LFE52-.LFB52
 2990 061c 01       		.uleb128 0x1
 2991 061d 9C       		.byte	0x9c
 2992 061e 41060000 		.4byte	0x641
 2993 0622 14       		.uleb128 0x14
 2994 0623 24070000 		.4byte	.LASF51
 2995 0627 01       		.byte	0x1
 2996 0628 9703     		.2byte	0x397
 2997 062a 83000000 		.4byte	0x83
 2998 062e 02       		.uleb128 0x2
 2999 062f 91       		.byte	0x91
 3000 0630 74       		.sleb128 -12
 3001 0631 14       		.uleb128 0x14
 3002 0632 49030000 		.4byte	.LASF71
 3003 0636 01       		.byte	0x1
 3004 0637 9703     		.2byte	0x397
 3005 0639 6B000000 		.4byte	0x6b
 3006 063d 02       		.uleb128 0x2
 3007 063e 91       		.byte	0x91
 3008 063f 73       		.sleb128 -13
 3009 0640 00       		.byte	0
 3010 0641 16       		.uleb128 0x16
 3011 0642 A8070000 		.4byte	.LASF77
 3012 0646 01       		.byte	0x1
 3013 0647 B303     		.2byte	0x3b3
 3014 0649 00000000 		.4byte	.LFB53
 3015 064d 24000000 		.4byte	.LFE53-.LFB53
 3016 0651 01       		.uleb128 0x1
 3017 0652 9C       		.byte	0x9c
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 104


 3018 0653 76060000 		.4byte	0x676
 3019 0657 14       		.uleb128 0x14
 3020 0658 24070000 		.4byte	.LASF51
 3021 065c 01       		.byte	0x1
 3022 065d B303     		.2byte	0x3b3
 3023 065f 83000000 		.4byte	0x83
 3024 0663 02       		.uleb128 0x2
 3025 0664 91       		.byte	0x91
 3026 0665 74       		.sleb128 -12
 3027 0666 14       		.uleb128 0x14
 3028 0667 49030000 		.4byte	.LASF71
 3029 066b 01       		.byte	0x1
 3030 066c B303     		.2byte	0x3b3
 3031 066e 6B000000 		.4byte	0x6b
 3032 0672 02       		.uleb128 0x2
 3033 0673 91       		.byte	0x91
 3034 0674 73       		.sleb128 -13
 3035 0675 00       		.byte	0
 3036 0676 16       		.uleb128 0x16
 3037 0677 8B050000 		.4byte	.LASF78
 3038 067b 01       		.byte	0x1
 3039 067c CF03     		.2byte	0x3cf
 3040 067e 00000000 		.4byte	.LFB54
 3041 0682 24000000 		.4byte	.LFE54-.LFB54
 3042 0686 01       		.uleb128 0x1
 3043 0687 9C       		.byte	0x9c
 3044 0688 AB060000 		.4byte	0x6ab
 3045 068c 14       		.uleb128 0x14
 3046 068d 24070000 		.4byte	.LASF51
 3047 0691 01       		.byte	0x1
 3048 0692 CF03     		.2byte	0x3cf
 3049 0694 83000000 		.4byte	0x83
 3050 0698 02       		.uleb128 0x2
 3051 0699 91       		.byte	0x91
 3052 069a 74       		.sleb128 -12
 3053 069b 14       		.uleb128 0x14
 3054 069c 49030000 		.4byte	.LASF71
 3055 06a0 01       		.byte	0x1
 3056 06a1 CF03     		.2byte	0x3cf
 3057 06a3 6B000000 		.4byte	0x6b
 3058 06a7 02       		.uleb128 0x2
 3059 06a8 91       		.byte	0x91
 3060 06a9 73       		.sleb128 -13
 3061 06aa 00       		.byte	0
 3062 06ab 16       		.uleb128 0x16
 3063 06ac 8A000000 		.4byte	.LASF79
 3064 06b0 01       		.byte	0x1
 3065 06b1 EC03     		.2byte	0x3ec
 3066 06b3 00000000 		.4byte	.LFB55
 3067 06b7 24000000 		.4byte	.LFE55-.LFB55
 3068 06bb 01       		.uleb128 0x1
 3069 06bc 9C       		.byte	0x9c
 3070 06bd E0060000 		.4byte	0x6e0
 3071 06c1 14       		.uleb128 0x14
 3072 06c2 24070000 		.4byte	.LASF51
 3073 06c6 01       		.byte	0x1
 3074 06c7 EC03     		.2byte	0x3ec
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 105


 3075 06c9 83000000 		.4byte	0x83
 3076 06cd 02       		.uleb128 0x2
 3077 06ce 91       		.byte	0x91
 3078 06cf 74       		.sleb128 -12
 3079 06d0 14       		.uleb128 0x14
 3080 06d1 49030000 		.4byte	.LASF71
 3081 06d5 01       		.byte	0x1
 3082 06d6 EC03     		.2byte	0x3ec
 3083 06d8 6B000000 		.4byte	0x6b
 3084 06dc 02       		.uleb128 0x2
 3085 06dd 91       		.byte	0x91
 3086 06de 73       		.sleb128 -13
 3087 06df 00       		.byte	0
 3088 06e0 16       		.uleb128 0x16
 3089 06e1 D1020000 		.4byte	.LASF80
 3090 06e5 01       		.byte	0x1
 3091 06e6 0804     		.2byte	0x408
 3092 06e8 00000000 		.4byte	.LFB56
 3093 06ec 24000000 		.4byte	.LFE56-.LFB56
 3094 06f0 01       		.uleb128 0x1
 3095 06f1 9C       		.byte	0x9c
 3096 06f2 15070000 		.4byte	0x715
 3097 06f6 14       		.uleb128 0x14
 3098 06f7 24070000 		.4byte	.LASF51
 3099 06fb 01       		.byte	0x1
 3100 06fc 0804     		.2byte	0x408
 3101 06fe 83000000 		.4byte	0x83
 3102 0702 02       		.uleb128 0x2
 3103 0703 91       		.byte	0x91
 3104 0704 74       		.sleb128 -12
 3105 0705 14       		.uleb128 0x14
 3106 0706 49030000 		.4byte	.LASF71
 3107 070a 01       		.byte	0x1
 3108 070b 0804     		.2byte	0x408
 3109 070d 6B000000 		.4byte	0x6b
 3110 0711 02       		.uleb128 0x2
 3111 0712 91       		.byte	0x91
 3112 0713 73       		.sleb128 -13
 3113 0714 00       		.byte	0
 3114 0715 16       		.uleb128 0x16
 3115 0716 4F030000 		.4byte	.LASF81
 3116 071a 01       		.byte	0x1
 3117 071b 2404     		.2byte	0x424
 3118 071d 00000000 		.4byte	.LFB57
 3119 0721 24000000 		.4byte	.LFE57-.LFB57
 3120 0725 01       		.uleb128 0x1
 3121 0726 9C       		.byte	0x9c
 3122 0727 4A070000 		.4byte	0x74a
 3123 072b 14       		.uleb128 0x14
 3124 072c 15040000 		.4byte	.LASF49
 3125 0730 01       		.byte	0x1
 3126 0731 2404     		.2byte	0x424
 3127 0733 83000000 		.4byte	0x83
 3128 0737 02       		.uleb128 0x2
 3129 0738 91       		.byte	0x91
 3130 0739 74       		.sleb128 -12
 3131 073a 14       		.uleb128 0x14
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 106


 3132 073b 49030000 		.4byte	.LASF71
 3133 073f 01       		.byte	0x1
 3134 0740 2404     		.2byte	0x424
 3135 0742 6B000000 		.4byte	0x6b
 3136 0746 02       		.uleb128 0x2
 3137 0747 91       		.byte	0x91
 3138 0748 73       		.sleb128 -13
 3139 0749 00       		.byte	0
 3140 074a 17       		.uleb128 0x17
 3141 074b A8050000 		.4byte	.LASF82
 3142 074f 01       		.byte	0x1
 3143 0750 5204     		.2byte	0x452
 3144 0752 83000000 		.4byte	0x83
 3145 0756 00000000 		.4byte	.LFB58
 3146 075a 34010000 		.4byte	.LFE58-.LFB58
 3147 075e 01       		.uleb128 0x1
 3148 075f 9C       		.byte	0x9c
 3149 0760 BF070000 		.4byte	0x7bf
 3150 0764 14       		.uleb128 0x14
 3151 0765 15040000 		.4byte	.LASF49
 3152 0769 01       		.byte	0x1
 3153 076a 5204     		.2byte	0x452
 3154 076c 83000000 		.4byte	0x83
 3155 0770 02       		.uleb128 0x2
 3156 0771 91       		.byte	0x91
 3157 0772 6C       		.sleb128 -20
 3158 0773 13       		.uleb128 0x13
 3159 0774 24070000 		.4byte	.LASF51
 3160 0778 01       		.byte	0x1
 3161 0779 5404     		.2byte	0x454
 3162 077b 6B000000 		.4byte	0x6b
 3163 077f 02       		.uleb128 0x2
 3164 0780 91       		.byte	0x91
 3165 0781 77       		.sleb128 -9
 3166 0782 13       		.uleb128 0x13
 3167 0783 10050000 		.4byte	.LASF83
 3168 0787 01       		.byte	0x1
 3169 0788 5504     		.2byte	0x455
 3170 078a 6B000000 		.4byte	0x6b
 3171 078e 02       		.uleb128 0x2
 3172 078f 91       		.byte	0x91
 3173 0790 74       		.sleb128 -12
 3174 0791 13       		.uleb128 0x13
 3175 0792 32080000 		.4byte	.LASF84
 3176 0796 01       		.byte	0x1
 3177 0797 5604     		.2byte	0x456
 3178 0799 6B000000 		.4byte	0x6b
 3179 079d 02       		.uleb128 0x2
 3180 079e 91       		.byte	0x91
 3181 079f 73       		.sleb128 -13
 3182 07a0 13       		.uleb128 0x13
 3183 07a1 7A000000 		.4byte	.LASF85
 3184 07a5 01       		.byte	0x1
 3185 07a6 5804     		.2byte	0x458
 3186 07a8 6B000000 		.4byte	0x6b
 3187 07ac 02       		.uleb128 0x2
 3188 07ad 91       		.byte	0x91
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 107


 3189 07ae 76       		.sleb128 -10
 3190 07af 13       		.uleb128 0x13
 3191 07b0 AA020000 		.4byte	.LASF86
 3192 07b4 01       		.byte	0x1
 3193 07b5 5904     		.2byte	0x459
 3194 07b7 6B000000 		.4byte	0x6b
 3195 07bb 02       		.uleb128 0x2
 3196 07bc 91       		.byte	0x91
 3197 07bd 75       		.sleb128 -11
 3198 07be 00       		.byte	0
 3199 07bf 17       		.uleb128 0x17
 3200 07c0 77060000 		.4byte	.LASF87
 3201 07c4 01       		.byte	0x1
 3202 07c5 A404     		.2byte	0x4a4
 3203 07c7 83000000 		.4byte	0x83
 3204 07cb 00000000 		.4byte	.LFB59
 3205 07cf 58000000 		.4byte	.LFE59-.LFB59
 3206 07d3 01       		.uleb128 0x1
 3207 07d4 9C       		.byte	0x9c
 3208 07d5 16080000 		.4byte	0x816
 3209 07d9 14       		.uleb128 0x14
 3210 07da 24070000 		.4byte	.LASF51
 3211 07de 01       		.byte	0x1
 3212 07df A404     		.2byte	0x4a4
 3213 07e1 83000000 		.4byte	0x83
 3214 07e5 02       		.uleb128 0x2
 3215 07e6 91       		.byte	0x91
 3216 07e7 64       		.sleb128 -28
 3217 07e8 13       		.uleb128 0x13
 3218 07e9 BD010000 		.4byte	.LASF88
 3219 07ed 01       		.byte	0x1
 3220 07ee A604     		.2byte	0x4a6
 3221 07f0 83000000 		.4byte	0x83
 3222 07f4 02       		.uleb128 0x2
 3223 07f5 91       		.byte	0x91
 3224 07f6 74       		.sleb128 -12
 3225 07f7 13       		.uleb128 0x13
 3226 07f8 79080000 		.4byte	.LASF89
 3227 07fc 01       		.byte	0x1
 3228 07fd A704     		.2byte	0x4a7
 3229 07ff 83000000 		.4byte	0x83
 3230 0803 02       		.uleb128 0x2
 3231 0804 91       		.byte	0x91
 3232 0805 6C       		.sleb128 -20
 3233 0806 13       		.uleb128 0x13
 3234 0807 18020000 		.4byte	.LASF90
 3235 080b 01       		.byte	0x1
 3236 080c A804     		.2byte	0x4a8
 3237 080e 83000000 		.4byte	0x83
 3238 0812 02       		.uleb128 0x2
 3239 0813 91       		.byte	0x91
 3240 0814 70       		.sleb128 -16
 3241 0815 00       		.byte	0
 3242 0816 17       		.uleb128 0x17
 3243 0817 27020000 		.4byte	.LASF91
 3244 081b 01       		.byte	0x1
 3245 081c D204     		.2byte	0x4d2
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 108


 3246 081e 83000000 		.4byte	0x83
 3247 0822 00000000 		.4byte	.LFB60
 3248 0826 36000000 		.4byte	.LFE60-.LFB60
 3249 082a 01       		.uleb128 0x1
 3250 082b 9C       		.byte	0x9c
 3251 082c 4D080000 		.4byte	0x84d
 3252 0830 11       		.uleb128 0x11
 3253 0831 6900     		.ascii	"i\000"
 3254 0833 01       		.byte	0x1
 3255 0834 D504     		.2byte	0x4d5
 3256 0836 83000000 		.4byte	0x83
 3257 083a 02       		.uleb128 0x2
 3258 083b 91       		.byte	0x91
 3259 083c 74       		.sleb128 -12
 3260 083d 13       		.uleb128 0x13
 3261 083e 18020000 		.4byte	.LASF90
 3262 0842 01       		.byte	0x1
 3263 0843 D604     		.2byte	0x4d6
 3264 0845 83000000 		.4byte	0x83
 3265 0849 02       		.uleb128 0x2
 3266 084a 91       		.byte	0x91
 3267 084b 70       		.sleb128 -16
 3268 084c 00       		.byte	0
 3269 084d 12       		.uleb128 0x12
 3270 084e 30050000 		.4byte	.LASF92
 3271 0852 01       		.byte	0x1
 3272 0853 0105     		.2byte	0x501
 3273 0855 00000000 		.4byte	.LFB61
 3274 0859 70000000 		.4byte	.LFE61-.LFB61
 3275 085d 01       		.uleb128 0x1
 3276 085e 9C       		.byte	0x9c
 3277 085f 91080000 		.4byte	0x891
 3278 0863 14       		.uleb128 0x14
 3279 0864 24070000 		.4byte	.LASF51
 3280 0868 01       		.byte	0x1
 3281 0869 0105     		.2byte	0x501
 3282 086b 83000000 		.4byte	0x83
 3283 086f 02       		.uleb128 0x2
 3284 0870 91       		.byte	0x91
 3285 0871 6C       		.sleb128 -20
 3286 0872 13       		.uleb128 0x13
 3287 0873 BD010000 		.4byte	.LASF88
 3288 0877 01       		.byte	0x1
 3289 0878 0405     		.2byte	0x504
 3290 087a 6B000000 		.4byte	0x6b
 3291 087e 02       		.uleb128 0x2
 3292 087f 91       		.byte	0x91
 3293 0880 77       		.sleb128 -9
 3294 0881 13       		.uleb128 0x13
 3295 0882 79080000 		.4byte	.LASF89
 3296 0886 01       		.byte	0x1
 3297 0887 0505     		.2byte	0x505
 3298 0889 6B000000 		.4byte	0x6b
 3299 088d 02       		.uleb128 0x2
 3300 088e 91       		.byte	0x91
 3301 088f 76       		.sleb128 -10
 3302 0890 00       		.byte	0
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 109


 3303 0891 12       		.uleb128 0x12
 3304 0892 A6010000 		.4byte	.LASF93
 3305 0896 01       		.byte	0x1
 3306 0897 2C05     		.2byte	0x52c
 3307 0899 00000000 		.4byte	.LFB62
 3308 089d 70000000 		.4byte	.LFE62-.LFB62
 3309 08a1 01       		.uleb128 0x1
 3310 08a2 9C       		.byte	0x9c
 3311 08a3 D5080000 		.4byte	0x8d5
 3312 08a7 14       		.uleb128 0x14
 3313 08a8 24070000 		.4byte	.LASF51
 3314 08ac 01       		.byte	0x1
 3315 08ad 2C05     		.2byte	0x52c
 3316 08af 83000000 		.4byte	0x83
 3317 08b3 02       		.uleb128 0x2
 3318 08b4 91       		.byte	0x91
 3319 08b5 6C       		.sleb128 -20
 3320 08b6 13       		.uleb128 0x13
 3321 08b7 BD010000 		.4byte	.LASF88
 3322 08bb 01       		.byte	0x1
 3323 08bc 2E05     		.2byte	0x52e
 3324 08be 6B000000 		.4byte	0x6b
 3325 08c2 02       		.uleb128 0x2
 3326 08c3 91       		.byte	0x91
 3327 08c4 77       		.sleb128 -9
 3328 08c5 13       		.uleb128 0x13
 3329 08c6 79080000 		.4byte	.LASF89
 3330 08ca 01       		.byte	0x1
 3331 08cb 2F05     		.2byte	0x52f
 3332 08cd 6B000000 		.4byte	0x6b
 3333 08d1 02       		.uleb128 0x2
 3334 08d2 91       		.byte	0x91
 3335 08d3 76       		.sleb128 -10
 3336 08d4 00       		.byte	0
 3337 08d5 15       		.uleb128 0x15
 3338 08d6 EA000000 		.4byte	.LASF94
 3339 08da 01       		.byte	0x1
 3340 08db 4809     		.2byte	0x948
 3341 08dd 77000000 		.4byte	0x77
 3342 08e1 00000000 		.4byte	.LFB63
 3343 08e5 76000000 		.4byte	.LFE63-.LFB63
 3344 08e9 01       		.uleb128 0x1
 3345 08ea 9C       		.byte	0x9c
 3346 08eb 29090000 		.4byte	0x929
 3347 08ef 18       		.uleb128 0x18
 3348 08f0 783100   		.ascii	"x1\000"
 3349 08f3 01       		.byte	0x1
 3350 08f4 4809     		.2byte	0x948
 3351 08f6 77000000 		.4byte	0x77
 3352 08fa 02       		.uleb128 0x2
 3353 08fb 91       		.byte	0x91
 3354 08fc 66       		.sleb128 -26
 3355 08fd 18       		.uleb128 0x18
 3356 08fe 783200   		.ascii	"x2\000"
 3357 0901 01       		.byte	0x1
 3358 0902 4809     		.2byte	0x948
 3359 0904 77000000 		.4byte	0x77
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 110


 3360 0908 02       		.uleb128 0x2
 3361 0909 91       		.byte	0x91
 3362 090a 64       		.sleb128 -28
 3363 090b 18       		.uleb128 0x18
 3364 090c 783300   		.ascii	"x3\000"
 3365 090f 01       		.byte	0x1
 3366 0910 4809     		.2byte	0x948
 3367 0912 77000000 		.4byte	0x77
 3368 0916 02       		.uleb128 0x2
 3369 0917 91       		.byte	0x91
 3370 0918 62       		.sleb128 -30
 3371 0919 11       		.uleb128 0x11
 3372 091a 746D7000 		.ascii	"tmp\000"
 3373 091e 01       		.byte	0x1
 3374 091f 4A09     		.2byte	0x94a
 3375 0921 77000000 		.4byte	0x77
 3376 0925 02       		.uleb128 0x2
 3377 0926 91       		.byte	0x91
 3378 0927 6E       		.sleb128 -18
 3379 0928 00       		.byte	0
 3380 0929 17       		.uleb128 0x17
 3381 092a 35070000 		.4byte	.LASF95
 3382 092e 01       		.byte	0x1
 3383 092f 7909     		.2byte	0x979
 3384 0931 77000000 		.4byte	0x77
 3385 0935 00000000 		.4byte	.LFB64
 3386 0939 46000000 		.4byte	.LFE64-.LFB64
 3387 093d 01       		.uleb128 0x1
 3388 093e 9C       		.byte	0x9c
 3389 093f 7D090000 		.4byte	0x97d
 3390 0943 18       		.uleb128 0x18
 3391 0944 783100   		.ascii	"x1\000"
 3392 0947 01       		.byte	0x1
 3393 0948 7909     		.2byte	0x979
 3394 094a 77000000 		.4byte	0x77
 3395 094e 02       		.uleb128 0x2
 3396 094f 91       		.byte	0x91
 3397 0950 66       		.sleb128 -26
 3398 0951 18       		.uleb128 0x18
 3399 0952 783200   		.ascii	"x2\000"
 3400 0955 01       		.byte	0x1
 3401 0956 7909     		.2byte	0x979
 3402 0958 77000000 		.4byte	0x77
 3403 095c 02       		.uleb128 0x2
 3404 095d 91       		.byte	0x91
 3405 095e 64       		.sleb128 -28
 3406 095f 18       		.uleb128 0x18
 3407 0960 783300   		.ascii	"x3\000"
 3408 0963 01       		.byte	0x1
 3409 0964 7909     		.2byte	0x979
 3410 0966 77000000 		.4byte	0x77
 3411 096a 02       		.uleb128 0x2
 3412 096b 91       		.byte	0x91
 3413 096c 62       		.sleb128 -30
 3414 096d 11       		.uleb128 0x11
 3415 096e 746D7000 		.ascii	"tmp\000"
 3416 0972 01       		.byte	0x1
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 111


 3417 0973 7B09     		.2byte	0x97b
 3418 0975 83000000 		.4byte	0x83
 3419 0979 02       		.uleb128 0x2
 3420 097a 91       		.byte	0x91
 3421 097b 6C       		.sleb128 -20
 3422 097c 00       		.byte	0
 3423 097d 15       		.uleb128 0x15
 3424 097e 62090000 		.4byte	.LASF96
 3425 0982 01       		.byte	0x1
 3426 0983 A90A     		.2byte	0xaa9
 3427 0985 83000000 		.4byte	0x83
 3428 0989 00000000 		.4byte	.LFB65
 3429 098d 1C000000 		.4byte	.LFE65-.LFB65
 3430 0991 01       		.uleb128 0x1
 3431 0992 9C       		.byte	0x9c
 3432 0993 A7090000 		.4byte	0x9a7
 3433 0997 14       		.uleb128 0x14
 3434 0998 15040000 		.4byte	.LASF49
 3435 099c 01       		.byte	0x1
 3436 099d A90A     		.2byte	0xaa9
 3437 099f 83000000 		.4byte	0x83
 3438 09a3 02       		.uleb128 0x2
 3439 09a4 91       		.byte	0x91
 3440 09a5 74       		.sleb128 -12
 3441 09a6 00       		.byte	0
 3442 09a7 15       		.uleb128 0x15
 3443 09a8 5A060000 		.4byte	.LASF97
 3444 09ac 01       		.byte	0x1
 3445 09ad C30A     		.2byte	0xac3
 3446 09af 6B000000 		.4byte	0x6b
 3447 09b3 00000000 		.4byte	.LFB66
 3448 09b7 1C000000 		.4byte	.LFE66-.LFB66
 3449 09bb 01       		.uleb128 0x1
 3450 09bc 9C       		.byte	0x9c
 3451 09bd D1090000 		.4byte	0x9d1
 3452 09c1 14       		.uleb128 0x14
 3453 09c2 15040000 		.4byte	.LASF49
 3454 09c6 01       		.byte	0x1
 3455 09c7 C30A     		.2byte	0xac3
 3456 09c9 83000000 		.4byte	0x83
 3457 09cd 02       		.uleb128 0x2
 3458 09ce 91       		.byte	0x91
 3459 09cf 74       		.sleb128 -12
 3460 09d0 00       		.byte	0
 3461 09d1 15       		.uleb128 0x15
 3462 09d2 D5000000 		.4byte	.LASF98
 3463 09d6 01       		.byte	0x1
 3464 09d7 DD0A     		.2byte	0xadd
 3465 09d9 6B000000 		.4byte	0x6b
 3466 09dd 00000000 		.4byte	.LFB67
 3467 09e1 1C000000 		.4byte	.LFE67-.LFB67
 3468 09e5 01       		.uleb128 0x1
 3469 09e6 9C       		.byte	0x9c
 3470 09e7 FB090000 		.4byte	0x9fb
 3471 09eb 14       		.uleb128 0x14
 3472 09ec 24070000 		.4byte	.LASF51
 3473 09f0 01       		.byte	0x1
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 112


 3474 09f1 DD0A     		.2byte	0xadd
 3475 09f3 83000000 		.4byte	0x83
 3476 09f7 02       		.uleb128 0x2
 3477 09f8 91       		.byte	0x91
 3478 09f9 74       		.sleb128 -12
 3479 09fa 00       		.byte	0
 3480 09fb 19       		.uleb128 0x19
 3481 09fc 7B090000 		.4byte	.LASF99
 3482 0a00 01       		.byte	0x1
 3483 0a01 F70A     		.2byte	0xaf7
 3484 0a03 00000000 		.4byte	.LFB68
 3485 0a07 14000000 		.4byte	.LFE68-.LFB68
 3486 0a0b 01       		.uleb128 0x1
 3487 0a0c 9C       		.byte	0x9c
 3488 0a0d 19       		.uleb128 0x19
 3489 0a0e 67020000 		.4byte	.LASF100
 3490 0a12 01       		.byte	0x1
 3491 0a13 100B     		.2byte	0xb10
 3492 0a15 00000000 		.4byte	.LFB69
 3493 0a19 14000000 		.4byte	.LFE69-.LFB69
 3494 0a1d 01       		.uleb128 0x1
 3495 0a1e 9C       		.byte	0x9c
 3496 0a1f 1A       		.uleb128 0x1a
 3497 0a20 6B000000 		.4byte	0x6b
 3498 0a24 2F0A0000 		.4byte	0xa2f
 3499 0a28 1B       		.uleb128 0x1b
 3500 0a29 A4000000 		.4byte	0xa4
 3501 0a2d 05       		.byte	0x5
 3502 0a2e 00       		.byte	0
 3503 0a2f 0F       		.uleb128 0xf
 3504 0a30 99090000 		.4byte	.LASF101
 3505 0a34 01       		.byte	0x1
 3506 0a35 55       		.byte	0x55
 3507 0a36 1F0A0000 		.4byte	0xa1f
 3508 0a3a 05       		.uleb128 0x5
 3509 0a3b 03       		.byte	0x3
 3510 0a3c 20000000 		.4byte	CapSense_debounceCounter
 3511 0a40 1A       		.uleb128 0x1a
 3512 0a41 77000000 		.4byte	0x77
 3513 0a45 500A0000 		.4byte	0xa50
 3514 0a49 1B       		.uleb128 0x1b
 3515 0a4a A4000000 		.4byte	0xa4
 3516 0a4e 04       		.byte	0x4
 3517 0a4f 00       		.byte	0
 3518 0a50 1C       		.uleb128 0x1c
 3519 0a51 26090000 		.4byte	.LASF102
 3520 0a55 01       		.byte	0x1
 3521 0a56 2C       		.byte	0x2c
 3522 0a57 400A0000 		.4byte	0xa40
 3523 0a5b 1A       		.uleb128 0x1a
 3524 0a5c 6B000000 		.4byte	0x6b
 3525 0a60 6B0A0000 		.4byte	0xa6b
 3526 0a64 1B       		.uleb128 0x1b
 3527 0a65 A4000000 		.4byte	0xa4
 3528 0a69 00       		.byte	0
 3529 0a6a 00       		.byte	0
 3530 0a6b 1C       		.uleb128 0x1c
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 113


 3531 0a6c 25040000 		.4byte	.LASF103
 3532 0a70 01       		.byte	0x1
 3533 0a71 2D       		.byte	0x2d
 3534 0a72 5B0A0000 		.4byte	0xa5b
 3535 0a76 1A       		.uleb128 0x1a
 3536 0a77 6B000000 		.4byte	0x6b
 3537 0a7b 860A0000 		.4byte	0xa86
 3538 0a7f 1B       		.uleb128 0x1b
 3539 0a80 A4000000 		.4byte	0xa4
 3540 0a84 04       		.byte	0x4
 3541 0a85 00       		.byte	0
 3542 0a86 1C       		.uleb128 0x1c
 3543 0a87 8D020000 		.4byte	.LASF104
 3544 0a8b 01       		.byte	0x1
 3545 0a8c 2E       		.byte	0x2e
 3546 0a8d 910A0000 		.4byte	0xa91
 3547 0a91 08       		.uleb128 0x8
 3548 0a92 760A0000 		.4byte	0xa76
 3549 0a96 1D       		.uleb128 0x1d
 3550 0a97 D6010000 		.4byte	.LASF105
 3551 0a9b 01       		.byte	0x1
 3552 0a9c 34       		.byte	0x34
 3553 0a9d 400A0000 		.4byte	0xa40
 3554 0aa1 05       		.uleb128 0x5
 3555 0aa2 03       		.byte	0x3
 3556 0aa3 00000000 		.4byte	CapSense_sensorBaseline
 3557 0aa7 1D       		.uleb128 0x1d
 3558 0aa8 A3030000 		.4byte	.LASF106
 3559 0aac 01       		.byte	0x1
 3560 0aad 35       		.byte	0x35
 3561 0aae 760A0000 		.4byte	0xa76
 3562 0ab2 05       		.uleb128 0x5
 3563 0ab3 03       		.byte	0x3
 3564 0ab4 00000000 		.4byte	CapSense_sensorBaselineLow
 3565 0ab8 1D       		.uleb128 0x1d
 3566 0ab9 17010000 		.4byte	.LASF107
 3567 0abd 01       		.byte	0x1
 3568 0abe 36       		.byte	0x36
 3569 0abf 760A0000 		.4byte	0xa76
 3570 0ac3 05       		.uleb128 0x5
 3571 0ac4 03       		.byte	0x3
 3572 0ac5 00000000 		.4byte	CapSense_sensorSignal
 3573 0ac9 1D       		.uleb128 0x1d
 3574 0aca 41000000 		.4byte	.LASF108
 3575 0ace 01       		.byte	0x1
 3576 0acf 37       		.byte	0x37
 3577 0ad0 5B0A0000 		.4byte	0xa5b
 3578 0ad4 05       		.uleb128 0x5
 3579 0ad5 03       		.byte	0x3
 3580 0ad6 00000000 		.4byte	CapSense_sensorOnMask
 3581 0ada 1D       		.uleb128 0x1d
 3582 0adb 8B070000 		.4byte	.LASF109
 3583 0adf 01       		.byte	0x1
 3584 0ae0 39       		.byte	0x39
 3585 0ae1 760A0000 		.4byte	0xa76
 3586 0ae5 05       		.uleb128 0x5
 3587 0ae6 03       		.byte	0x3
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 114


 3588 0ae7 00000000 		.4byte	CapSense_lowBaselineResetCnt
 3589 0aeb 1D       		.uleb128 0x1d
 3590 0aec 4D020000 		.4byte	.LASF110
 3591 0af0 01       		.byte	0x1
 3592 0af1 3A       		.byte	0x3a
 3593 0af2 760A0000 		.4byte	0xa76
 3594 0af6 05       		.uleb128 0x5
 3595 0af7 03       		.byte	0x3
 3596 0af8 00000000 		.4byte	CapSense_lowBaselineReset
 3597 0afc 1D       		.uleb128 0x1d
 3598 0afd FB050000 		.4byte	.LASF111
 3599 0b01 01       		.byte	0x1
 3600 0b02 49       		.byte	0x49
 3601 0b03 760A0000 		.4byte	0xa76
 3602 0b07 05       		.uleb128 0x5
 3603 0b08 03       		.byte	0x3
 3604 0b09 00000000 		.4byte	CapSense_fingerThreshold
 3605 0b0d 1D       		.uleb128 0x1d
 3606 0b0e E3050000 		.4byte	.LASF112
 3607 0b12 01       		.byte	0x1
 3608 0b13 4B       		.byte	0x4b
 3609 0b14 760A0000 		.4byte	0xa76
 3610 0b18 05       		.uleb128 0x5
 3611 0b19 03       		.byte	0x3
 3612 0b1a 00000000 		.4byte	CapSense_noiseThreshold
 3613 0b1e 1D       		.uleb128 0x1d
 3614 0b1f F5090000 		.4byte	.LASF113
 3615 0b23 01       		.byte	0x1
 3616 0b24 4D       		.byte	0x4d
 3617 0b25 760A0000 		.4byte	0xa76
 3618 0b29 05       		.uleb128 0x5
 3619 0b2a 03       		.byte	0x3
 3620 0b2b 00000000 		.4byte	CapSense_negativeNoiseThreshold
 3621 0b2f 1D       		.uleb128 0x1d
 3622 0b30 17000000 		.4byte	.LASF114
 3623 0b34 01       		.byte	0x1
 3624 0b35 4F       		.byte	0x4f
 3625 0b36 760A0000 		.4byte	0xa76
 3626 0b3a 05       		.uleb128 0x5
 3627 0b3b 03       		.byte	0x3
 3628 0b3c 00000000 		.4byte	CapSense_hysteresis
 3629 0b40 1D       		.uleb128 0x1d
 3630 0b41 DC030000 		.4byte	.LASF115
 3631 0b45 01       		.byte	0x1
 3632 0b46 51       		.byte	0x51
 3633 0b47 760A0000 		.4byte	0xa76
 3634 0b4b 05       		.uleb128 0x5
 3635 0b4c 03       		.byte	0x3
 3636 0b4d 00000000 		.4byte	CapSense_debounce
 3637 0b51 1D       		.uleb128 0x1d
 3638 0b52 2B000000 		.4byte	.LASF116
 3639 0b56 01       		.byte	0x1
 3640 0b57 59       		.byte	0x59
 3641 0b58 620B0000 		.4byte	0xb62
 3642 0b5c 05       		.uleb128 0x5
 3643 0b5d 03       		.byte	0x3
 3644 0b5e 00000000 		.4byte	CapSense_rawDataIndex
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 115


 3645 0b62 08       		.uleb128 0x8
 3646 0b63 760A0000 		.4byte	0xa76
 3647 0b67 1D       		.uleb128 0x1d
 3648 0b68 3F040000 		.4byte	.LASF117
 3649 0b6c 01       		.byte	0x1
 3650 0b6d 61       		.byte	0x61
 3651 0b6e 780B0000 		.4byte	0xb78
 3652 0b72 05       		.uleb128 0x5
 3653 0b73 03       		.byte	0x3
 3654 0b74 00000000 		.4byte	CapSense_numberOfSensors
 3655 0b78 08       		.uleb128 0x8
 3656 0b79 760A0000 		.4byte	0xa76
 3657 0b7d 1D       		.uleb128 0x1d
 3658 0b7e 14060000 		.4byte	.LASF118
 3659 0b82 01       		.byte	0x1
 3660 0b83 1E       		.byte	0x1e
 3661 0b84 400A0000 		.4byte	0xa40
 3662 0b88 05       		.uleb128 0x5
 3663 0b89 03       		.byte	0x3
 3664 0b8a 00000000 		.4byte	CapSense_rawFilterData1
 3665 0b8e 1D       		.uleb128 0x1d
 3666 0b8f 2C060000 		.4byte	.LASF119
 3667 0b93 01       		.byte	0x1
 3668 0b94 1F       		.byte	0x1f
 3669 0b95 400A0000 		.4byte	0xa40
 3670 0b99 05       		.uleb128 0x5
 3671 0b9a 03       		.byte	0x3
 3672 0b9b 00000000 		.4byte	CapSense_rawFilterData2
 3673 0b9f 1C       		.uleb128 0x1c
 3674 0ba0 44060000 		.4byte	.LASF120
 3675 0ba4 01       		.byte	0x1
 3676 0ba5 41       		.byte	0x41
 3677 0ba6 A7020000 		.4byte	0x2a7
 3678 0baa 1D       		.uleb128 0x1d
 3679 0bab EF070000 		.4byte	.LASF121
 3680 0baf 01       		.byte	0x1
 3681 0bb0 45       		.byte	0x45
 3682 0bb1 6B000000 		.4byte	0x6b
 3683 0bb5 05       		.uleb128 0x5
 3684 0bb6 03       		.byte	0x3
 3685 0bb7 00000000 		.4byte	CapSense_enableRawFilters
 3686 0bbb 00       		.byte	0
 3687              		.section	.debug_abbrev,"",%progbits
 3688              	.Ldebug_abbrev0:
 3689 0000 01       		.uleb128 0x1
 3690 0001 11       		.uleb128 0x11
 3691 0002 01       		.byte	0x1
 3692 0003 25       		.uleb128 0x25
 3693 0004 0E       		.uleb128 0xe
 3694 0005 13       		.uleb128 0x13
 3695 0006 0B       		.uleb128 0xb
 3696 0007 03       		.uleb128 0x3
 3697 0008 0E       		.uleb128 0xe
 3698 0009 1B       		.uleb128 0x1b
 3699 000a 0E       		.uleb128 0xe
 3700 000b 55       		.uleb128 0x55
 3701 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 116


 3702 000d 11       		.uleb128 0x11
 3703 000e 01       		.uleb128 0x1
 3704 000f 10       		.uleb128 0x10
 3705 0010 17       		.uleb128 0x17
 3706 0011 00       		.byte	0
 3707 0012 00       		.byte	0
 3708 0013 02       		.uleb128 0x2
 3709 0014 24       		.uleb128 0x24
 3710 0015 00       		.byte	0
 3711 0016 0B       		.uleb128 0xb
 3712 0017 0B       		.uleb128 0xb
 3713 0018 3E       		.uleb128 0x3e
 3714 0019 0B       		.uleb128 0xb
 3715 001a 03       		.uleb128 0x3
 3716 001b 0E       		.uleb128 0xe
 3717 001c 00       		.byte	0
 3718 001d 00       		.byte	0
 3719 001e 03       		.uleb128 0x3
 3720 001f 24       		.uleb128 0x24
 3721 0020 00       		.byte	0
 3722 0021 0B       		.uleb128 0xb
 3723 0022 0B       		.uleb128 0xb
 3724 0023 3E       		.uleb128 0x3e
 3725 0024 0B       		.uleb128 0xb
 3726 0025 03       		.uleb128 0x3
 3727 0026 08       		.uleb128 0x8
 3728 0027 00       		.byte	0
 3729 0028 00       		.byte	0
 3730 0029 04       		.uleb128 0x4
 3731 002a 16       		.uleb128 0x16
 3732 002b 00       		.byte	0
 3733 002c 03       		.uleb128 0x3
 3734 002d 0E       		.uleb128 0xe
 3735 002e 3A       		.uleb128 0x3a
 3736 002f 0B       		.uleb128 0xb
 3737 0030 3B       		.uleb128 0x3b
 3738 0031 05       		.uleb128 0x5
 3739 0032 49       		.uleb128 0x49
 3740 0033 13       		.uleb128 0x13
 3741 0034 00       		.byte	0
 3742 0035 00       		.byte	0
 3743 0036 05       		.uleb128 0x5
 3744 0037 13       		.uleb128 0x13
 3745 0038 01       		.byte	0x1
 3746 0039 0B       		.uleb128 0xb
 3747 003a 0B       		.uleb128 0xb
 3748 003b 3A       		.uleb128 0x3a
 3749 003c 0B       		.uleb128 0xb
 3750 003d 3B       		.uleb128 0x3b
 3751 003e 0B       		.uleb128 0xb
 3752 003f 01       		.uleb128 0x1
 3753 0040 13       		.uleb128 0x13
 3754 0041 00       		.byte	0
 3755 0042 00       		.byte	0
 3756 0043 06       		.uleb128 0x6
 3757 0044 0D       		.uleb128 0xd
 3758 0045 00       		.byte	0
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 117


 3759 0046 03       		.uleb128 0x3
 3760 0047 0E       		.uleb128 0xe
 3761 0048 3A       		.uleb128 0x3a
 3762 0049 0B       		.uleb128 0xb
 3763 004a 3B       		.uleb128 0x3b
 3764 004b 0B       		.uleb128 0xb
 3765 004c 49       		.uleb128 0x49
 3766 004d 13       		.uleb128 0x13
 3767 004e 38       		.uleb128 0x38
 3768 004f 0B       		.uleb128 0xb
 3769 0050 00       		.byte	0
 3770 0051 00       		.byte	0
 3771 0052 07       		.uleb128 0x7
 3772 0053 0F       		.uleb128 0xf
 3773 0054 00       		.byte	0
 3774 0055 0B       		.uleb128 0xb
 3775 0056 0B       		.uleb128 0xb
 3776 0057 49       		.uleb128 0x49
 3777 0058 13       		.uleb128 0x13
 3778 0059 00       		.byte	0
 3779 005a 00       		.byte	0
 3780 005b 08       		.uleb128 0x8
 3781 005c 26       		.uleb128 0x26
 3782 005d 00       		.byte	0
 3783 005e 49       		.uleb128 0x49
 3784 005f 13       		.uleb128 0x13
 3785 0060 00       		.byte	0
 3786 0061 00       		.byte	0
 3787 0062 09       		.uleb128 0x9
 3788 0063 15       		.uleb128 0x15
 3789 0064 01       		.byte	0x1
 3790 0065 27       		.uleb128 0x27
 3791 0066 19       		.uleb128 0x19
 3792 0067 49       		.uleb128 0x49
 3793 0068 13       		.uleb128 0x13
 3794 0069 01       		.uleb128 0x1
 3795 006a 13       		.uleb128 0x13
 3796 006b 00       		.byte	0
 3797 006c 00       		.byte	0
 3798 006d 0A       		.uleb128 0xa
 3799 006e 05       		.uleb128 0x5
 3800 006f 00       		.byte	0
 3801 0070 49       		.uleb128 0x49
 3802 0071 13       		.uleb128 0x13
 3803 0072 00       		.byte	0
 3804 0073 00       		.byte	0
 3805 0074 0B       		.uleb128 0xb
 3806 0075 15       		.uleb128 0x15
 3807 0076 01       		.byte	0x1
 3808 0077 27       		.uleb128 0x27
 3809 0078 19       		.uleb128 0x19
 3810 0079 01       		.uleb128 0x1
 3811 007a 13       		.uleb128 0x13
 3812 007b 00       		.byte	0
 3813 007c 00       		.byte	0
 3814 007d 0C       		.uleb128 0xc
 3815 007e 16       		.uleb128 0x16
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 118


 3816 007f 00       		.byte	0
 3817 0080 03       		.uleb128 0x3
 3818 0081 0E       		.uleb128 0xe
 3819 0082 3A       		.uleb128 0x3a
 3820 0083 0B       		.uleb128 0xb
 3821 0084 3B       		.uleb128 0x3b
 3822 0085 0B       		.uleb128 0xb
 3823 0086 49       		.uleb128 0x49
 3824 0087 13       		.uleb128 0x13
 3825 0088 00       		.byte	0
 3826 0089 00       		.byte	0
 3827 008a 0D       		.uleb128 0xd
 3828 008b 2E       		.uleb128 0x2e
 3829 008c 01       		.byte	0x1
 3830 008d 3F       		.uleb128 0x3f
 3831 008e 19       		.uleb128 0x19
 3832 008f 03       		.uleb128 0x3
 3833 0090 0E       		.uleb128 0xe
 3834 0091 3A       		.uleb128 0x3a
 3835 0092 0B       		.uleb128 0xb
 3836 0093 3B       		.uleb128 0x3b
 3837 0094 0B       		.uleb128 0xb
 3838 0095 27       		.uleb128 0x27
 3839 0096 19       		.uleb128 0x19
 3840 0097 11       		.uleb128 0x11
 3841 0098 01       		.uleb128 0x1
 3842 0099 12       		.uleb128 0x12
 3843 009a 06       		.uleb128 0x6
 3844 009b 40       		.uleb128 0x40
 3845 009c 18       		.uleb128 0x18
 3846 009d 9742     		.uleb128 0x2117
 3847 009f 19       		.uleb128 0x19
 3848 00a0 01       		.uleb128 0x1
 3849 00a1 13       		.uleb128 0x13
 3850 00a2 00       		.byte	0
 3851 00a3 00       		.byte	0
 3852 00a4 0E       		.uleb128 0xe
 3853 00a5 05       		.uleb128 0x5
 3854 00a6 00       		.byte	0
 3855 00a7 03       		.uleb128 0x3
 3856 00a8 0E       		.uleb128 0xe
 3857 00a9 3A       		.uleb128 0x3a
 3858 00aa 0B       		.uleb128 0xb
 3859 00ab 3B       		.uleb128 0x3b
 3860 00ac 0B       		.uleb128 0xb
 3861 00ad 49       		.uleb128 0x49
 3862 00ae 13       		.uleb128 0x13
 3863 00af 02       		.uleb128 0x2
 3864 00b0 18       		.uleb128 0x18
 3865 00b1 00       		.byte	0
 3866 00b2 00       		.byte	0
 3867 00b3 0F       		.uleb128 0xf
 3868 00b4 34       		.uleb128 0x34
 3869 00b5 00       		.byte	0
 3870 00b6 03       		.uleb128 0x3
 3871 00b7 0E       		.uleb128 0xe
 3872 00b8 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 119


 3873 00b9 0B       		.uleb128 0xb
 3874 00ba 3B       		.uleb128 0x3b
 3875 00bb 0B       		.uleb128 0xb
 3876 00bc 49       		.uleb128 0x49
 3877 00bd 13       		.uleb128 0x13
 3878 00be 02       		.uleb128 0x2
 3879 00bf 18       		.uleb128 0x18
 3880 00c0 00       		.byte	0
 3881 00c1 00       		.byte	0
 3882 00c2 10       		.uleb128 0x10
 3883 00c3 2E       		.uleb128 0x2e
 3884 00c4 01       		.byte	0x1
 3885 00c5 3F       		.uleb128 0x3f
 3886 00c6 19       		.uleb128 0x19
 3887 00c7 03       		.uleb128 0x3
 3888 00c8 0E       		.uleb128 0xe
 3889 00c9 3A       		.uleb128 0x3a
 3890 00ca 0B       		.uleb128 0xb
 3891 00cb 3B       		.uleb128 0x3b
 3892 00cc 0B       		.uleb128 0xb
 3893 00cd 27       		.uleb128 0x27
 3894 00ce 19       		.uleb128 0x19
 3895 00cf 11       		.uleb128 0x11
 3896 00d0 01       		.uleb128 0x1
 3897 00d1 12       		.uleb128 0x12
 3898 00d2 06       		.uleb128 0x6
 3899 00d3 40       		.uleb128 0x40
 3900 00d4 18       		.uleb128 0x18
 3901 00d5 9642     		.uleb128 0x2116
 3902 00d7 19       		.uleb128 0x19
 3903 00d8 01       		.uleb128 0x1
 3904 00d9 13       		.uleb128 0x13
 3905 00da 00       		.byte	0
 3906 00db 00       		.byte	0
 3907 00dc 11       		.uleb128 0x11
 3908 00dd 34       		.uleb128 0x34
 3909 00de 00       		.byte	0
 3910 00df 03       		.uleb128 0x3
 3911 00e0 08       		.uleb128 0x8
 3912 00e1 3A       		.uleb128 0x3a
 3913 00e2 0B       		.uleb128 0xb
 3914 00e3 3B       		.uleb128 0x3b
 3915 00e4 05       		.uleb128 0x5
 3916 00e5 49       		.uleb128 0x49
 3917 00e6 13       		.uleb128 0x13
 3918 00e7 02       		.uleb128 0x2
 3919 00e8 18       		.uleb128 0x18
 3920 00e9 00       		.byte	0
 3921 00ea 00       		.byte	0
 3922 00eb 12       		.uleb128 0x12
 3923 00ec 2E       		.uleb128 0x2e
 3924 00ed 01       		.byte	0x1
 3925 00ee 3F       		.uleb128 0x3f
 3926 00ef 19       		.uleb128 0x19
 3927 00f0 03       		.uleb128 0x3
 3928 00f1 0E       		.uleb128 0xe
 3929 00f2 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 120


 3930 00f3 0B       		.uleb128 0xb
 3931 00f4 3B       		.uleb128 0x3b
 3932 00f5 05       		.uleb128 0x5
 3933 00f6 27       		.uleb128 0x27
 3934 00f7 19       		.uleb128 0x19
 3935 00f8 11       		.uleb128 0x11
 3936 00f9 01       		.uleb128 0x1
 3937 00fa 12       		.uleb128 0x12
 3938 00fb 06       		.uleb128 0x6
 3939 00fc 40       		.uleb128 0x40
 3940 00fd 18       		.uleb128 0x18
 3941 00fe 9642     		.uleb128 0x2116
 3942 0100 19       		.uleb128 0x19
 3943 0101 01       		.uleb128 0x1
 3944 0102 13       		.uleb128 0x13
 3945 0103 00       		.byte	0
 3946 0104 00       		.byte	0
 3947 0105 13       		.uleb128 0x13
 3948 0106 34       		.uleb128 0x34
 3949 0107 00       		.byte	0
 3950 0108 03       		.uleb128 0x3
 3951 0109 0E       		.uleb128 0xe
 3952 010a 3A       		.uleb128 0x3a
 3953 010b 0B       		.uleb128 0xb
 3954 010c 3B       		.uleb128 0x3b
 3955 010d 05       		.uleb128 0x5
 3956 010e 49       		.uleb128 0x49
 3957 010f 13       		.uleb128 0x13
 3958 0110 02       		.uleb128 0x2
 3959 0111 18       		.uleb128 0x18
 3960 0112 00       		.byte	0
 3961 0113 00       		.byte	0
 3962 0114 14       		.uleb128 0x14
 3963 0115 05       		.uleb128 0x5
 3964 0116 00       		.byte	0
 3965 0117 03       		.uleb128 0x3
 3966 0118 0E       		.uleb128 0xe
 3967 0119 3A       		.uleb128 0x3a
 3968 011a 0B       		.uleb128 0xb
 3969 011b 3B       		.uleb128 0x3b
 3970 011c 05       		.uleb128 0x5
 3971 011d 49       		.uleb128 0x49
 3972 011e 13       		.uleb128 0x13
 3973 011f 02       		.uleb128 0x2
 3974 0120 18       		.uleb128 0x18
 3975 0121 00       		.byte	0
 3976 0122 00       		.byte	0
 3977 0123 15       		.uleb128 0x15
 3978 0124 2E       		.uleb128 0x2e
 3979 0125 01       		.byte	0x1
 3980 0126 3F       		.uleb128 0x3f
 3981 0127 19       		.uleb128 0x19
 3982 0128 03       		.uleb128 0x3
 3983 0129 0E       		.uleb128 0xe
 3984 012a 3A       		.uleb128 0x3a
 3985 012b 0B       		.uleb128 0xb
 3986 012c 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 121


 3987 012d 05       		.uleb128 0x5
 3988 012e 27       		.uleb128 0x27
 3989 012f 19       		.uleb128 0x19
 3990 0130 49       		.uleb128 0x49
 3991 0131 13       		.uleb128 0x13
 3992 0132 11       		.uleb128 0x11
 3993 0133 01       		.uleb128 0x1
 3994 0134 12       		.uleb128 0x12
 3995 0135 06       		.uleb128 0x6
 3996 0136 40       		.uleb128 0x40
 3997 0137 18       		.uleb128 0x18
 3998 0138 9742     		.uleb128 0x2117
 3999 013a 19       		.uleb128 0x19
 4000 013b 01       		.uleb128 0x1
 4001 013c 13       		.uleb128 0x13
 4002 013d 00       		.byte	0
 4003 013e 00       		.byte	0
 4004 013f 16       		.uleb128 0x16
 4005 0140 2E       		.uleb128 0x2e
 4006 0141 01       		.byte	0x1
 4007 0142 3F       		.uleb128 0x3f
 4008 0143 19       		.uleb128 0x19
 4009 0144 03       		.uleb128 0x3
 4010 0145 0E       		.uleb128 0xe
 4011 0146 3A       		.uleb128 0x3a
 4012 0147 0B       		.uleb128 0xb
 4013 0148 3B       		.uleb128 0x3b
 4014 0149 05       		.uleb128 0x5
 4015 014a 27       		.uleb128 0x27
 4016 014b 19       		.uleb128 0x19
 4017 014c 11       		.uleb128 0x11
 4018 014d 01       		.uleb128 0x1
 4019 014e 12       		.uleb128 0x12
 4020 014f 06       		.uleb128 0x6
 4021 0150 40       		.uleb128 0x40
 4022 0151 18       		.uleb128 0x18
 4023 0152 9742     		.uleb128 0x2117
 4024 0154 19       		.uleb128 0x19
 4025 0155 01       		.uleb128 0x1
 4026 0156 13       		.uleb128 0x13
 4027 0157 00       		.byte	0
 4028 0158 00       		.byte	0
 4029 0159 17       		.uleb128 0x17
 4030 015a 2E       		.uleb128 0x2e
 4031 015b 01       		.byte	0x1
 4032 015c 3F       		.uleb128 0x3f
 4033 015d 19       		.uleb128 0x19
 4034 015e 03       		.uleb128 0x3
 4035 015f 0E       		.uleb128 0xe
 4036 0160 3A       		.uleb128 0x3a
 4037 0161 0B       		.uleb128 0xb
 4038 0162 3B       		.uleb128 0x3b
 4039 0163 05       		.uleb128 0x5
 4040 0164 27       		.uleb128 0x27
 4041 0165 19       		.uleb128 0x19
 4042 0166 49       		.uleb128 0x49
 4043 0167 13       		.uleb128 0x13
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 122


 4044 0168 11       		.uleb128 0x11
 4045 0169 01       		.uleb128 0x1
 4046 016a 12       		.uleb128 0x12
 4047 016b 06       		.uleb128 0x6
 4048 016c 40       		.uleb128 0x40
 4049 016d 18       		.uleb128 0x18
 4050 016e 9642     		.uleb128 0x2116
 4051 0170 19       		.uleb128 0x19
 4052 0171 01       		.uleb128 0x1
 4053 0172 13       		.uleb128 0x13
 4054 0173 00       		.byte	0
 4055 0174 00       		.byte	0
 4056 0175 18       		.uleb128 0x18
 4057 0176 05       		.uleb128 0x5
 4058 0177 00       		.byte	0
 4059 0178 03       		.uleb128 0x3
 4060 0179 08       		.uleb128 0x8
 4061 017a 3A       		.uleb128 0x3a
 4062 017b 0B       		.uleb128 0xb
 4063 017c 3B       		.uleb128 0x3b
 4064 017d 05       		.uleb128 0x5
 4065 017e 49       		.uleb128 0x49
 4066 017f 13       		.uleb128 0x13
 4067 0180 02       		.uleb128 0x2
 4068 0181 18       		.uleb128 0x18
 4069 0182 00       		.byte	0
 4070 0183 00       		.byte	0
 4071 0184 19       		.uleb128 0x19
 4072 0185 2E       		.uleb128 0x2e
 4073 0186 00       		.byte	0
 4074 0187 3F       		.uleb128 0x3f
 4075 0188 19       		.uleb128 0x19
 4076 0189 03       		.uleb128 0x3
 4077 018a 0E       		.uleb128 0xe
 4078 018b 3A       		.uleb128 0x3a
 4079 018c 0B       		.uleb128 0xb
 4080 018d 3B       		.uleb128 0x3b
 4081 018e 05       		.uleb128 0x5
 4082 018f 27       		.uleb128 0x27
 4083 0190 19       		.uleb128 0x19
 4084 0191 11       		.uleb128 0x11
 4085 0192 01       		.uleb128 0x1
 4086 0193 12       		.uleb128 0x12
 4087 0194 06       		.uleb128 0x6
 4088 0195 40       		.uleb128 0x40
 4089 0196 18       		.uleb128 0x18
 4090 0197 9742     		.uleb128 0x2117
 4091 0199 19       		.uleb128 0x19
 4092 019a 00       		.byte	0
 4093 019b 00       		.byte	0
 4094 019c 1A       		.uleb128 0x1a
 4095 019d 01       		.uleb128 0x1
 4096 019e 01       		.byte	0x1
 4097 019f 49       		.uleb128 0x49
 4098 01a0 13       		.uleb128 0x13
 4099 01a1 01       		.uleb128 0x1
 4100 01a2 13       		.uleb128 0x13
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 123


 4101 01a3 00       		.byte	0
 4102 01a4 00       		.byte	0
 4103 01a5 1B       		.uleb128 0x1b
 4104 01a6 21       		.uleb128 0x21
 4105 01a7 00       		.byte	0
 4106 01a8 49       		.uleb128 0x49
 4107 01a9 13       		.uleb128 0x13
 4108 01aa 2F       		.uleb128 0x2f
 4109 01ab 0B       		.uleb128 0xb
 4110 01ac 00       		.byte	0
 4111 01ad 00       		.byte	0
 4112 01ae 1C       		.uleb128 0x1c
 4113 01af 34       		.uleb128 0x34
 4114 01b0 00       		.byte	0
 4115 01b1 03       		.uleb128 0x3
 4116 01b2 0E       		.uleb128 0xe
 4117 01b3 3A       		.uleb128 0x3a
 4118 01b4 0B       		.uleb128 0xb
 4119 01b5 3B       		.uleb128 0x3b
 4120 01b6 0B       		.uleb128 0xb
 4121 01b7 49       		.uleb128 0x49
 4122 01b8 13       		.uleb128 0x13
 4123 01b9 3F       		.uleb128 0x3f
 4124 01ba 19       		.uleb128 0x19
 4125 01bb 3C       		.uleb128 0x3c
 4126 01bc 19       		.uleb128 0x19
 4127 01bd 00       		.byte	0
 4128 01be 00       		.byte	0
 4129 01bf 1D       		.uleb128 0x1d
 4130 01c0 34       		.uleb128 0x34
 4131 01c1 00       		.byte	0
 4132 01c2 03       		.uleb128 0x3
 4133 01c3 0E       		.uleb128 0xe
 4134 01c4 3A       		.uleb128 0x3a
 4135 01c5 0B       		.uleb128 0xb
 4136 01c6 3B       		.uleb128 0x3b
 4137 01c7 0B       		.uleb128 0xb
 4138 01c8 49       		.uleb128 0x49
 4139 01c9 13       		.uleb128 0x13
 4140 01ca 3F       		.uleb128 0x3f
 4141 01cb 19       		.uleb128 0x19
 4142 01cc 02       		.uleb128 0x2
 4143 01cd 18       		.uleb128 0x18
 4144 01ce 00       		.byte	0
 4145 01cf 00       		.byte	0
 4146 01d0 00       		.byte	0
 4147              		.section	.debug_aranges,"",%progbits
 4148 0000 24010000 		.4byte	0x124
 4149 0004 0200     		.2byte	0x2
 4150 0006 00000000 		.4byte	.Ldebug_info0
 4151 000a 04       		.byte	0x4
 4152 000b 00       		.byte	0
 4153 000c 0000     		.2byte	0
 4154 000e 0000     		.2byte	0
 4155 0010 00000000 		.4byte	.LFB36
 4156 0014 98000000 		.4byte	.LFE36-.LFB36
 4157 0018 00000000 		.4byte	.LFB37
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 124


 4158 001c 28000000 		.4byte	.LFE37-.LFB37
 4159 0020 00000000 		.4byte	.LFB38
 4160 0024 26000000 		.4byte	.LFE38-.LFB38
 4161 0028 00000000 		.4byte	.LFB39
 4162 002c 50000000 		.4byte	.LFE39-.LFB39
 4163 0030 00000000 		.4byte	.LFB40
 4164 0034 30020000 		.4byte	.LFE40-.LFB40
 4165 0038 00000000 		.4byte	.LFB41
 4166 003c 1E000000 		.4byte	.LFE41-.LFB41
 4167 0040 00000000 		.4byte	.LFB42
 4168 0044 40000000 		.4byte	.LFE42-.LFB42
 4169 0048 00000000 		.4byte	.LFB43
 4170 004c 70000000 		.4byte	.LFE43-.LFB43
 4171 0050 00000000 		.4byte	.LFB44
 4172 0054 1C000000 		.4byte	.LFE44-.LFB44
 4173 0058 00000000 		.4byte	.LFB45
 4174 005c 24000000 		.4byte	.LFE45-.LFB45
 4175 0060 00000000 		.4byte	.LFB46
 4176 0064 1C000000 		.4byte	.LFE46-.LFB46
 4177 0068 00000000 		.4byte	.LFB47
 4178 006c 24000000 		.4byte	.LFE47-.LFB47
 4179 0070 00000000 		.4byte	.LFB48
 4180 0074 1C000000 		.4byte	.LFE48-.LFB48
 4181 0078 00000000 		.4byte	.LFB49
 4182 007c 1C000000 		.4byte	.LFE49-.LFB49
 4183 0080 00000000 		.4byte	.LFB50
 4184 0084 1C000000 		.4byte	.LFE50-.LFB50
 4185 0088 00000000 		.4byte	.LFB51
 4186 008c 1C000000 		.4byte	.LFE51-.LFB51
 4187 0090 00000000 		.4byte	.LFB52
 4188 0094 24000000 		.4byte	.LFE52-.LFB52
 4189 0098 00000000 		.4byte	.LFB53
 4190 009c 24000000 		.4byte	.LFE53-.LFB53
 4191 00a0 00000000 		.4byte	.LFB54
 4192 00a4 24000000 		.4byte	.LFE54-.LFB54
 4193 00a8 00000000 		.4byte	.LFB55
 4194 00ac 24000000 		.4byte	.LFE55-.LFB55
 4195 00b0 00000000 		.4byte	.LFB56
 4196 00b4 24000000 		.4byte	.LFE56-.LFB56
 4197 00b8 00000000 		.4byte	.LFB57
 4198 00bc 24000000 		.4byte	.LFE57-.LFB57
 4199 00c0 00000000 		.4byte	.LFB58
 4200 00c4 34010000 		.4byte	.LFE58-.LFB58
 4201 00c8 00000000 		.4byte	.LFB59
 4202 00cc 58000000 		.4byte	.LFE59-.LFB59
 4203 00d0 00000000 		.4byte	.LFB60
 4204 00d4 36000000 		.4byte	.LFE60-.LFB60
 4205 00d8 00000000 		.4byte	.LFB61
 4206 00dc 70000000 		.4byte	.LFE61-.LFB61
 4207 00e0 00000000 		.4byte	.LFB62
 4208 00e4 70000000 		.4byte	.LFE62-.LFB62
 4209 00e8 00000000 		.4byte	.LFB63
 4210 00ec 76000000 		.4byte	.LFE63-.LFB63
 4211 00f0 00000000 		.4byte	.LFB64
 4212 00f4 46000000 		.4byte	.LFE64-.LFB64
 4213 00f8 00000000 		.4byte	.LFB65
 4214 00fc 1C000000 		.4byte	.LFE65-.LFB65
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 125


 4215 0100 00000000 		.4byte	.LFB66
 4216 0104 1C000000 		.4byte	.LFE66-.LFB66
 4217 0108 00000000 		.4byte	.LFB67
 4218 010c 1C000000 		.4byte	.LFE67-.LFB67
 4219 0110 00000000 		.4byte	.LFB68
 4220 0114 14000000 		.4byte	.LFE68-.LFB68
 4221 0118 00000000 		.4byte	.LFB69
 4222 011c 14000000 		.4byte	.LFE69-.LFB69
 4223 0120 00000000 		.4byte	0
 4224 0124 00000000 		.4byte	0
 4225              		.section	.debug_ranges,"",%progbits
 4226              	.Ldebug_ranges0:
 4227 0000 00000000 		.4byte	.LFB36
 4228 0004 98000000 		.4byte	.LFE36
 4229 0008 00000000 		.4byte	.LFB37
 4230 000c 28000000 		.4byte	.LFE37
 4231 0010 00000000 		.4byte	.LFB38
 4232 0014 26000000 		.4byte	.LFE38
 4233 0018 00000000 		.4byte	.LFB39
 4234 001c 50000000 		.4byte	.LFE39
 4235 0020 00000000 		.4byte	.LFB40
 4236 0024 30020000 		.4byte	.LFE40
 4237 0028 00000000 		.4byte	.LFB41
 4238 002c 1E000000 		.4byte	.LFE41
 4239 0030 00000000 		.4byte	.LFB42
 4240 0034 40000000 		.4byte	.LFE42
 4241 0038 00000000 		.4byte	.LFB43
 4242 003c 70000000 		.4byte	.LFE43
 4243 0040 00000000 		.4byte	.LFB44
 4244 0044 1C000000 		.4byte	.LFE44
 4245 0048 00000000 		.4byte	.LFB45
 4246 004c 24000000 		.4byte	.LFE45
 4247 0050 00000000 		.4byte	.LFB46
 4248 0054 1C000000 		.4byte	.LFE46
 4249 0058 00000000 		.4byte	.LFB47
 4250 005c 24000000 		.4byte	.LFE47
 4251 0060 00000000 		.4byte	.LFB48
 4252 0064 1C000000 		.4byte	.LFE48
 4253 0068 00000000 		.4byte	.LFB49
 4254 006c 1C000000 		.4byte	.LFE49
 4255 0070 00000000 		.4byte	.LFB50
 4256 0074 1C000000 		.4byte	.LFE50
 4257 0078 00000000 		.4byte	.LFB51
 4258 007c 1C000000 		.4byte	.LFE51
 4259 0080 00000000 		.4byte	.LFB52
 4260 0084 24000000 		.4byte	.LFE52
 4261 0088 00000000 		.4byte	.LFB53
 4262 008c 24000000 		.4byte	.LFE53
 4263 0090 00000000 		.4byte	.LFB54
 4264 0094 24000000 		.4byte	.LFE54
 4265 0098 00000000 		.4byte	.LFB55
 4266 009c 24000000 		.4byte	.LFE55
 4267 00a0 00000000 		.4byte	.LFB56
 4268 00a4 24000000 		.4byte	.LFE56
 4269 00a8 00000000 		.4byte	.LFB57
 4270 00ac 24000000 		.4byte	.LFE57
 4271 00b0 00000000 		.4byte	.LFB58
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 126


 4272 00b4 34010000 		.4byte	.LFE58
 4273 00b8 00000000 		.4byte	.LFB59
 4274 00bc 58000000 		.4byte	.LFE59
 4275 00c0 00000000 		.4byte	.LFB60
 4276 00c4 36000000 		.4byte	.LFE60
 4277 00c8 00000000 		.4byte	.LFB61
 4278 00cc 70000000 		.4byte	.LFE61
 4279 00d0 00000000 		.4byte	.LFB62
 4280 00d4 70000000 		.4byte	.LFE62
 4281 00d8 00000000 		.4byte	.LFB63
 4282 00dc 76000000 		.4byte	.LFE63
 4283 00e0 00000000 		.4byte	.LFB64
 4284 00e4 46000000 		.4byte	.LFE64
 4285 00e8 00000000 		.4byte	.LFB65
 4286 00ec 1C000000 		.4byte	.LFE65
 4287 00f0 00000000 		.4byte	.LFB66
 4288 00f4 1C000000 		.4byte	.LFE66
 4289 00f8 00000000 		.4byte	.LFB67
 4290 00fc 1C000000 		.4byte	.LFE67
 4291 0100 00000000 		.4byte	.LFB68
 4292 0104 14000000 		.4byte	.LFE68
 4293 0108 00000000 		.4byte	.LFB69
 4294 010c 14000000 		.4byte	.LFE69
 4295 0110 00000000 		.4byte	0
 4296 0114 00000000 		.4byte	0
 4297              		.section	.debug_line,"",%progbits
 4298              	.Ldebug_line0:
 4299 0000 D4030000 		.section	.debug_str,"MS",%progbits,1
 4299      02005E00 
 4299      00000201 
 4299      FB0E0D00 
 4299      01010101 
 4300              	.LASF10:
 4301 0000 75696E74 		.ascii	"uint16\000"
 4301      313600
 4302              	.LASF58:
 4303 0007 66696C74 		.ascii	"filteredRawData\000"
 4303      65726564 
 4303      52617744 
 4303      61746100 
 4304              	.LASF114:
 4305 0017 43617053 		.ascii	"CapSense_hysteresis\000"
 4305      656E7365 
 4305      5F687973 
 4305      74657265 
 4305      73697300 
 4306              	.LASF116:
 4307 002b 43617053 		.ascii	"CapSense_rawDataIndex\000"
 4307      656E7365 
 4307      5F726177 
 4307      44617461 
 4307      496E6465 
 4308              	.LASF108:
 4309 0041 43617053 		.ascii	"CapSense_sensorOnMask\000"
 4309      656E7365 
 4309      5F73656E 
 4309      736F724F 
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 127


 4309      6E4D6173 
 4310              	.LASF75:
 4311 0057 43617053 		.ascii	"CapSense_GetNegativeNoiseThreshold\000"
 4311      656E7365 
 4311      5F476574 
 4311      4E656761 
 4311      74697665 
 4312              	.LASF85:
 4313 007a 66696E67 		.ascii	"fingerThreshold\000"
 4313      65725468 
 4313      72657368 
 4313      6F6C6400 
 4314              	.LASF79:
 4315 008a 43617053 		.ascii	"CapSense_SetNegativeNoiseThreshold\000"
 4315      656E7365 
 4315      5F536574 
 4315      4E656761 
 4315      74697665 
 4316              	.LASF62:
 4317 00ad 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 4317      656E7365 
 4317      5F557064 
 4317      61746557 
 4317      69646765 
 4318              	.LASF34:
 4319 00cb 70747247 		.ascii	"ptrGetRaw\000"
 4319      65745261 
 4319      7700
 4320              	.LASF98:
 4321 00d5 43617053 		.ascii	"CapSense_GetDebounce\000"
 4321      656E7365 
 4321      5F476574 
 4321      4465626F 
 4321      756E6365 
 4322              	.LASF94:
 4323 00ea 43617053 		.ascii	"CapSense_MedianFilter\000"
 4323      656E7365 
 4323      5F4D6564 
 4323      69616E46 
 4323      696C7465 
 4324              	.LASF7:
 4325 0100 6C6F6E67 		.ascii	"long long unsigned int\000"
 4325      206C6F6E 
 4325      6720756E 
 4325      7369676E 
 4325      65642069 
 4326              	.LASF107:
 4327 0117 43617053 		.ascii	"CapSense_sensorSignal\000"
 4327      656E7365 
 4327      5F73656E 
 4327      736F7253 
 4327      69676E61 
 4328              	.LASF73:
 4329 012d 43617053 		.ascii	"CapSense_GetNoiseThreshold\000"
 4329      656E7365 
 4329      5F476574 
 4329      4E6F6973 
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 128


 4329      65546872 
 4330              	.LASF52:
 4331 0148 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 4331      656E7365 
 4331      5F496E69 
 4331      7469616C 
 4331      697A6545 
 4332              	.LASF61:
 4333 016c 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 4333      656E7365 
 4333      5F557064 
 4333      61746545 
 4333      6E61626C 
 4334              	.LASF6:
 4335 018c 6C6F6E67 		.ascii	"long long int\000"
 4335      206C6F6E 
 4335      6720696E 
 4335      7400
 4336              	.LASF0:
 4337 019a 7369676E 		.ascii	"signed char\000"
 4337      65642063 
 4337      68617200 
 4338              	.LASF93:
 4339 01a6 43617053 		.ascii	"CapSense_DisableWidget\000"
 4339      656E7365 
 4339      5F446973 
 4339      61626C65 
 4339      57696467 
 4340              	.LASF88:
 4341 01bd 72617749 		.ascii	"rawIndex\000"
 4341      6E646578 
 4341      00
 4342              	.LASF33:
 4343 01c6 6E756D62 		.ascii	"numberOfSensors\000"
 4343      65724F66 
 4343      53656E73 
 4343      6F727300 
 4344              	.LASF105:
 4345 01d6 43617053 		.ascii	"CapSense_sensorBaseline\000"
 4345      656E7365 
 4345      5F73656E 
 4345      736F7242 
 4345      6173656C 
 4346              	.LASF21:
 4347 01ee 77696467 		.ascii	"widgetNubmersTbl\000"
 4347      65744E75 
 4347      626D6572 
 4347      7354626C 
 4347      00
 4348              	.LASF68:
 4349 01ff 43617053 		.ascii	"CapSense_GetBaselineData\000"
 4349      656E7365 
 4349      5F476574 
 4349      42617365 
 4349      6C696E65 
 4350              	.LASF90:
 4351 0218 73746174 		.ascii	"state\000"
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 129


 4351      6500
 4352              	.LASF4:
 4353 021e 6C6F6E67 		.ascii	"long int\000"
 4353      20696E74 
 4353      00
 4354              	.LASF91:
 4355 0227 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 4355      656E7365 
 4355      5F436865 
 4355      636B4973 
 4355      416E7957 
 4356              	.LASF9:
 4357 0247 75696E74 		.ascii	"uint8\000"
 4357      3800
 4358              	.LASF110:
 4359 024d 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 4359      656E7365 
 4359      5F6C6F77 
 4359      42617365 
 4359      6C696E65 
 4360              	.LASF100:
 4361 0267 43617053 		.ascii	"CapSense_DisableRawDataFilters\000"
 4361      656E7365 
 4361      5F446973 
 4361      61626C65 
 4361      52617744 
 4362              	.LASF13:
 4363 0286 646F7562 		.ascii	"double\000"
 4363      6C6500
 4364              	.LASF104:
 4365 028d 43617053 		.ascii	"CapSense_widgetNumber\000"
 4365      656E7365 
 4365      5F776964 
 4365      6765744E 
 4365      756D6265 
 4366              	.LASF11:
 4367 02a3 75696E74 		.ascii	"uint32\000"
 4367      333200
 4368              	.LASF86:
 4369 02aa 68797374 		.ascii	"hysteresis\000"
 4369      65726573 
 4369      697300
 4370              	.LASF76:
 4371 02b5 43617053 		.ascii	"CapSense_SetFingerThreshold\000"
 4371      656E7365 
 4371      5F536574 
 4371      46696E67 
 4371      65725468 
 4372              	.LASF80:
 4373 02d1 43617053 		.ascii	"CapSense_SetDebounce\000"
 4373      656E7365 
 4373      5F536574 
 4373      4465626F 
 4373      756E6365 
 4374              	.LASF43:
 4375 02e6 73656E73 		.ascii	"sensetivitySeed\000"
 4375      65746976 
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 130


 4375      69747953 
 4375      65656400 
 4376              	.LASF124:
 4377 02f6 433A5C55 		.ascii	"C:\\Users\\Gaurav\\Documents\\PSoC Creator\\BLE MID"
 4377      73657273 
 4377      5C476175 
 4377      7261765C 
 4377      446F6375 
 4378 0324 495C424C 		.ascii	"I\\BLE_MIDI_iOS.cydsn\000"
 4378      455F4D49 
 4378      44495F69 
 4378      4F532E63 
 4378      7964736E 
 4379              	.LASF42:
 4380 0339 746F7461 		.ascii	"totalSensorsNum\000"
 4380      6C53656E 
 4380      736F7273 
 4380      4E756D00 
 4381              	.LASF71:
 4382 0349 76616C75 		.ascii	"value\000"
 4382      6500
 4383              	.LASF81:
 4384 034f 43617053 		.ascii	"CapSense_SetLowBaselineReset\000"
 4384      656E7365 
 4384      5F536574 
 4384      4C6F7742 
 4384      6173656C 
 4385              	.LASF65:
 4386 036c 6C617374 		.ascii	"lastSensor\000"
 4386      53656E73 
 4386      6F7200
 4387              	.LASF8:
 4388 0377 756E7369 		.ascii	"unsigned int\000"
 4388      676E6564 
 4388      20696E74 
 4388      00
 4389              	.LASF27:
 4390 0384 73616D70 		.ascii	"sampleMaxTbl\000"
 4390      6C654D61 
 4390      7854626C 
 4390      00
 4391              	.LASF5:
 4392 0391 6C6F6E67 		.ascii	"long unsigned int\000"
 4392      20756E73 
 4392      69676E65 
 4392      6420696E 
 4392      7400
 4393              	.LASF106:
 4394 03a3 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 4394      656E7365 
 4394      5F73656E 
 4394      736F7242 
 4394      6173656C 
 4395              	.LASF22:
 4396 03be 7265736F 		.ascii	"resolutionsTbl\000"
 4396      6C757469 
 4396      6F6E7354 
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 131


 4396      626C00
 4397              	.LASF37:
 4398 03cd 70747247 		.ascii	"ptrGetBitValue\000"
 4398      65744269 
 4398      7456616C 
 4398      756500
 4399              	.LASF115:
 4400 03dc 43617053 		.ascii	"CapSense_debounce\000"
 4400      656E7365 
 4400      5F646562 
 4400      6F756E63 
 4400      6500
 4401              	.LASF67:
 4402 03ee 64617461 		.ascii	"data\000"
 4402      00
 4403              	.LASF3:
 4404 03f3 73686F72 		.ascii	"short unsigned int\000"
 4404      7420756E 
 4404      7369676E 
 4404      65642069 
 4404      6E7400
 4405              	.LASF18:
 4406 0406 73656E73 		.ascii	"sensetivityTbl\000"
 4406      65746976 
 4406      69747954 
 4406      626C00
 4407              	.LASF49:
 4408 0415 73656E73 		.ascii	"sensor\000"
 4408      6F7200
 4409              	.LASF45:
 4410 041c 706F696E 		.ascii	"pointers\000"
 4410      74657273 
 4410      00
 4411              	.LASF103:
 4412 0425 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 4412      656E7365 
 4412      5F73656E 
 4412      736F7245 
 4412      6E61626C 
 4413              	.LASF117:
 4414 043f 43617053 		.ascii	"CapSense_numberOfSensors\000"
 4414      656E7365 
 4414      5F6E756D 
 4414      6265724F 
 4414      6653656E 
 4415              	.LASF60:
 4416 0458 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 4416      656E7365 
 4416      5F557064 
 4416      61746553 
 4416      656E736F 
 4417              	.LASF55:
 4418 0476 63616C63 		.ascii	"calc\000"
 4418      00
 4419              	.LASF19:
 4420 047b 63686172 		.ascii	"chargeDivTbl\000"
 4420      67654469 
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 132


 4420      7654626C 
 4420      00
 4421              	.LASF39:
 4422 0488 43617053 		.ascii	"CapSense_CONFIG_TYPE_POINTERS_P4_v2_40\000"
 4422      656E7365 
 4422      5F434F4E 
 4422      4649475F 
 4422      54595045 
 4423              	.LASF26:
 4424 04af 73616D70 		.ascii	"sampleMinTbl\000"
 4424      6C654D69 
 4424      6E54626C 
 4424      00
 4425              	.LASF123:
 4426 04bc 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CapSense_CSHL.c\000"
 4426      6E657261 
 4426      7465645F 
 4426      536F7572 
 4426      63655C50 
 4427              	.LASF69:
 4428 04e5 43617053 		.ascii	"CapSense_GetDiffCountData\000"
 4428      656E7365 
 4428      5F476574 
 4428      44696666 
 4428      436F756E 
 4429              	.LASF23:
 4430 04ff 6E6F6973 		.ascii	"noiseEnvelopeTbl\000"
 4430      65456E76 
 4430      656C6F70 
 4430      6554626C 
 4430      00
 4431              	.LASF83:
 4432 0510 6465626F 		.ascii	"debounce\000"
 4432      756E6365 
 4432      00
 4433              	.LASF44:
 4434 0519 6866636C 		.ascii	"hfclkFreq_MHz\000"
 4434      6B467265 
 4434      715F4D48 
 4434      7A00
 4435              	.LASF15:
 4436 0527 73697A65 		.ascii	"sizetype\000"
 4436      74797065 
 4436      00
 4437              	.LASF92:
 4438 0530 43617053 		.ascii	"CapSense_EnableWidget\000"
 4438      656E7365 
 4438      5F456E61 
 4438      626C6557 
 4438      69646765 
 4439              	.LASF54:
 4440 0546 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold\000"
 4440      656E7365 
 4440      5F557064 
 4440      61746542 
 4440      6173656C 
 4441              	.LASF48:
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 133


 4442 0569 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 4442      656E7365 
 4442      5F496E69 
 4442      7469616C 
 4442      697A6553 
 4443              	.LASF78:
 4444 058b 43617053 		.ascii	"CapSense_SetFingerHysteresis\000"
 4444      656E7365 
 4444      5F536574 
 4444      46696E67 
 4444      65724879 
 4445              	.LASF82:
 4446 05a8 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 4446      656E7365 
 4446      5F436865 
 4446      636B4973 
 4446      53656E73 
 4447              	.LASF16:
 4448 05c5 69646163 		.ascii	"idac1LevelsTbl\000"
 4448      314C6576 
 4448      656C7354 
 4448      626C00
 4449              	.LASF17:
 4450 05d4 69646163 		.ascii	"idac2LevelsTbl\000"
 4450      324C6576 
 4450      656C7354 
 4450      626C00
 4451              	.LASF112:
 4452 05e3 43617053 		.ascii	"CapSense_noiseThreshold\000"
 4452      656E7365 
 4452      5F6E6F69 
 4452      73655468 
 4452      72657368 
 4453              	.LASF111:
 4454 05fb 43617053 		.ascii	"CapSense_fingerThreshold\000"
 4454      656E7365 
 4454      5F66696E 
 4454      67657254 
 4454      68726573 
 4455              	.LASF118:
 4456 0614 43617053 		.ascii	"CapSense_rawFilterData1\000"
 4456      656E7365 
 4456      5F726177 
 4456      46696C74 
 4456      65724461 
 4457              	.LASF119:
 4458 062c 43617053 		.ascii	"CapSense_rawFilterData2\000"
 4458      656E7365 
 4458      5F726177 
 4458      46696C74 
 4458      65724461 
 4459              	.LASF120:
 4460 0644 43617053 		.ascii	"CapSense_config\000"
 4460      656E7365 
 4460      5F636F6E 
 4460      66696700 
 4461              	.LASF12:
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 134


 4462 0654 666C6F61 		.ascii	"float\000"
 4462      7400
 4463              	.LASF97:
 4464 065a 43617053 		.ascii	"CapSense_GetLowBaselineReset\000"
 4464      656E7365 
 4464      5F476574 
 4464      4C6F7742 
 4464      6173656C 
 4465              	.LASF87:
 4466 0677 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 4466      656E7365 
 4466      5F436865 
 4466      636B4973 
 4466      57696467 
 4467              	.LASF25:
 4468 0694 7369676E 		.ascii	"signRegisterTbl\000"
 4468      52656769 
 4468      73746572 
 4468      54626C00 
 4469              	.LASF31:
 4470 06a4 70726573 		.ascii	"prescalerTable\000"
 4470      63616C65 
 4470      72546162 
 4470      6C6500
 4471              	.LASF1:
 4472 06b3 756E7369 		.ascii	"unsigned char\000"
 4472      676E6564 
 4472      20636861 
 4472      7200
 4473              	.LASF50:
 4474 06c1 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 4474      656E7365 
 4474      5F496E69 
 4474      7469616C 
 4474      697A6541 
 4475              	.LASF36:
 4476 06e1 70747252 		.ascii	"ptrReadSensorRaw\000"
 4476      65616453 
 4476      656E736F 
 4476      72526177 
 4476      00
 4477              	.LASF66:
 4478 06f2 43617053 		.ascii	"CapSense_SetBaselineData\000"
 4478      656E7365 
 4478      5F536574 
 4478      42617365 
 4478      6C696E65 
 4479              	.LASF59:
 4480 070b 6E6F6973 		.ascii	"noiseThreshold\000"
 4480      65546872 
 4480      6573686F 
 4480      6C6400
 4481              	.LASF2:
 4482 071a 73686F72 		.ascii	"short int\000"
 4482      7420696E 
 4482      7400
 4483              	.LASF51:
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 135


 4484 0724 77696467 		.ascii	"widget\000"
 4484      657400
 4485              	.LASF20:
 4486 072b 6D6F6444 		.ascii	"modDivTbl\000"
 4486      69765462 
 4486      6C00
 4487              	.LASF95:
 4488 0735 43617053 		.ascii	"CapSense_AveragingFilter\000"
 4488      656E7365 
 4488      5F417665 
 4488      72616769 
 4488      6E674669 
 4489              	.LASF53:
 4490 074e 69735365 		.ascii	"isSensorEnabled\000"
 4490      6E736F72 
 4490      456E6162 
 4490      6C656400 
 4491              	.LASF47:
 4492 075e 43617053 		.ascii	"CapSense_BaseInit\000"
 4492      656E7365 
 4492      5F426173 
 4492      65496E69 
 4492      7400
 4493              	.LASF29:
 4494 0770 6B56616C 		.ascii	"kValueTbl\000"
 4494      75655462 
 4494      6C00
 4495              	.LASF63:
 4496 077a 73656E73 		.ascii	"sensorsPerWidget\000"
 4496      6F727350 
 4496      65725769 
 4496      64676574 
 4496      00
 4497              	.LASF109:
 4498 078b 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 4498      656E7365 
 4498      5F6C6F77 
 4498      42617365 
 4498      6C696E65 
 4499              	.LASF77:
 4500 07a8 43617053 		.ascii	"CapSense_SetNoiseThreshold\000"
 4500      656E7365 
 4500      5F536574 
 4500      4E6F6973 
 4500      65546872 
 4501              	.LASF28:
 4502 07c3 70726576 		.ascii	"previousSampleTbl\000"
 4502      696F7573 
 4502      53616D70 
 4502      6C655462 
 4502      6C00
 4503              	.LASF14:
 4504 07d5 63686172 		.ascii	"char\000"
 4504      00
 4505              	.LASF24:
 4506 07da 72756E6E 		.ascii	"runningDifferenceTbl\000"
 4506      696E6744 
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 136


 4506      69666665 
 4506      72656E63 
 4506      6554626C 
 4507              	.LASF121:
 4508 07ef 43617053 		.ascii	"CapSense_enableRawFilters\000"
 4508      656E7365 
 4508      5F656E61 
 4508      626C6552 
 4508      61774669 
 4509              	.LASF74:
 4510 0809 43617053 		.ascii	"CapSense_GetFingerHysteresis\000"
 4510      656E7365 
 4510      5F476574 
 4510      46696E67 
 4510      65724879 
 4511              	.LASF64:
 4512 0826 66697273 		.ascii	"firstSensor\000"
 4512      7453656E 
 4512      736F7200 
 4513              	.LASF84:
 4514 0832 6465626F 		.ascii	"debounceIndex\000"
 4514      756E6365 
 4514      496E6465 
 4514      7800
 4515              	.LASF72:
 4516 0840 43617053 		.ascii	"CapSense_GetFingerThreshold\000"
 4516      656E7365 
 4516      5F476574 
 4516      46696E67 
 4516      65725468 
 4517              	.LASF35:
 4518 085c 70747250 		.ascii	"ptrPreScan\000"
 4518      72655363 
 4518      616E00
 4519              	.LASF30:
 4520 0867 7363616E 		.ascii	"scanSpeedTbl\000"
 4520      53706565 
 4520      6454626C 
 4520      00
 4521              	.LASF56:
 4522 0874 7369676E 		.ascii	"sign\000"
 4522      00
 4523              	.LASF89:
 4524 0879 6E756D4F 		.ascii	"numOfSensors\000"
 4524      6653656E 
 4524      736F7273 
 4524      00
 4525              	.LASF40:
 4526 0886 746F7461 		.ascii	"totalScanslotsNum\000"
 4526      6C536361 
 4526      6E736C6F 
 4526      74734E75 
 4526      6D00
 4527              	.LASF122:
 4528 0898 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4528      4320342E 
 4528      392E3320 
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 137


 4528      32303135 
 4528      30333033 
 4529 08cb 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 4529      20726576 
 4529      6973696F 
 4529      6E203232 
 4529      31323230 
 4530 08fe 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4530      66756E63 
 4530      74696F6E 
 4530      2D736563 
 4530      74696F6E 
 4531              	.LASF102:
 4532 0926 43617053 		.ascii	"CapSense_sensorRaw\000"
 4532      656E7365 
 4532      5F73656E 
 4532      736F7252 
 4532      617700
 4533              	.LASF70:
 4534 0939 43617053 		.ascii	"CapSense_SetDiffCountData\000"
 4534      656E7365 
 4534      5F536574 
 4534      44696666 
 4534      436F756E 
 4535              	.LASF38:
 4536 0953 70747253 		.ascii	"ptrSetBitValue\000"
 4536      65744269 
 4536      7456616C 
 4536      756500
 4537              	.LASF96:
 4538 0962 43617053 		.ascii	"CapSense_GetWidgetNumber\000"
 4538      656E7365 
 4538      5F476574 
 4538      57696467 
 4538      65744E75 
 4539              	.LASF99:
 4540 097b 43617053 		.ascii	"CapSense_EnableRawDataFilters\000"
 4540      656E7365 
 4540      5F456E61 
 4540      626C6552 
 4540      61774461 
 4541              	.LASF101:
 4542 0999 43617053 		.ascii	"CapSense_debounceCounter\000"
 4542      656E7365 
 4542      5F646562 
 4542      6F756E63 
 4542      65436F75 
 4543              	.LASF46:
 4544 09b2 43617053 		.ascii	"CapSense_CONFIG_TYPE_P4_v2_40\000"
 4544      656E7365 
 4544      5F434F4E 
 4544      4649475F 
 4544      54595045 
 4545              	.LASF32:
 4546 09d0 72617744 		.ascii	"rawDataIndex\000"
 4546      61746149 
 4546      6E646578 
ARM GAS  C:\Users\Gaurav\AppData\Local\Temp\ccLfc68J.s 			page 138


 4546      00
 4547              	.LASF57:
 4548 09dd 74656D70 		.ascii	"tempRaw\000"
 4548      52617700 
 4549              	.LASF41:
 4550 09e5 746F7461 		.ascii	"totalWidgetsNum\000"
 4550      6C576964 
 4550      67657473 
 4550      4E756D00 
 4551              	.LASF113:
 4552 09f5 43617053 		.ascii	"CapSense_negativeNoiseThreshold\000"
 4552      656E7365 
 4552      5F6E6567 
 4552      61746976 
 4552      654E6F69 
 4553              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
